<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杨CC的小世界</title>
  
  <subtitle>杨CC的工具集合</subtitle>
  <link href="https://yancy77.cn/atom.xml" rel="self"/>
  
  <link href="https://yancy77.cn/"/>
  <updated>2024-12-23T16:40:04.885Z</updated>
  <id>https://yancy77.cn/</id>
  
  <author>
    <name>杨CC</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>交流群-需要解密</title>
    <link href="https://yancy77.cn/2024/12/15/36-%E4%BA%A4%E6%B5%81%E7%BE%A4-%E8%A7%A3%E5%AF%86/"/>
    <id>https://yancy77.cn/2024/12/15/36-%E4%BA%A4%E6%B5%81%E7%BE%A4-%E8%A7%A3%E5%AF%86/</id>
    <published>2024-12-15T08:14:46.000Z</published>
    <updated>2024-12-23T16:40:04.885Z</updated>
    
    <content type="html"><![CDATA[<p>商务合作请添加Yancy_76,说明来意.</p><h1 id="QQ交流群"><a href="#QQ交流群" class="headerlink" title="QQ交流群:"></a>QQ交流群:</h1><figure class="highlight text"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">660264846</span><br></pre></td></tr></tbody></table></figure><p>解密方案:base64 + 与佛论禅</p><p>加群flag:</p><p><img src="https://pic.imgdb.cn/item/65f933929f345e8d035bb7c7.png" alt="img"></p><p>解密视频:</p><iframe src="//player.bilibili.com/player.html?bvid=BV1Hu4m1u7mv&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;商务合作请添加Yancy_76,说明来意.&lt;/p&gt;
&lt;h1 id=&quot;QQ交流群&quot;&gt;&lt;a href=&quot;#QQ交流群&quot; class=&quot;headerlink&quot; title=&quot;QQ交流群:&quot;&gt;&lt;/a&gt;QQ交流群:&lt;/h1&gt;&lt;figure class=&quot;highlight text&quot;</summary>
      
    
    
    
    <category term="加密解密" scheme="https://yancy77.cn/categories/%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86/"/>
    
    
    <category term="教程" scheme="https://yancy77.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>64-后渗透免杀工具-RingQ-6月24号更新</title>
    <link href="https://yancy77.cn/2024/06/25/64-%E5%90%8E%E6%B8%97%E9%80%8F%E5%85%8D%E6%9D%80%E5%B7%A5%E5%85%B7/"/>
    <id>https://yancy77.cn/2024/06/25/64-%E5%90%8E%E6%B8%97%E9%80%8F%E5%85%8D%E6%9D%80%E5%B7%A5%E5%85%B7/</id>
    <published>2024-06-25T06:34:18.000Z</published>
    <updated>2024-06-25T07:22:50.241Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RingQ"><a href="#RingQ" class="headerlink" title="RingQ"></a>RingQ</h1><p><a href="https://github.com/T4y1oR/RingQ">https://github.com/T4y1oR/RingQ</a></p><h3 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h3><p>后渗透场景，杀毒软件落地秒了我的大保健 fscan mimikatz … 这还让我怎么内网渗透啊？</p><h3 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h3><p>不用关心怎么实现免杀，也不用浪费时间和精力去对某一款工具进行专项修改达成免杀效果</p><p>助力每一位像我这样的脚本小子快速实现免杀，hvv尽快打穿目标内网</p><p>支持bypass 360 火绒 Windows Defender，一键免杀上线CS、fscan、mimikatz …</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装:"></a>安装:</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要git命令</span></span><br><span class="line">git clone https://github.com/T4y1oR/RingQ.git</span><br><span class="line">cd RingQ</span><br></pre></td></tr></tbody></table></figure><h3 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h3><ol><li><p>你的任意exe工具，放在与Create.exe 同文件夹下运行即可，会生成一个混淆的main.txt文件。</p><p><em>Create.exe 此程序仅用于混淆生成main.txt文件，可能存在报毒(c++你懂的) 添加白名单or虚拟机断网使用都可以。</em></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Create.exe mimikatz.exe</span><br></pre></td></tr></tbody></table></figure></li><li><p>将main.txt和RingQ.exe上传到目标机器，执行 RingQ.exe ~</p><p>内置反沙箱等 执行后有些许延迟 耐心一会儿~</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RingQ.exe</span><br></pre></td></tr></tbody></table></figure></li></ol><h4 id="本地加载"><a href="#本地加载" class="headerlink" title="本地加载"></a>本地加载</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/help-local.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/help-local.gif" alt="img"></a></p><h4 id="远程加载"><a href="#远程加载" class="headerlink" title="远程加载"></a>远程加载</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/help-remote.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/help-remote.gif" alt="img"></a></p><h4 id="绝对路径加载"><a href="#绝对路径加载" class="headerlink" title="绝对路径加载"></a>绝对路径加载</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/help-local-absolute.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/help-local-absolute.gif" alt="img"></a></p><h4 id="CS-shellcode"><a href="#CS-shellcode" class="headerlink" title="CS shellcode"></a>CS shellcode</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/help-shellcode.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/help-shellcode.gif" alt="img"></a></p><h4 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/image-20240511172315793.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/image-20240511172315793.png" alt="img"></a> <a href="https://github.com/T4y1oR/RingQ/blob/main/images/image-20240511172315791.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/image-20240511172315791.png" alt="img"></a></p><h3 id="微步"><a href="#微步" class="headerlink" title="微步"></a><strong>微步</strong></h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/image-20240511162750465.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/image-20240511162750465.png" alt="img"></a></p><h3 id="360（2024-06-24更新）"><a href="#360（2024-06-24更新）" class="headerlink" title="360（2024.06.24更新）"></a><strong>360</strong>（2024.06.24更新）</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/360.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/360.png" alt="img"></a> <a href="https://github.com/T4y1oR/RingQ/blob/main/images/360sandbox.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/360sandbox.png" alt="img"></a></p><h3 id="Windows-Defender（2024-06-24更新）"><a href="#Windows-Defender（2024-06-24更新）" class="headerlink" title="Windows Defender（2024.06.24更新）"></a><strong>Windows Defender</strong>（2024.06.24更新）</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/DF.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/DF.png" alt="img"></a></p><h3 id="火绒6-0（2024-06-24更新）"><a href="#火绒6-0（2024-06-24更新）" class="headerlink" title="火绒6.0（2024.06.24更新）"></a><strong>火绒6.0</strong>（2024.06.24更新）</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/hr.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/hr.png" alt="img"></a></p><h3 id="QVM202-报毒是启发式静态扫描，修改文件资源伪造成正常文件一样即可绕过。"><a href="#QVM202-报毒是启发式静态扫描，修改文件资源伪造成正常文件一样即可绕过。" class="headerlink" title="QVM202 报毒是启发式静态扫描，修改文件资源伪造成正常文件一样即可绕过。"></a>QVM202 报毒是启发式静态扫描，修改文件资源伪造成正常文件一样即可绕过。</h3><h3 id="添加签名、文件名、图标、属性信息、资源…"><a href="#添加签名、文件名、图标、属性信息、资源…" class="headerlink" title="添加签名、文件名、图标、属性信息、资源…"></a>添加签名、文件名、图标、属性信息、资源…</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/Snipaste_2024-05-19_18-15-10.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/Snipaste_2024-05-19_18-15-10.png" alt="img"></a></p><p><em>该报毒不是主程序源码被360干掉，此程序我在2024.01月份就一直在实战中使用。</em></p><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/Snipaste_2024-05-19_18-54-11.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/Snipaste_2024-05-19_18-54-11.png" alt="img"></a></p><h3 id="QVM250（bypass-360-QVM202）"><a href="#QVM250（bypass-360-QVM202）" class="headerlink" title="QVM250（bypass 360 QVM202）"></a><a href="https://github.com/T4y1oR/RingQ/tree/main/QVM250">QVM250</a>（bypass 360 QVM202）</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/QVM250.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/QVM250.gif" alt="img"></a></p><p><em>图标支持自定义，存放在QVM250/main文件夹内即可。</em></p><h2 id="已开源，放心食用，编译后的RingQ-exe是经过bypass-QVM202的-帮助懒惰的脚本小子-如不放心可自行编译使用QVM250即可。"><a href="#已开源，放心食用，编译后的RingQ-exe是经过bypass-QVM202的-帮助懒惰的脚本小子-如不放心可自行编译使用QVM250即可。" class="headerlink" title="已开源，放心食用，编译后的RingQ.exe是经过bypass QVM202的 帮助懒惰的脚本小子 如不放心可自行编译使用QVM250即可。"></a><a href="https://github.com/T4y1oR/RingQ/tree/main/RingQ">已开源</a>，放心食用，编译后的RingQ.exe是经过bypass QVM202的 <del>帮助懒惰的脚本小子</del> 如不放心可自行编译使用<a href="https://github.com/T4y1oR/RingQ/tree/main/QVM250">QVM250</a>即可。</h2><h2 id="后续如报毒属于正正正正正常现象，提issues（报毒截图and时间环境信息）耐心等待更新即可。tips-Star后更新更快！"><a href="#后续如报毒属于正正正正正常现象，提issues（报毒截图and时间环境信息）耐心等待更新即可。tips-Star后更新更快！" class="headerlink" title="后续如报毒属于正正正正正常现象，提issues（报毒截图and时间环境信息）耐心等待更新即可。tips: Star后更新更快！"></a>后续如报毒属于正正正正正常现象，提issues（报毒截图and时间环境信息）耐心等待更新即可。tips: Star后更新更快！</h2><h2 id="项目仅供进行学习研究，切勿用于任何非法未授权的活动，如个人使用违反安全相关法律，后果与本人无关。"><a href="#项目仅供进行学习研究，切勿用于任何非法未授权的活动，如个人使用违反安全相关法律，后果与本人无关。" class="headerlink" title="项目仅供进行学习研究，切勿用于任何非法未授权的活动，如个人使用违反安全相关法律，后果与本人无关。"></a>项目仅供进行学习研究，切勿用于任何非法未授权的活动，如个人使用违反安全相关法律，后果与本人无关。</h2><h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><p>2024.06.24 360QVM202报毒 已更新，火绒标记Hacktools 已更新。</p><p>2024.06.21 360QVM202报毒 已更新，修改部分代码逻辑。</p><p>2024.06.20 360QVM202报毒 已更新，修复执行无响应。</p><p>2024.06.19 更新Banner，优化部分源码。</p><p>2024.06.18 360QVM202报毒 已更新。 <del>最近有点忙啊啊啊</del></p><p>2024.06.11 火绒标记Hacktools 已更新（Create.exe无需更新 仅用于生成混淆文件），360QVM202报毒 已更新。</p><p>2024.06.05 CMD执行卡住BUG 已修复。</p><p>2024.06.04 测试时遗留的StringTable 已删除。</p><p>2024.05.31-06.04 360QVM202报毒 已更新，开源RingQ</p><p>2024.05.30 360QVM202报毒 已更新，新增CS shellcode加载上线</p><p>2024.05.28 更新两种加载方式，远程加载and绝对路径加载</p><p>2024.05.27 360QVM202报毒 已更新</p><p>2024.05.24 RingQ 360QVM202报毒 已更新，Create火绒报毒 已更新，QVM250失效 已更新</p><p>2024.05.23 360QVM202报毒 已更新，火绒报毒mimikatz 已更新</p><p>2024.05.22 QVM250发布，bypass 360QVM202 持续报毒 生成后的文件多执行几次脚本 (开源项目有效期短)</p><p>2024.05.14-21 360QVM202报毒 已更新，这个报毒自行更换图标，添加签名… <del>如果持续出现这个问题，多点star出个专项bypass QVM202脚本</del> Releases新增RingQ.exe原编译出的main.exe文件，方便大家自定义修改降熵</p><p>2024.05.11 项目发布，微步纯绿 企业360云沙箱 火绒 卡巴斯基 <del>没传VT是为了能大家能用久点，大家随意</del></p><h3 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h3><ul><li>unhook</li><li><a href="https://github.com/T4y1oR/LoveSysdiag">不让我传fscan 直接干掉AV？ 项目: LoveSysdiag</a></li><li>远程加载</li><li>bypass QVM202</li><li>…</li></ul><p><a href="https://starchart.cc/T4y1oR/RingQ"><img src="https://camo.githubusercontent.com/6e694bfa45589629c4d573b63885bd187797be07e327eb80296860b2d07c07e7/68747470733a2f2f7374617263686172742e63632f543479316f522f52696e67512e7376673f76617269616e743d6164617074697665" alt="Stargazers over time"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RingQ&quot;&gt;&lt;a href=&quot;#RingQ&quot; class=&quot;headerlink&quot; title=&quot;RingQ&quot;&gt;&lt;/a&gt;RingQ&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/T4y1oR/RingQ&quot;&gt;https://github.c</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    <category term="后渗透免杀工具" scheme="https://yancy77.cn/tags/%E5%90%8E%E6%B8%97%E9%80%8F%E5%85%8D%E6%9D%80%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>63-[娱乐工具]-一键日卫星工具</title>
    <link href="https://yancy77.cn/2024/06/15/63-%E5%A8%B1%E4%B9%90%E5%B7%A5%E5%85%B7-%E4%B8%80%E9%94%AE%E6%97%A5%E5%8D%AB%E6%98%9F%E5%B7%A5%E5%85%B7/"/>
    <id>https://yancy77.cn/2024/06/15/63-%E5%A8%B1%E4%B9%90%E5%B7%A5%E5%85%B7-%E4%B8%80%E9%94%AE%E6%97%A5%E5%8D%AB%E6%98%9F%E5%B7%A5%E5%85%B7/</id>
    <published>2024-06-15T10:34:49.000Z</published>
    <updated>2024-06-15T10:37:04.130Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GodOfHacker"><a href="#GodOfHacker" class="headerlink" title="GodOfHacker"></a>GodOfHacker</h1><p>黑客神器，谁用谁知道！</p><p>github链接:<a href="https://github.com/WWILLV/GodOfHacker">https://github.com/WWILLV/GodOfHacker</a></p><p>下载链接:<a href="https://github.com/WWILLV/GodOfHacker/releases/tag/1.0.1.1">https://github.com/WWILLV/GodOfHacker/releases/tag/1.0.1.1</a></p><h2 id="软件特性"><a href="#软件特性" class="headerlink" title="软件特性"></a>软件特性</h2><p>本软件功能强大，由各种顶级黑客技术结合而成，基本功能覆盖面广，可满足大多数人的基本需求。</p><p>此外软件高度定制化，拥有插件功能，可使用各种强大的插件来丰富软件功能。</p><p>部分功能截图如下</p><p><a href="https://camo.githubusercontent.com/ddebacd371c06a9d8518a5d22506dc22e4b58d3701c5a0a9af4dbbf0215a4744/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393735616333342e706e67"><img src="https://camo.githubusercontent.com/ddebacd371c06a9d8518a5d22506dc22e4b58d3701c5a0a9af4dbbf0215a4744/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393735616333342e706e67" alt="1.png"></a> <a href="https://camo.githubusercontent.com/c15ed418dcd0a5535919db33a87ef93d37f2754cc4141c0ec72c070bd45132e9/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393736356165302e706e67"><img src="https://camo.githubusercontent.com/c15ed418dcd0a5535919db33a87ef93d37f2754cc4141c0ec72c070bd45132e9/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393736356165302e706e67" alt="2.png"></a> <a href="https://camo.githubusercontent.com/4d35992ca8151a20c988fc11fa2992158a46fd8e4927f75c330b18367488cee4/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393736616636372e706e67"><img src="https://camo.githubusercontent.com/4d35992ca8151a20c988fc11fa2992158a46fd8e4927f75c330b18367488cee4/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393736616636372e706e67" alt="3.png"></a> <a href="https://camo.githubusercontent.com/831df3cbd65eb7e6b651a879d5644b5eeac9fdbc3ae688982e6f52ecaac27eb6/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393737383332322e706e67"><img src="https://camo.githubusercontent.com/831df3cbd65eb7e6b651a879d5644b5eeac9fdbc3ae688982e6f52ecaac27eb6/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393737383332322e706e67" alt="4.png"></a></p><p>啥也不说了，贼强！</p><h2 id="Release"><a href="#Release" class="headerlink" title="Release"></a>Release</h2><p>下载在release里</p><p><a href="https://github.com/WWILLV/GodOfHacker/releases/latest">https://github.com/WWILLV/GodOfHacker/releases/latest</a></p><h2 id="目前实现的功能"><a href="#目前实现的功能" class="headerlink" title="目前实现的功能"></a>目前实现的功能</h2><h3 id="日站综合"><a href="#日站综合" class="headerlink" title="日站综合"></a>日站综合</h3><p>根据域名/IP一键攻击或一键使用0day攻击</p><p>可选各种漏洞进行一键攻击、提权</p><p>综合功能：</p><ul><li>挂黑页、DDOS、社管理员全家、日后台、挂马、断室友网</li><li>百度、谷歌批量日站、免费上网、破解各种网吧</li><li>盗QQ号、刷Q币、刷会员、刷心悦3、日运营商免费打电话充话费</li><li>进内网、翻墙、澳门赌场、IP定位、顺着网线砍人</li><li>日教务系统、挖洞、发布漏洞、自动代码审计、读内存</li></ul><h3 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h3><ul><li>根据文件一键破解、逆源码</li><li>一键注释代码（AI）、激活系统、激活所有软件、日穿系统、生成POC</li><li>一键破解手机应用、游戏、汉化、汉化并steam差评+1</li></ul><h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul><li>一键日平台、出flag、偷flag、生成wp、搅屎、断网</li><li>一键交易、改排名、自动做题（AI）</li><li>一键锤爆出题人的头</li><li>一键加CTF交流群</li></ul><h3 id="无线"><a href="#无线" class="headerlink" title="无线"></a>无线</h3><ul><li>一键蹭Wifi、中间人、看妹子手机里的自拍</li><li>一键伪基站、窃听、做钓鱼Wifi</li></ul><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li>一键日无人机、日ATM、偷银行卡、充饭卡、日卫星</li><li>一键保佑服务器不宕机、日穿CPU、烧随机硬件</li></ul><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><ul><li>玄学许愿，出货率UP</li><li>实验性功能（AI）：一键绿帽、自动与妹子尬聊、提升好感度</li></ul><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>支持各种语言（包括但不限于C(C ++)、Java、Python、Ruby、Javascript、php、C#……）</p><p>甚至，可以使用txt、exe等文件做插件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;GodOfHacker&quot;&gt;&lt;a href=&quot;#GodOfHacker&quot; class=&quot;headerlink&quot; title=&quot;GodOfHacker&quot;&gt;&lt;/a&gt;GodOfHacker&lt;/h1&gt;&lt;p&gt;黑客神器，谁用谁知道！&lt;/p&gt;
&lt;p&gt;github链接:&lt;a hre</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="娱乐工具" scheme="https://yancy77.cn/tags/%E5%A8%B1%E4%B9%90%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>62-XSS自动扫描工具 - X-Recon</title>
    <link href="https://yancy77.cn/2024/06/13/62-XSS%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7-X-Recon/"/>
    <id>https://yancy77.cn/2024/06/13/62-XSS%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7-X-Recon/</id>
    <published>2024-06-13T12:24:59.000Z</published>
    <updated>2024-06-13T12:46:05.781Z</updated>
    
    <content type="html"><![CDATA[<p> <a href="https://github.com/joshkar/X-Recon"><img src="https://github.com/joshkar/X-Recon/raw/main/.imgs/banner.jpg" alt="X-侦察"></a></p><h4 id="用于识别网页输入并进行-XSS-扫描的实用程序。"><a href="#用于识别网页输入并进行-XSS-扫描的实用程序。" class="headerlink" title="用于识别网页输入并进行 XSS 扫描的实用程序。"></a>用于识别网页输入并进行 XSS 扫描的实用程序。</h4><p>目前测试PHP开发的网站比较好用,其他自行测试!</p><p><a href="http://python.org/"><img src="https://camo.githubusercontent.com/2b67215b1f14c2b78b7fbbb0f2de3d1fea1276cc68a9f0fab475ce5a329c8214/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d76332d626c7565" alt="img"> </a><a href="https://en.wikipedia.org/wiki/Linux"><img src="https://camo.githubusercontent.com/1ffbafdfd9ce5312d5640c000f8c4e0b559e538f22773c122e358ccd031bee8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506c6174666f726d2d4c696e75782d726564" alt="img"></a></p><h3 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h3><ul><li><strong>子域名发现：</strong><ul><li>检索目标网站的相关子域名并将其整合到白名单中。这些子域名可在抓取过程中使用。</li></ul></li><li><strong>全站链接发现：</strong><ul><li>根据提供的白名单和指定的 收集整个网站的所有链接<code>max_depth</code>。</li></ul></li><li><strong>表单和输入提取：</strong><ul><li>识别提取的链接中找到的所有表单和输入，生成 JSON 输出。此 JSON 输出是利用该工具的 XSS 扫描功能的基础。</li></ul></li><li><strong>XSS 扫描：</strong><ul><li>一旦开始侦察选项返回包含提取条目的自定义 JSON，X-Recon 工具就可以启动 XSS 漏洞测试过程并为您提供所需的结果！</li></ul></li></ul><p><a href="https://github.com/joshkar/X-Recon"><img src="https://github.com/joshkar/X-Recon/raw/main/.imgs/demo1.jpg" alt="X-侦察"></a></p><p><strong>笔记：</strong></p><blockquote><p>目前，扫描功能在 SPA（单页应用程序）Web 应用程序上不可用，我们仅在使用 PHP 开发的网站上进行了测试，取得了显著的效果。未来，我们计划将这些功能整合到该工具中。</p></blockquote><p><a href="https://github.com/joshkar/X-Recon"><img src="https://github.com/joshkar/X-Recon/raw/main/.imgs/demo2.jpg" alt="X-Recon XSS 扫描"></a></p><p><strong>笔记：</strong></p><blockquote><p>此工具会维护一个最新的文件扩展名列表，这些文件扩展名会在探索过程中跳过。默认列表包括图像、样式表和脚本 ( <code>".css",".js",".mp4",".zip","png",".svg",".jpeg",".webp",".jpg",".gif"</code>) 等常见文件类型。您可以通过编辑 setting.json 文件自定义此列表，以更好地满足您的需求。</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/joshkar/X-Recon</span><br><span class="line">$ cd X-Recon</span><br><span class="line">$ python3 -m pip install -r requirements.txt</span><br><span class="line">$ python3 xr.py</span><br></pre></td></tr></tbody></table></figure><h2 id="测试目标："><a href="#测试目标：" class="headerlink" title="测试目标："></a>测试目标：</h2><blockquote><p>您可以在“获取 URL”部分中使用此地址</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://testphp.vulnweb.com</span><br><span class="line">#不可以携带http</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; &lt;a href=&quot;https://github.com/joshkar/X-Recon&quot;&gt;&lt;img src=&quot;https://github.com/joshkar/X-Recon/raw/main/.imgs/banner.jpg&quot; alt=&quot;X-侦察&quot;&gt;&lt;/a&gt;&lt;/p&gt;</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    <category term="XSS扫描工具" scheme="https://yancy77.cn/tags/XSS%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>61-web目录扫描工具中的神器-dirmap</title>
    <link href="https://yancy77.cn/2024/06/01/61-web%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E4%B8%AD%E7%9A%84%E7%A5%9E%E5%99%A8-dirmap/"/>
    <id>https://yancy77.cn/2024/06/01/61-web%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E4%B8%AD%E7%9A%84%E7%A5%9E%E5%99%A8-dirmap/</id>
    <published>2024-06-01T10:47:23.000Z</published>
    <updated>2024-06-01T11:02:11.534Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dirmap"><a href="#Dirmap" class="headerlink" title="Dirmap"></a>Dirmap</h1><p>链接：<a href="https://github.com/H4ckForJob/dirmap">https://github.com/H4ckForJob/dirmap</a></p><p><a href="https://github.com/H4ckForJob/dirmap/blob/master/README_EN.md">English</a></p><p>一个高级web目录扫描工具，功能将会强于DirBuster、Dirsearch、cansina、御剑</p><p><a href="https://github.com/H4ckForJob/dirmap/blob/master/doc/dirmap.png"><img src="https://github.com/H4ckForJob/dirmap/raw/master/doc/dirmap.png" alt="dirmap"></a></p><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><p>经过大量调研，总结一个优秀的web目录扫描工具至少具备以下功能：</p><ul><li>并发引擎</li><li>能使用字典</li><li>能纯爆破</li><li>能爬取页面动态生成字典</li><li>能fuzz扫描</li><li>自定义请求</li><li>自定义响应结果处理…</li></ul><p>那么接下来看看Dirmap的<strong>特点</strong>吧</p><h1 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h1><ol><li>支持n个target*n个payload并发</li><li>支持递归扫描</li><li>支持自定义需要递归扫描的状态码</li><li>支持(单|多)字典扫描</li><li>支持自定义字符集爆破</li><li>支持爬虫动态字典扫描</li><li>支持自定义标签fuzz目标url</li><li>自定义请求User-Agent</li><li>自定义请求随机延时</li><li>自定义请求超时时间</li><li>自定义请求代理</li><li>自定义正则表达式匹配假性404页面</li><li>自定义要处理的响应状态码</li><li>自定义跳过大小为x的页面</li><li>自定义显示content-type</li><li>自定义显示页面大小</li><li>按域名去重复保存结果</li></ol><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="环境准备-python-3-7"><a href="#环境准备-python-3-7" class="headerlink" title="环境准备:python 3.7 +"></a>环境准备:python 3.7 +</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/H4ckForJob/dirmap.git #克隆</span><br><span class="line">cd dirmap #进入目录 </span><br><span class="line">python3 -m pip install -r requirement.txt #安装必须库</span><br></pre></td></tr></tbody></table></figure><h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><h3 id="输入目标"><a href="#输入目标" class="headerlink" title="输入目标"></a>输入目标</h3><p>单目标，默认为http</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i https://target.com -lcf</span><br></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i 192.168.1.1 -lcf</span><br></pre></td></tr></tbody></table></figure><p>子网（CIDR格式）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i 192.168.1.0/24 -lcf</span><br></pre></td></tr></tbody></table></figure><p>网络范围</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i 192.168.1.1-192.168.1.100 -lcf</span><br></pre></td></tr></tbody></table></figure><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -iF targets.txt -lcf</span><br></pre></td></tr></tbody></table></figure><p><code>targets.txt</code>中支持上述格式</p><h3 id="结果保存"><a href="#结果保存" class="headerlink" title="结果保存"></a>结果保存</h3><ol><li>结果将自动保存在项目根目录下的<code>output</code>文件夹中</li><li>每一个目标生成一个txt，命名格式为<code>目标域名.txt</code></li><li>结果自动去重复，不用担心产生大量冗余</li></ol><h2 id="高级使用"><a href="#高级使用" class="headerlink" title="高级使用"></a>高级使用</h2><p>自定义dirmap配置，开始探索dirmap高级功能</p><p>暂时采用加载配置文件的方式进行详细配置，<strong>不支持使用命令行参数进行详细配置</strong>！</p><p>编辑项目根目录下的<code>dirmap.conf</code>，进行配置</p><p><code>dirmap.conf</code>配置详解</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">#递归扫描处理配置</span><br><span class="line">[RecursiveScan]</span><br><span class="line">#是否开启递归扫描:关闭:0;开启:1</span><br><span class="line">conf.recursive_scan = 0</span><br><span class="line">#遇到这些状态码，开启递归扫描。默认配置[301,403]</span><br><span class="line">conf.recursive_status_code = [301,403]</span><br><span class="line">#URL超过这个长度就退出扫描</span><br><span class="line">conf.recursive_scan_max_url_length = 60</span><br><span class="line">#这些后缀名不递归扫</span><br><span class="line">conf.recursive_blacklist_exts = ["html",'htm','shtml','png','jpg','webp','bmp','js','css','pdf','ini','mp3','mp4']</span><br><span class="line">#设置排除扫描的目录。默认配置空。其他配置：e.g:['/test1','/test2']</span><br><span class="line">#conf.exclude_subdirs = ['/test1','/test2']</span><br><span class="line">conf.exclude_subdirs = ""</span><br><span class="line"></span><br><span class="line">#扫描模式处理配置(4个模式，1次只能选择1个)</span><br><span class="line">[ScanModeHandler]</span><br><span class="line">#字典模式:关闭:0;单字典:1;多字典:2</span><br><span class="line">conf.dict_mode = 1</span><br><span class="line">#单字典模式的路径</span><br><span class="line">conf.dict_mode_load_single_dict = "dict_mode_dict.txt"</span><br><span class="line">#多字典模式的路径，默认配置dictmult</span><br><span class="line">conf.dict_mode_load_mult_dict = "dictmult"</span><br><span class="line">#爆破模式:关闭:0;开启:1</span><br><span class="line">conf.blast_mode = 0</span><br><span class="line">#生成字典最小长度。默认配置3</span><br><span class="line">conf.blast_mode_min = 3</span><br><span class="line">#生成字典最大长度。默认配置3</span><br><span class="line">conf.blast_mode_max = 3</span><br><span class="line">#默认字符集:a-z。暂未使用。</span><br><span class="line">conf.blast_mode_az = "abcdefghijklmnopqrstuvwxyz"</span><br><span class="line">#默认字符集:0-9。暂未使用。</span><br><span class="line">conf.blast_mode_num = "0123456789"</span><br><span class="line">#自定义字符集。默认配置"abc"。使用abc构造字典</span><br><span class="line">conf.blast_mode_custom_charset = "abc"</span><br><span class="line">#自定义继续字符集。默认配置空。</span><br><span class="line">conf.blast_mode_resume_charset = ""</span><br><span class="line">#爬虫模式:关闭:0;开启:1</span><br><span class="line">conf.crawl_mode = 0</span><br><span class="line">#用于生成动态敏感文件payload的后缀字典</span><br><span class="line">conf.crawl_mode_dynamic_fuzz_suffix = "crawl_mode_suffix.txt"</span><br><span class="line">#解析robots.txt文件。暂未实现。</span><br><span class="line">conf.crawl_mode_parse_robots = 0</span><br><span class="line">#解析html页面的xpath表达式</span><br><span class="line">conf.crawl_mode_parse_html = "//*/@href | //*/@src | //form/@action"</span><br><span class="line">#是否进行动态爬虫字典生成。默认配置1，开启爬虫动态字典生成。其他配置：e.g:关闭:0;开启:1</span><br><span class="line">conf.crawl_mode_dynamic_fuzz = 1</span><br><span class="line">#Fuzz模式:关闭:0;单字典:1;多字典:2</span><br><span class="line">conf.fuzz_mode = 0</span><br><span class="line">#单字典模式的路径。</span><br><span class="line">conf.fuzz_mode_load_single_dict = "fuzz_mode_dir.txt"</span><br><span class="line">#多字典模式的路径。默认配置:fuzzmult</span><br><span class="line">conf.fuzz_mode_load_mult_dict = "fuzzmult"</span><br><span class="line">#设置fuzz标签。默认配置{dir}。使用{dir}标签当成字典插入点，将http://target.com/{dir}.php替换成http://target.com/字典中的每一行.php。其他配置：e.g:{dir};{ext}</span><br><span class="line">#conf.fuzz_mode_label = "{ext}"</span><br><span class="line">conf.fuzz_mode_label = "{dir}"</span><br><span class="line"></span><br><span class="line">#处理payload配置。暂未实现。</span><br><span class="line">[PayloadHandler]</span><br><span class="line"></span><br><span class="line">#处理请求配置</span><br><span class="line">[RequestHandler]</span><br><span class="line">#自定义请求头。默认配置空。其他配置：e.g:test1=test1,test2=test2</span><br><span class="line">#conf.request_headers = "test1=test1,test2=test2"</span><br><span class="line">conf.request_headers = ""</span><br><span class="line">#自定义请求User-Agent。默认配置chrome的ua。</span><br><span class="line">conf.request_header_ua = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36"</span><br><span class="line">#自定义请求cookie。默认配置空，不设置cookie。其他配置e.g:cookie1=cookie1; cookie2=cookie2;</span><br><span class="line">#conf.request_header_cookie = "cookie1=cookie1; cookie2=cookie2"</span><br><span class="line">conf.request_header_cookie = ""</span><br><span class="line">#自定义401认证。暂未实现。因为自定义请求头功能可满足该需求(懒XD)</span><br><span class="line">conf.request_header_401_auth = ""</span><br><span class="line">#自定义请求方法。默认配置get方法。其他配置：e.g:get;head</span><br><span class="line">#conf.request_method = "head"</span><br><span class="line">conf.request_method = "get"</span><br><span class="line">#自定义每个请求超时时间。默认配置3秒。</span><br><span class="line">conf.request_timeout = 3</span><br><span class="line">#随机延迟(0-x)秒发送请求。参数必须是整数。默认配置0秒，无延迟。</span><br><span class="line">conf.request_delay = 0</span><br><span class="line">#自定义单个目标，请求协程线程数。默认配置30线程</span><br><span class="line">conf.request_limit = 30</span><br><span class="line">#自定义最大重试次数。暂未实现。</span><br><span class="line">conf.request_max_retries = 1</span><br><span class="line">#设置持久连接。是否使用session()。暂未实现。</span><br><span class="line">conf.request_persistent_connect = 0</span><br><span class="line">#302重定向。默认False，不重定向。其他配置：e.g:True;False</span><br><span class="line">conf.redirection_302 = False</span><br><span class="line">#payload后添加后缀。默认空，扫描时，不添加后缀。其他配置：e.g:txt;php;asp;jsp</span><br><span class="line">#conf.file_extension = "txt"</span><br><span class="line">conf.file_extension = ""</span><br><span class="line"></span><br><span class="line">#处理响应配置</span><br><span class="line">[ResponseHandler]</span><br><span class="line">#设置要记录的响应状态。默认配置[200]，记录200状态码。其他配置：e.g:[200,403,301]</span><br><span class="line">#conf.response_status_code = [200,403,301]</span><br><span class="line">conf.response_status_code = [200]</span><br><span class="line">#是否记录content-type响应头。默认配置1记录</span><br><span class="line">#conf.response_header_content_type = 0</span><br><span class="line">conf.response_header_content_type = 1</span><br><span class="line">#是否记录页面大小。默认配置1记录</span><br><span class="line">#conf.response_size = 0</span><br><span class="line">conf.response_size = 1</span><br><span class="line">#是否自动检测404页面。默认配置True，开启自动检测404.其他配置参考e.g:True;False</span><br><span class="line">#conf.auto_check_404_page = False</span><br><span class="line">conf.auto_check_404_page = True</span><br><span class="line">#自定义匹配503页面正则。暂未实现。感觉用不着，可能要废弃。</span><br><span class="line">#conf.custom_503_page = "page 503"</span><br><span class="line">conf.custom_503_page = ""</span><br><span class="line">#自定义正则表达式，匹配页面内容</span><br><span class="line">#conf.custom_response_page = "([0-9]){3}([a-z]){3}test"</span><br><span class="line">conf.custom_response_page = ""</span><br><span class="line">#跳过显示页面大小为x的页面，若不设置，请配置成"None"，默认配置“None”。其他大小配置参考e.g:None;0b;1k;1m</span><br><span class="line">#conf.skip_size = "0b"</span><br><span class="line">conf.skip_size = "None"</span><br><span class="line"></span><br><span class="line">#代理选项</span><br><span class="line">[ProxyHandler]</span><br><span class="line">#代理配置。默认设置“None”，不开启代理。其他配置e.g:{"http":"http://127.0.0.1:8080","https":"https://127.0.0.1:8080"}</span><br><span class="line">#conf.proxy_server = {"http":"http://127.0.0.1:8080","https":"https://127.0.0.1:8080"}</span><br><span class="line">conf.proxy_server = None</span><br><span class="line"></span><br><span class="line">#Debug选项</span><br><span class="line">[DebugMode]</span><br><span class="line">#打印payloads并退出</span><br><span class="line">conf.debug = 0</span><br><span class="line"></span><br><span class="line">#update选项</span><br><span class="line">[CheckUpdate]</span><br><span class="line">#github获取更新。暂未实现。</span><br><span class="line">conf.update = 0</span><br></pre></td></tr></tbody></table></figure><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ul><li><p>命令行参数解析全局初始化</p></li><li></li></ul><p>  engine初始化</p><ul><li><p>设置线程数</p></li><li></li></ul><p>  target初始化</p><ul><li></li></ul><pre><code>自动解析处理输入格式( -i,inputTarget)-  IP-  Domain-  URL-  IP/MASK-  IP Start-End</code></pre><ul><li><p>文件读入(-iF,inputLocalFile)</p></li><li></li></ul><p>  bruter初始化</p><ul><li></li></ul><pre><code>加载配置方式()-  读取命令行参数值-  读取配置文件(-lcf,loadConfigFile)</code></pre><ul><li></li></ul><pre><code>递归模式选项(RecursiveScan)-  递归扫描(-rs,recursive_scan)-  需要递归的状态码(-rd,recursive_status_code)-  排除某些目录(-es,exclude_subdirs)</code></pre><ul><li></li></ul><pre><code>扫描模式选项(ScanModeHandler)-    字典模式(-dm,dict_mode)  -  加载单个字典(-dmlsd,dict_mode_load_single_dict)  -  加载多个字典(-dmlmd,dict_mode_load_mult_dict)-    爆破模式(-bm,blast_mode)  -      爆破目录长度范围(必选)    -  最小长度(-bmmin,blast_mode_min)    -  最大长度(-bmmax,blast_mode_max)  -      基于默认字符集    -  基于a-z    -  基于0-9  -  基于自定义字符集(-bmcc,blast_mode_custom_charset)  -  断点续生成payload(-bmrc,blast_mode_resume_charset)-    爬虫模式(-cm,crawl_mode)  -  自定义解析标签(-cmph,crawl_mode_parse_html)(a:href,img:src,form:action,script:src,iframe:src,div:src,frame:src,embed:src)  -  解析robots.txt(-cmpr,crawl_mode_parse_robots)  -  爬虫类动态fuzz扫描(-cmdf,crawl_mode_dynamic_fuzz)-    fuzz模式(-fm,fuzz_mode)  -  fuzz单个字典(-fmlsd,fuzz_mode_load_single_dict)  -  fuzz多个字典(-fmlmd,fuzz_mode_load_mult_dict)  -  fuzz标签(-fml,fuzz_mode_label)</code></pre><ul><li></li></ul><pre><code>请求优化选项(RequestHandler)-  自定义请求超时(-rt,request_timeout)-  自定义请求延时(-rd,request_delay)-  限制单个目标主机协程数扫描(-rl,request_limit)-  限制重试次数(-rmr,request_max_retries)-  http持久连接(-rpc,request_persistent_connect)-  自定义请求方法(-rm,request_method)(get、head)-  302状态处理(-r3,redirection_302)(是否重定向)-    自定义header  -  自定义其他header(-rh,request_headers)(解决需要401认证)  -  自定义ua(-rhua,request_header_ua)  -  自定义cookie(-rhc,request_header_cookie)</code></pre><ul><li></li></ul><pre><code>字典处理选项(PayloadHandler)-  字典处理(payload修改-去斜杠)-  字典处理(payload修改-首字符加斜杠)-  字典处理(payload修改-单词首字母大写)-  字典处理(payload修改-去扩展)-  字典处理(payload修改-去除非字母数字)</code></pre><ul><li></li></ul><pre><code>响应结果处理模块(ResponseHandler)-  跳过大小为x字节的文件(-ss,skip_size)-  自动检测404页面(-ac4p,auto_check_404_page)-  自定义503页面(-c5p,custom_503_page)-    自定义正则匹配响应内容并进行某种操作  -  自定义正则匹配响应(-crp,custom_response_page)  -  某种操作(暂时未定义)-  输出结果为自定义状态码(-rsc,response_status_code)-  输出payload为完整路径(默认输出完成url)-  输出结果展示content-type-  自动去重复保存结果</code></pre><ul><li></li></ul><pre><code>状态处理模块(StatusHandler)-  状态显示(等待开始、进行中、暂停中、异常、完成)-  进度显示-  状态控制(开始、暂停、继续、停止)-  续扫模块(暂未配置)-  断点续扫-  选行续扫</code></pre><ul><li></li></ul><pre><code>日志记录模块(ScanLogHandler)-  扫描日志-  错误日志</code></pre><ul><li></li></ul><pre><code>代理模块(ProxyHandler)-  单个代理(-ps,proxy_server)-  代理池</code></pre><ul><li></li></ul><pre><code>调试模式选项(DebugMode)-  debug(--debug)</code></pre><ul><li></li></ul><pre><code>检查更新选项(CheckUpdate)-  update(--update)</code></pre><h1 id="默认字典文件"><a href="#默认字典文件" class="headerlink" title="默认字典文件"></a>默认字典文件</h1><p>字典文件存放在项目根目录中的<code>data</code>文件夹中</p><ol><li>dict_mode_dict.txt “字典模式”字典，使用dirsearch默认字典</li><li>crawl_mode_suffix.txt “爬虫模式”字典，使用FileSensor默认字典</li><li>fuzz_mode_dir.txt “fuzz模式”字典，使用DirBuster默认字典</li><li>fuzz_mode_ext.txt “fuzz模式”字典，使用常见后缀制作的字典</li><li>dictmult 该目录为“字典模式”默认多字典文件夹，包含：BAK.min.txt(备份文件小字典)，BAK.txt(备份文件大字典)，LEAKS.txt(信息泄露文件字典)</li><li>fuzzmult 该目录为“fuzz模式”默认多字典文件夹，包含：fuzz_mode_dir.txt(默认目录字典)，fuzz_mode_ext.txt(默认后缀字典)</li></ol><h1 id="已知缺陷"><a href="#已知缺陷" class="headerlink" title="已知缺陷"></a>已知缺陷</h1><ol><li>“爬虫模式”只爬取了目标的当前页面，用于生成动态字典。项目将来会将“爬虫模块”与“生成动态字典功能”分离。</li><li>关于bruter.py第517行<code>bar.log.start()</code>出错。解决方案：请安装progressbar2。卸载progressbar。防止导入同名模块。感谢某位表哥提醒。</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">执行命令：</span><br><span class="line">python3 -m pip uninstall progressbar</span><br><span class="line">python3 -m pip install progressbar2</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Dirmap&quot;&gt;&lt;a href=&quot;#Dirmap&quot; class=&quot;headerlink&quot; title=&quot;Dirmap&quot;&gt;&lt;/a&gt;Dirmap&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://github.com/H4ckForJob/dirmap&quot;&gt;http</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    <category term="目录/敏感文件爆破工具" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/%E7%9B%AE%E5%BD%95-%E6%95%8F%E6%84%9F%E6%96%87%E4%BB%B6%E7%88%86%E7%A0%B4%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>59-专业黑客都在用的信息收集工具</title>
    <link href="https://yancy77.cn/2024/05/23/59-%E4%B8%93%E4%B8%9A%E9%BB%91%E5%AE%A2%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/"/>
    <id>https://yancy77.cn/2024/05/23/59-%E4%B8%93%E4%B8%9A%E9%BB%91%E5%AE%A2%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/</id>
    <published>2024-05-23T11:55:32.000Z</published>
    <updated>2024-05-25T07:43:51.492Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://pic.imgdb.cn/item/663b27bd0ea9cb14033c3311.png"></p><h2 id="密探——渗透测试工具-v1-10-作者：kkbo8005-gmail-com"><a href="#密探——渗透测试工具-v1-10-作者：kkbo8005-gmail-com" class="headerlink" title="密探——渗透测试工具 v1.10 作者：kkbo8005@gmail.com"></a>密探——渗透测试工具 v1.10 作者：<a href="mailto:kkbo8005@gmail.com">kkbo8005@gmail.com</a></h2><p>链接:<a href="https://github.com/kkbo8005/mitan">https://github.com/kkbo8005/mitan</a></p><p>下载链接:<a href="https://github.com/kkbo8005/mitan/releases/tag/1.10">https://github.com/kkbo8005/mitan/releases/tag/1.10</a></p><p><strong>注意：下载1.10版本edu.cn有问题的请重新下载，修bug的时候修出问题了，不好意思！麻烦下载最新的！</strong></p><h3 id="1-缘起"><a href="#1-缘起" class="headerlink" title="1.缘起"></a>1.缘起</h3><p>对于学习网络安全的小白来说，在渗透战过程中容易没有方向，密探借用FindSomeTh、SuperSearchPlus，御文件扫描、dirsearch、JSFinder，fofaviewer等工具，开发印度密探“渗透工具”，希望能够为大家提供，并向上述工具的开发者致敬！！</p><h3 id="2-功能介绍"><a href="#2-功能介绍" class="headerlink" title="2.功能介绍"></a>2.功能介绍</h3><p>密探主要包含域名信息查询、IP端口查询、备案信息查询、搜索引擎语法自动生成（<strong>FOFA、Hunter、google、github</strong>）、资产测绘（<strong>FOFA，hunter，quake</strong>的查询及结果导出）、指纹识别、敏感信息（<strong>暴露接口并可以自动探测未授权</strong>）、文件扫描（包含<strong>目录，备份文件，spring信息泄漏，自定义字典</strong>等）、渗透技能路线备忘录，常用网络安全网站导航等功能。</p><p>我 <strong>不为自己使用该工具而感到遗憾，因为我将为任何后果或法律责任负责。</strong></p><p>本 <strong>工具在扫描模块中使用多线程，在根据目标线程进行配置时，会发生线程不可达的情况，导致大规模扫描时线程服务出现故障。</strong></p><h3 id="3-更新日志"><a href="#3-更新日志" class="headerlink" title="3.更新日志"></a>3.更新日志</h3><table><thead><tr><th>2024.5.19</th><th>修复文件接口扫描失败是由于导出的bug，修复了资产测绘条件语句中包含的保留词导出的bug，增加重要信息复制功能。</th></tr></thead><tbody><tr><td>2024.5.15</td><td>增加了将工具里面的配置项保存到配置文件，启动加载功能，调整了资产测绘的导出方式，优化了文件扫描过滤功能，优化了扫描线程BUG，优化了主界面域名信息的正则表达式。优化了quake注册表项、高级会员的域名字段的bug，优化了使用中一些细节bug</td></tr><tr><td>2024.5.8</td><td>修改使用中各位师傅的bug，基本信息模块新增软件著作权，子域名，IP反查域名解析记录，资产测绘增加配置Hunter的多KEY轮询功能，文件目录扫描增加按域名+压缩文件后缀集成方式。</td></tr><tr><td>2024.5.6</td><td>增加体重信息，增加资产测绘自动加载，优化指纹扫描，接口扫描，文件目录扫描功能，增加密码字典功能。优化网站导航信息</td></tr><tr><td>2024.4.24</td><td>界面功能增强指纹识别扫描模块，支持从资产测绘联动到指纹识别，从指纹识别联动敏感信息、文件扫描模块</td></tr><tr><td>2024.4.20</td><td>增加资产测绘模块，调整界面布局，资产测绘支持fofa、hunter、quake3个引擎的查询，并支持右键菜单与敏感信息扫描、文件扫描模块的联动功能</td></tr><tr><td>2024.4.13</td><td>优化了接口未授权扫描的界面卡顿问题以及接口获取完成自动触发接口未授权扫描计算错误</td></tr><tr><td>2024.4.11</td><td>将敏感信息界面重构了，增加了接口抓取及未授权接口探测功能。（原来表达式感觉还不够完美，下一版再优化一下）</td></tr><tr><td>2024.4.7</td><td>优化文件扫描的多线程扫描功能，增加网站导航地址</td></tr></tbody></table><h3 id="4-如何运行"><a href="#4-如何运行" class="headerlink" title="4.如何运行"></a>4.如何运行</h3><p>在jdk8环境下运行以下语句：</p><p>jdk8下载链接:<a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows</a></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -jar mitan-jar-with-dependencies.jar</span><br><span class="line">`C:\Program Files\Java\jdk-1.8\bin\java.exe` -jar mitan-jar-with-dependencies.jar  #如果没有对应的java8的版本则使用这条命令</span><br></pre></td></tr></tbody></table></figure><p> 如果您不想输入这么长太长语句，可以通过以下脚本的方式启动：</p><ol><li>Mac/Linux 环境下，可以通过sh文件启动，首先给予<strong>start.sh</strong>权限。</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x start.sh</span><br></pre></td></tr></tbody></table></figure><p>每次进出都会出现如下界面</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./start.sh</span><br></pre></td></tr></tbody></table></figure><ol><li>windows系统直接双击“ <strong>start.bat</strong> ”文件启动工具</li></ol><p>运行成功显示以下界面：</p><p><a href="https://github.com/kkbo8005/mitan/blob/master/Readme.assets/image-20240515144759168.png"><img src="https://github.com/kkbo8005/mitan/raw/master/Readme.assets/image-20240515144759168.png" alt="图像-20240515144759168"></a></p><p><a href="https://github.com/kkbo8005/mitan/blob/master/Readme.assets/image-20240515144818909.png"><img src="https://github.com/kkbo8005/mitan/raw/master/Readme.assets/image-20240515144818909.png" alt="图像-20240515144818909"></a></p><p><a href="https://github.com/kkbo8005/mitan/blob/master/Readme.assets/image-20240508111836877.png"><img src="https://github.com/kkbo8005/mitan/raw/master/Readme.assets/image-20240508111836877.png" alt="图像-20240508111836877"></a></p><h3 id="5-常见问题"><a href="#5-常见问题" class="headerlink" title="5.常见问题"></a>5.常见问题</h3><h4 id="（1）运行时错误提示：缺少JavaFX-运行时组件的解决方法。"><a href="#（1）运行时错误提示：缺少JavaFX-运行时组件的解决方法。" class="headerlink" title="（1）运行时错误提示：缺少JavaFX 运行时组件的解决方法。"></a>（1）运行时错误提示：缺少JavaFX 运行时组件的解决方法。</h4><p><strong>JavaFX 从 Java 11 开始从 JDK 中移除，JDK11 以上需要单独下载和配置 javaFx。</strong></p><h5 id="1-下载JavaFX-SDK"><a href="#1-下载JavaFX-SDK" class="headerlink" title="1. 下载JavaFX SDK"></a>1. 下载JavaFX SDK</h5><p>首先，从<a href="https://gluonhq.com/products/javafx/">Gluon</a>网站 下载对应操作系统的JavaFX SDK。</p><h5 id="2-解压到目录"><a href="#2-解压到目录" class="headerlink" title="2. 解压到目录"></a>2. 解压到目录</h5><p>将下载的JavaFX SDK 解压部署示例（例如<code>C:\javafx-sdk-21</code>）。</p><h5 id="3-运行-JAR-文件时指定-JavaFX-模块路径"><a href="#3-运行-JAR-文件时指定-JavaFX-模块路径" class="headerlink" title="3. 运行 JAR 文件时指定 JavaFX 模块路径"></a>3. 运行 JAR 文件时指定 JavaFX 模块路径</h5><p>在运行你的JAR文件时，需要指定JavaFX模块的路径。假设你的JavaFX SDK解压在<code>C:\javafx-sdk-21</code>，你可以使用它来运行你的JAR文件：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --module-path "C:\javafx-sdk-21\lib" --add-modules javafx.controls,javafx.fxml -jar mitan-jar-with-dependencies.jar</span><br></pre></td></tr></tbody></table></figure><p>本次命令中：</p><ul><li><p><code>--module-path "C:\javafx-sdk-21\lib"</code>指定了JavaFX 模块的路径。</p></li><li><p><code>--add-modules javafx.controls,javafx.fxml</code>stran 所需的JavaFX 模块，根据您的应用程序需要添加其他模块。</p><p><strong>谢谢p1at0x，s0nd9r师傅在Issues中提出的解决方案，可自行根据操作系统修改start.bat或start.sh脚本文件，解决快速启动。</strong></p></li></ul><h4 id="（2）如果遇到界面乱码问题，建议启动指定的编码方式。"><a href="#（2）如果遇到界面乱码问题，建议启动指定的编码方式。" class="headerlink" title="（2）如果遇到界面乱码问题，建议启动指定的编码方式。"></a>（2）如果遇到界面乱码问题，建议启动指定的编码方式。</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java "-Dfile.encoding=UTF-8" -jar mitan-jar-with-dependencies.jar</span><br></pre></td></tr></tbody></table></figure><p><strong>可自行根据操作系统修改start.bat或start.sh脚本文件，解决快速启动。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://pic.imgdb.cn/item/663b27bd0ea9cb14033c3311.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;密探——渗透测试工具-v1-10-作者：kkbo8005-gmail-com&quot;&gt;&lt;a href=&quot;#密探——渗透测试</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>58-OpenArk-蓝队应急响应工具箱</title>
    <link href="https://yancy77.cn/2024/05/22/58-OpenArk-%E8%93%9D%E9%98%9F%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%B7%A5%E5%85%B7%E7%AE%B1/"/>
    <id>https://yancy77.cn/2024/05/22/58-OpenArk-%E8%93%9D%E9%98%9F%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%B7%A5%E5%85%B7%E7%AE%B1/</id>
    <published>2024-05-22T11:50:50.000Z</published>
    <updated>2024-05-22T12:10:12.988Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OpenArk"><a href="#OpenArk" class="headerlink" title="OpenArk "></a>OpenArk <a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/resources/logo.png"><img src="https://github.com/BlackINT3/OpenArk/raw/master/doc/resources/logo.png" alt="image"></a></h1><p>github链接:<a href="https://github.com/BlackINT3/OpenArk?tab=readme-ov-file">https://github.com/BlackINT3/OpenArk?tab=readme-ov-file</a></p><p>下载链接:<a href="https://github.com/BlackINT3/OpenArk/releases/tag/v1.3.6">https://github.com/BlackINT3/OpenArk/releases/tag/v1.3.6</a></p><p><a href="https://camo.githubusercontent.com/025105f6a4b01fe290dc9ce59b43b85160aa76ce4edac55abe91eed41d4ff319/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4c47504c2d677265656e2e737667"><img src="https://camo.githubusercontent.com/025105f6a4b01fe290dc9ce59b43b85160aa76ce4edac55abe91eed41d4ff319/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4c47504c2d677265656e2e737667" alt="License"></a></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li><a href="https://github.com/BlackINT3/OpenArk/blob/master/README.md">英文说明</a></li></ul><p>  OpenArk是一款Windows平台上的开源Ark工具. Ark是Anti-Rootkit（对抗恶意程序）的简写, OpenArk目标成为逆向工程师、编程人员的工具，同时也能为那些希望清理恶意软件的用户服务。以后也将会支持更多功能和命令。 <a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/resources/snapshot-zh-v108.png"><img src="https://github.com/BlackINT3/OpenArk/raw/master/doc/resources/snapshot-zh-v108.png" alt="image"></a> <a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/resources/snapshot-zh-01.png"><img src="https://github.com/BlackINT3/OpenArk/raw/master/doc/resources/snapshot-zh-01.png" alt="image"></a> <a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/resources/snapshot-zh-02.png"><img src="https://github.com/BlackINT3/OpenArk/raw/master/doc/resources/snapshot-zh-02.png" alt="image"></a></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li>进程 - 查看进程、线程、模块、句柄、内存、窗口、Token、内存扫描、PPL等信息，还有模块卸载、进程注入等功能。</li><li>内核 - 系统内核工具，例如：内存管理、驱动、热键、回调、过滤驱动、存储、IDT/SDT/NDIS/WFP等功能。</li><li>编程助手 - 程序员的工具箱。</li><li>扫描器 - PE/ELF文件解析器，以后会变成病毒分析助手。</li><li>捆绑器 - 目录和多个程序可以捆绑成一个exe程序，同时支持脚本。</li><li>工具库 - 精心挑选了许多有用的小工具，这些和OpenArk既有功能互补，高效率，我们一直在思考。</li><li>控制台 - 这里有很多有用的命令。</li><li>语言 - 目前支持中文和英文，以后会支持更多。</li><li>更多强大的功能正在开发中。。。</li></ul><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><ul><li>程序：独立的exe，无DLL依赖，支持32位、64位。</li><li>支持系统：Windows XP … Win7 … Win10 … Win11 …</li></ul><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><ul><li><a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/build-openark.md">如何编译OpenArk</a></li><li><a href="https://github.com/BlackINT3/none">UNONE &amp; KNONE</a> - 应用层和内核层的基础库</li></ul><h3 id="参与-捐赠"><a href="#参与-捐赠" class="headerlink" title="参与/捐赠"></a>参与/捐赠</h3><ul><li>欢迎提交Issue和PR.</li><li>如果你喜欢OpenArk，可以在软件上点击捐赠，支持我们的开发工作。</li><li><a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/code-style-guide.md">OpenArk 代码风格</a></li></ul><h3 id="技术交流"><a href="#技术交流" class="headerlink" title="技术交流"></a>技术交流</h3><ul><li>Discord<ul><li><a href="https://discord.com/invite/w9A8q9naDY">https://discord.com/invite/w9A8q9naDY</a></li></ul></li><li>QQ群:<ul><li>4群: 960562534</li><li>3群: 706663529(已满)</li><li>2群: 535752025(已满)</li><li>1群: 836208099(已满)</li></ul></li></ul><h3 id="官方链接"><a href="#官方链接" class="headerlink" title="官方链接"></a>官方链接</h3><ul><li>官方网站: <a href="https://openark.blackint3.com/">https://openark.blackint3.com/</a></li><li>项目地址: <a href="https://github.com/BlackINT3/OpenArk/">https://github.com/BlackINT3/OpenArk/</a></li><li>帮助手册: <a href="https://openark.blackint3.com/manuals/">https://openark.blackint3.com/manuals/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;OpenArk&quot;&gt;&lt;a href=&quot;#OpenArk&quot; class=&quot;headerlink&quot; title=&quot;OpenArk &quot;&gt;&lt;/a&gt;OpenArk &lt;a href=&quot;https://github.com/BlackINT3/OpenArk/blob/maste</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>57-OneLong-红队快速信息收集工具-漏洞利用</title>
    <link href="https://yancy77.cn/2024/05/21/57-OneLong-%E7%BA%A2%E9%98%9F%E5%BF%AB%E9%80%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>https://yancy77.cn/2024/05/21/57-OneLong-%E7%BA%A2%E9%98%9F%E5%BF%AB%E9%80%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</id>
    <published>2024-05-21T10:07:32.000Z</published>
    <updated>2024-05-21T10:08:38.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OneLong"><a href="#OneLong" class="headerlink" title="OneLong"></a>OneLong</h1><p>链接:<a href="https://github.com/M0nster3/OneLong/">https://github.com/M0nster3/OneLong/</a></p><p>下载链接:<a href="https://github.com/M0nster3/OneLong/releases">https://github.com/M0nster3/OneLong/releases</a></p><p>郑重声明：文中所涉及的技术、思路和工具仅供以安全为目的的学习交流使用，任何人不得将其用于非法用途以及盈利等目的，否则后果自行承担。</p><h2 id="0x01、介绍"><a href="#0x01、介绍" class="headerlink" title="0x01、介绍"></a>0x01、介绍</h2><p>作者：<a href="https://github.com/M0nster3">Monster3</a></p><p>定位：为了简化前期信息收集的繁重任务，协助红队人员快速的信息收集，测绘目标资产，寻找薄弱点，暂时实现了收集企业信息，子域名收集，子域名爆破，资产邮箱，指纹探测，漏洞扫描，后台识别，后续会跟新对IP相关的搜集。</p><h2 id="0x02、使用"><a href="#0x02、使用" class="headerlink" title="0x02、使用"></a>0x02、使用</h2><p>使用方式比较简单，现在主要针对不同需求实现了两种信息收集的方式，一种是根据企业关键字去进行信息搜集，这里需要填写aqc和qcc的API，第二种方式是需要填写公司域名，去进行搜集</p><p>注意：在调用API的时候有些需要科学上网，<em><strong>最好在进行使用的时候加上-proxy=<a href="http://127.0.0.1:7897/">http://127.0.0.1:7897</a></strong></em> 进行科学上网。</p><p>1、根据企业关键字去进行信息搜集，最后填写正确完整的关键字，这部分主要参考了<a href="https://github.com/wgpsec/ENScan_GO">ENScan_GO</a>,相关搜索企业细节以及方法和它是一样，注意的是使用这种方式必须填写aqc和qcc的Cookie</p><ul><li><em><strong>OneLong -n 企业名称 -proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a></strong></em></li></ul><p>2、根据企业域名去进行信息搜集</p><ul><li><em><strong>OneLong -d target.com -proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a></strong></em></li></ul><p>3、批量域名信息搜集</p><ul><li><em><strong>OneLong -f file.txt -proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a></strong></em></li></ul><p>4、如果目标企业存在安全设备，并且IP资源不多的话，可以只进行被动扫描，不进行子域名以及端口爆破，不进行漏洞扫描</p><ul><li><em><strong>OneLong -d target.com/-n 企业名称 -low -proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a></strong></em></li></ul><h2 id="0x03、参数讲解"><a href="#0x03、参数讲解" class="headerlink" title="0x03、参数讲解"></a>0x03、参数讲解</h2><p>默认就是上面的三种方式进行使用 <em><strong>-d</strong></em> <em><strong>-f</strong></em> <em><strong>-n</strong></em></p><p>有一些相关企业的参数需要结合 <em><strong>-n</strong></em> 使用有 <em><strong>-deep</strong></em> <em><strong>-invest</strong></em> <em><strong>-is-branch</strong></em> 这些参数必须先使用***-n***</p><p><em><strong>-low</strong></em> ：使用这个参数就相当于同时使用 <em><strong>-nport</strong></em> <em><strong>-npoc</strong></em> <em><strong>-nbao</strong></em> 只进行被动API进行扫描</p><p><em><strong>-o</strong></em>：设置输出Excel的文件夹，最后输出的excel回保存到这个参数重</p><p><em><strong>-p</strong></em>：进行端口爆破的时候指定的端口，代码中内置了三种<em><strong>“–top-ports 1000”</strong></em> <em><strong>“–top-ports 100”</strong></em> <em><strong>“–top-ports 10”</strong></em> 默认爆破top 1000</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">-d string</span><br><span class="line">  域名</span><br><span class="line">-deep int</span><br><span class="line">  递归搜索n层公司 (default 5)</span><br><span class="line">-delay int</span><br><span class="line">  填写最大延迟时间（秒）将会在1-n间随机延迟</span><br><span class="line">-f string</span><br><span class="line">  批量扫描</span><br><span class="line">-invest float</span><br><span class="line">  投资比例  (default 70)</span><br><span class="line">-is-branch</span><br><span class="line">  深度查询分支机构信息（数量巨大），默认不查询</span><br><span class="line">-low</span><br><span class="line">  只进行被动扫描，不进行子域名以及端口爆破，不进行漏洞扫描</span><br><span class="line">-n string</span><br><span class="line">  企业关键词 eg 百度</span><br><span class="line">-nbao</span><br><span class="line">  不进行爆破子域名</span><br><span class="line">-npoc</span><br><span class="line">  不进行漏洞扫描</span><br><span class="line">-nport</span><br><span class="line">  不进行爆破端口</span><br><span class="line">-o string</span><br><span class="line">  结果输出的文件夹位置(可选)</span><br><span class="line">-p string</span><br><span class="line">  端口爆破默认为Top1000，还可修改为100或者10 (default "--top-ports 1000")</span><br><span class="line">-proxy string</span><br><span class="line">  设置代理例如:-proxy=http://127.0.0.1:7897</span><br><span class="line">-timeout int</span><br><span class="line">  每个请求默认1（分钟）超时 (default 1)</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/long.jpeg"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/long.jpeg" alt="login"></a></p><h2 id="0x04、相关配置文件解读"><a href="#0x04、相关配置文件解读" class="headerlink" title="0x04、相关配置文件解读"></a>0x04、相关配置文件解读</h2><h3 id="子域名相关配置文件"><a href="#子域名相关配置文件" class="headerlink" title="子域名相关配置文件"></a>子域名相关配置文件</h3><ul><li><em><strong>OneLong -n 企业名称</strong></em> 在使用这种方式的时候必须添加Aiqicha或者是TYC的token，否则不能正常使用，因为这个流程是需要这两个api去查询相应的备案号，然后才能进行后续的资产收集</li><li><em><strong>OneLong -d target.com</strong></em> 在使用这种方式因为工具里面带了一些不需要key的api，所以可以直接跑。</li></ul><p>想要搜集的信息更加全面，可以添加相应的API，添加的API不含直接收费的，都是一些免费的和一些有免费次数的</p><p><a href="https://app.binaryedge.io/account/api">binaryedge</a> , <a href="https://fullhunt.io/user/settings/">fullhunt</a> , <a href="https://hunter.qianxin.com/home/myInfo">qaxhunter</a> , <a href="https://bevigil.com/osint/api-keys">bevigil</a> , <a href="https://search.censys.io/account/api">CensysToken/CensysSecret</a> , <a href="https://www.zoomeye.org/profile">zomeye</a> , <a href="https://user.whoisxmlapi.com/products">whoisxmlapi</a> , <a href="https://www.virustotal.com/gui/user/M0nster3/apikey">virustotal</a> , <a href="https://account.shodan.io/">shodan</a> , <a href="https://chaos.projectdiscovery.io/#/">chaos</a> , <a href="https://leakix.net/settings/api">leakix</a> , <a href="https://app.netlas.io/profile/">netlax</a> , <a href="https://quake.360.net/quake/#/personal?tab=message">quake</a> , <a href="https://developers.google.com/custom-search/v1/overview#search_engine_id">googleid</a> , <a href="https://developers.google.com/custom-search/v1/overview#api_key">googleapi</a> , <a href="https://fofa.info/userInfo">fofakey/fofaEmail</a> , <a href="https://github.com/settings/tokens">githubtoken</a> ,</p><p><a href="https://securitytrails.com/app/auth/login?return=/app/account">securitytrails</a>:这个需要企业邮箱注册，可以去网上找一个免费注册一些比如<a href="https://mailh.qiye.163.com/">网易</a> ,</p><p><a href="https://www.racent.com/">racent</a>:抓包获取数据包里面的token</p><p><a href="https://aiqicha.baidu.com/">Aiqicha</a>：Cookie信息请勿直接 <code>document.cookie</code>，可能因为http-only 选项无法复制全导致登陆失败</p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/image-20221028223835307.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/image-20221028223835307.png" alt="login"></a></p><p><a href="https://www.aldzs.com/">阿拉丁</a>:点击任意请求，拿到请求里的TOKEN</p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/image-20230709132223242.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/image-20230709132223242.png" alt="login"></a></p><p><a href="https://www.tianyancha.com/">TYC tycid</a>:配置COOKIE后配置tycid,这里的cookie也是个Aiqicha一样那样直接从数据包中获取</p><p><a href="https://www.qimai.cn/">Qimai</a>:登陆账号然后把数据包里面的PHPSESSID提取出来就可以，这个也是点击任意链接都可以</p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/20240401153609.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/20240401153609.png" alt="login"></a></p><h3 id="MassDns模块"><a href="#MassDns模块" class="headerlink" title="MassDns模块"></a><a href="https://github.com/blechschmidt/massdns">MassDns模块</a></h3><p>注意：Releases中的文件夹名称不能更换</p><p>工具中的爆破主要是引用了MassDns爆破工具，作者称无需特殊配置，MassDNS 就能够使用公开可用的解析器每秒解析超过 350,000 个名称。是一个高效的爆破工具，</p><ul><li>resolvers: Releases中有一个Script/MassDns/resolvers.txt文件夹名称添加进去，如果更换了resolvers.txt,必须放在当前文件夹只需要把名称换了即可</li><li>wordlist：爆破的目录文件，项目中的爆破文件都在这个目录下Script\Dict，</li><li>massdnsPath:将Script/MassDns下的MassDns应用程序名称添加进来，如果是Linux的则需要把MassDns.exe改为相应的名称</li></ul><h3 id="Email模块"><a href="#Email模块" class="headerlink" title="Email模块"></a>Email模块</h3><p>最好设置 <a href="https://github.com/settings/tokens">githubtoken</a> 这里的Email也会调用这个Cookie里面的token，github搜索效果比较好</p><p><a href="https://hunter.io/">emailhunter</a> , <a href="https://intelx.io/">intelxEmail</a> , <a href="https://tomba.io/">tombaKey/tombaSecret</a></p><h3 id="Port模块"><a href="#Port模块" class="headerlink" title="Port模块"></a>Port模块</h3><p><em><strong>masscanpath</strong></em>: Masscan工具放的位置如果是在环境变量中则默认就行，比如kali之类的 <em><strong>rate</strong></em>: Masscan速率，速率如果太大很有可能直接带宽占满 <em><strong>nmappath</strong></em>: Nmap工具放的位置如果是在环境变量中则默认就行</p><h3 id="Afrog"><a href="#Afrog" class="headerlink" title="Afrog"></a><a href="https://github.com/zan8in/afrog">Afrog</a></h3><p>这个主要还是参考官方网站配置即可</p><h4 id="ceye"><a href="#ceye" class="headerlink" title="ceye"></a>ceye</h4><ul><li>访问<a href="http://ceye.io/">ceye.io</a>网站并注册一个帐户。</li><li>登录并进入个人设置页面。</li><li>复制<code>domain</code>和<code>api-key</code>并在文件中正确配置它们。</li></ul><h4 id="Dnslogcn"><a href="#Dnslogcn" class="headerlink" title="Dnslogcn"></a>Dnslogcn</h4><ul><li>无需配置，但 <a href="http://dnslog.cn/">dnslog.cn不稳定</a></li></ul><h4 id="Alphalog"><a href="#Alphalog" class="headerlink" title="Alphalog"></a>Alphalog</h4><ul><li>需要构建服务 <a href="https://github.com/AlphabugX/Alphalog">alphalog</a></li></ul><h4 id="Xray"><a href="#Xray" class="headerlink" title="Xray"></a>Xray</h4><ul><li>需要搭建 <a href="https://docs.xray.cool/tools/xray/advanced/reverse">xray服务</a></li></ul><h3 id="相关目录介绍"><a href="#相关目录介绍" class="headerlink" title="相关目录介绍"></a>相关目录介绍</h3><p>目前是有四种目录， AfrogAddPoc:这个目录主要是里面如果添加一些Afrog工具的一些自动POC,可以放到这个文件夹，工具会自动识别</p><p>Dict：这个里面现在是放了两个文件一个是Login.txt 这个主要就是在进行查找后台路径的时候，对路径的一些匹配，另一个是一个子域名目录文件，在进行MassDns爆破的时候加载的字典。</p><p>Ehole：这和里面主要放的是在进行url访问，进行一些高危漏洞以及CMS进行指纹识别的规则。</p><p>MassDns：这个里面主要就是放MassDns进行爆破的应用程序和所需要的resolvers文件。</p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/20240401165726.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/20240401165726.png" alt="login"></a></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">Utils:</span><br><span class="line">  output: ""            # 导出文件位置</span><br><span class="line">cookies:</span><br><span class="line">  aiqicha: ''           # 爱企查   Cookie</span><br><span class="line">  tianyancha: ''        # 天眼查   Cookie</span><br><span class="line">  tycid: ''        # 天眼查   CApi ID(capi.tianyancha.com)</span><br><span class="line">  aldzs: ''             # 阿拉丁   TOKEN(see README)</span><br><span class="line">  qimai: ''             # 七麦数据  Cookie</span><br><span class="line">  binaryedge: ''# binaryedge  Cookie 免费查询250次</span><br><span class="line">  fullhunt: ''# Fullhunt Cookie 威胁平台 每月免费100次</span><br><span class="line">  hunter: ''# Hunter Cookie 威胁平台 每日免费500个数据</span><br><span class="line">  bevigil: ''           # Bevigil Cookie 威胁平台 每月免费50次</span><br><span class="line">  CensysToken: ''       # Censys Token 威胁平台 每月免费250次</span><br><span class="line">  CensysSecret: ''      # Censys Secret 威胁平台 每月免费250次</span><br><span class="line">  zoomeye: ''# ZooEye Cookie 每月1000条</span><br><span class="line">  whoisxmlapi: ''# whoisxmlapi Cookie 免费500次</span><br><span class="line">  virustotal: ''        # virustotal Cookie 每分钟4次 每天500次</span><br><span class="line">  shodan: ''# shodan Cookie </span><br><span class="line">  chaos: ''# chaos Key</span><br><span class="line">  leakix: ''# leakix Key</span><br><span class="line">  netlas: ''# Netlas key</span><br><span class="line">  quake: ''# Quake key</span><br><span class="line">  securitytrails: ''# securitytrails 需要企业邮箱，每个月50次</span><br><span class="line">  googleid: ''# google id 免费的API只能查询前100条结果,每天免费提供 100 次搜索查询</span><br><span class="line">  googleapi: ''# google Api 免费的API只能查询前100条结果,每天免费提供 100 次搜索查询</span><br><span class="line">  fofaKey: ''# Fofa key</span><br><span class="line">  fofaEmail: ''# Fofa Email</span><br><span class="line">  githubtoken: ''# Github Token </span><br><span class="line">  racent: ''# racent Token</span><br><span class="line">massdns:</span><br><span class="line">  resolvers: 'resolvers.txt'# resolvers 文件名称</span><br><span class="line">  wordlist: 'names.txt'# 子域名爆破文件名称</span><br><span class="line">  massdnsPath: 'massdns.exe'# Massdns工具名称</span><br><span class="line">email:</span><br><span class="line">  emailhunter: ''# Email hunter Token</span><br><span class="line">  intelxEmail: ''# Email Intelx Token</span><br><span class="line">  tombaKey: ''# Email tombaKey</span><br><span class="line">  tombaSecret: ''# Email tombaSecret</span><br><span class="line">port:</span><br><span class="line">  masscan:</span><br><span class="line">    masscanpath: 'masscan'    # Masscan放的位置如果是在环境变量中则默认就行</span><br><span class="line">    rate: 5000 # Masscan速率，速率如果太大很有可能直接带宽占满</span><br><span class="line">  nmappath: 'nmap'</span><br><span class="line">#Afrog配置</span><br><span class="line">reverse:</span><br><span class="line">  alphalog:</span><br><span class="line">    domain: ""</span><br><span class="line">    api_url: ""</span><br><span class="line">  ceye:</span><br><span class="line">    api-key: ""</span><br><span class="line">    domain: ""</span><br><span class="line">  dnslogcn:</span><br><span class="line">    domain: dnslog.cn</span><br><span class="line">  xray:</span><br><span class="line">    x_token: ""</span><br><span class="line">    domain: ""</span><br><span class="line">    api_url: http://x.x.x.x:8777</span><br></pre></td></tr></tbody></table></figure><h2 id="0x05、效果图"><a href="#0x05、效果图" class="headerlink" title="0x05、效果图"></a>0x05、效果图</h2><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/1711968305378.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/1711968305378.png" alt="login"></a></p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/1711968416627.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/1711968416627.png" alt="login"></a></p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/1711968830642.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/1711968830642.png" alt="login"></a></p><h2 id="0x06、参考"><a href="#0x06、参考" class="headerlink" title="0x06、参考"></a>0x06、参考</h2><p><a href="https://github.com/wgpsec/ENScan_GO">ENScan_GO</a></p><p><a href="https://github.com/hanc00l/nemo_go">nemo_go</a></p><p><a href="https://github.com/shmilylty/OneForAll">Oneforall</a></p><p><a href="https://github.com/0x727/ShuiZe_0x727">Shuize</a></p><p><a href="https://github.com/lc/gau">gau</a></p><p><a href="https://github.com/projectdiscovery/subfinder">subfinder</a></p><p><a href="https://github.com/EdgeSecurityTeam/EHole">Ehole</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;OneLong&quot;&gt;&lt;a href=&quot;#OneLong&quot; class=&quot;headerlink&quot; title=&quot;OneLong&quot;&gt;&lt;/a&gt;OneLong&lt;/h1&gt;&lt;p&gt;链接:&lt;a href=&quot;https://github.com/M0nster3/OneLong/&quot;&gt;</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>56-虚拟数据生成</title>
    <link href="https://yancy77.cn/2024/05/08/56-%E8%99%9A%E6%8B%9F%E6%95%B0%E6%8D%AE%E7%94%9F%E6%88%90/"/>
    <id>https://yancy77.cn/2024/05/08/56-%E8%99%9A%E6%8B%9F%E6%95%B0%E6%8D%AE%E7%94%9F%E6%88%90/</id>
    <published>2024-05-08T13:17:46.000Z</published>
    <updated>2024-05-21T10:06:55.660Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工具简介"><a href="#工具简介" class="headerlink" title="工具简介"></a>工具简介</h1><p>生成虚拟的身份证号码\手机号\银行卡\地址\姓名\邮箱等.</p><p>工具:utools</p><p>​数据模拟插件</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工具简介&quot;&gt;&lt;a href=&quot;#工具简介&quot; class=&quot;headerlink&quot; title=&quot;工具简介&quot;&gt;&lt;/a&gt;工具简介&lt;/h1&gt;&lt;p&gt;生成虚拟的身份证号码&#92;手机号&#92;银行卡&#92;地址&#92;姓名&#92;邮箱等.&lt;/p&gt;
&lt;p&gt;工具:utools&lt;/p&gt;
&lt;p&gt;​	数据模拟插件</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>55-指纹扫描-burp插件</title>
    <link href="https://yancy77.cn/2024/05/06/55-%E6%8C%87%E7%BA%B9%E6%89%AB%E6%8F%8F-burp%E6%8F%92%E4%BB%B6/"/>
    <id>https://yancy77.cn/2024/05/06/55-%E6%8C%87%E7%BA%B9%E6%89%AB%E6%8F%8F-burp%E6%8F%92%E4%BB%B6/</id>
    <published>2024-05-06T06:21:30.000Z</published>
    <updated>2024-05-06T06:38:47.412Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Burp-指纹识别"><a href="#Burp-指纹识别" class="headerlink" title="Burp 指纹识别"></a>Burp 指纹识别</h1><p>下载链接:<a href="https://github.com/shuanx/BurpFingerPrint/releases/download/v1.5/BurpFingerPrint.jar">https://github.com/shuanx/BurpFingerPrint/releases/download/v1.5/BurpFingerPrint.jar</a></p><p><a href="https://camo.githubusercontent.com/aec62dc0b68de45205213e0a66854fd631127f8745f8a42d6340d3028a2cd8f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417574686f722d536861756e2d626c7565"><img src="https://camo.githubusercontent.com/aec62dc0b68de45205213e0a66854fd631127f8745f8a42d6340d3028a2cd8f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417574686f722d536861756e2d626c7565" alt="img"></a> <a href="https://camo.githubusercontent.com/a0f773456863099bcf616a51290c7ea9df5f80dad5116aa42793f3f8cffd5ef7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a444b2d392b2d79656c6c6f77"><img src="https://camo.githubusercontent.com/a0f773456863099bcf616a51290c7ea9df5f80dad5116aa42793f3f8cffd5ef7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a444b2d392b2d79656c6c6f77" alt="img"></a> <a href="https://camo.githubusercontent.com/58e5f7dfab13434e66cf8dc2eb3c2c17e8ef39e24748293fad85aba83a4be899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545362538442541312545362542432538462545362539382541462545392539372541382545382538392542412545362539432541462d2545352542452538302545352542452538302545362539432538392545362538342538462545362538332542332545342542382538442545352538382542302545372539412538342545362538382539302545362539452539432d726564"><img src="https://camo.githubusercontent.com/58e5f7dfab13434e66cf8dc2eb3c2c17e8ef39e24748293fad85aba83a4be899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545362538442541312545362542432538462545362539382541462545392539372541382545382538392542412545362539432541462d2545352542452538302545352542452538302545362539432538392545362538342538462545362538332542332545342542382538442545352538382542302545372539412538342545362538382539302545362539452539432d726564" alt="img"></a></p><blockquote><p>攻击过程中，我们通常会用浏览器访问一些资产，该BurpSuite插件实现被动指纹识别+网站提取链接+OA爆破，可帮助我们发现更多资产。</p></blockquote><h2 id="功能如下"><a href="#功能如下" class="headerlink" title="功能如下"></a>功能如下</h2><blockquote><p>下述功能会在2024年5月底完成，如果有更好的建议都可以提，然后再麻烦点个Star，创作不易，打造最强指纹识别库和弱口令探测库</p></blockquote><ul><li>浏览器被动指纹识别，已集成Ehole指纹识别库</li><li>提取网站的URL链接和解析JS文件中的URL链接后进行指纹识别</li><li>开界面进行指纹库修改，可导入、导出、重置</li><li>优化已有指纹库，区分重点指纹和常见指纹，补充部分实战热门漏洞的指纹，方便直接一键getshell <a href="https://github.com/shuanx/BurpFingerPrint/blob/main/images/importantFinger.png"><img src="https://github.com/shuanx/BurpFingerPrint/raw/main/images/importantFinger.png" alt="img.png"></a></li><li>优化算法，提升性能、减少内存开销</li><li>使用sqlite存储扫描结果，放置因BurpSuite意外退出而导致数据丢失</li><li>收集github上常见的EXP工具，提起其含有EXP漏洞的指纹，当成重要指纹，一旦页面出现该指纹，就表示有戏有戏</li><li>1、<a href="https://github.com/R4gd0ll/I-Wanna-Get-All">https://github.com/R4gd0ll/I-Wanna-Get-All</a></li><li>2、<a href="https://github.com/YinWC/2021hvv_vul">https://github.com/YinWC/2021hvv_vul</a></li><li>3、<a href="https://github.com/zhzyker/vulmap">https://github.com/zhzyker/vulmap</a></li><li>4、<a href="https://github.com/SecWiki/CMS-Hunter">https://github.com/SecWiki/CMS-Hunter</a></li><li>5、<a href="https://github.com/coffeehb/Some-PoC-oR-ExP">https://github.com/coffeehb/Some-PoC-oR-ExP</a></li><li>6、<a href="https://github.com/White-hua/Apt_t00ls">https://github.com/White-hua/Apt_t00ls</a></li><li>7、<a href="https://github.com/biggerwing/nsfocus-rsas-knowledge-base">https://github.com/biggerwing/nsfocus-rsas-knowledge-base</a></li><li>优化GUI，指纹识别出来后，可以快速查看对应的利用EXP的github地址</li><li>OA类弱口令爆破</li><li>与本地Packer Fuzzer JS扫描器配合发现隐秘漏洞</li></ul><h2 id="支持检测指纹"><a href="#支持检测指纹" class="headerlink" title="支持检测指纹"></a>支持检测指纹</h2><ul><li>通达OA</li><li>致远OA</li><li>蓝凌OA</li><li>泛微OA</li><li>万户OA</li><li>东华OA</li><li>信呼OA</li><li>等等</li></ul><h2 id="支持弱口令爆破组件"><a href="#支持弱口令爆破组件" class="headerlink" title="支持弱口令爆破组件"></a>支持弱口令爆破组件</h2><ul><li>Apache Tomcat</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Burp-指纹识别&quot;&gt;&lt;a href=&quot;#Burp-指纹识别&quot; class=&quot;headerlink&quot; title=&quot;Burp 指纹识别&quot;&gt;&lt;/a&gt;Burp 指纹识别&lt;/h1&gt;&lt;p&gt;下载链接:&lt;a href=&quot;https://github.com/shuanx/Bu</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    <category term="burp插件" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/burp%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>54-敏感信息收集-burp插件</title>
    <link href="https://yancy77.cn/2024/05/05/54-%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-burp%E6%8F%92%E4%BB%B6/"/>
    <id>https://yancy77.cn/2024/05/05/54-%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-burp%E6%8F%92%E4%BB%B6/</id>
    <published>2024-05-05T11:30:50.000Z</published>
    <updated>2024-05-06T06:22:25.573Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BurpAPI查找器"><a href="#BurpAPI查找器" class="headerlink" title="BurpAPI查找器"></a>BurpAPI查找器</h1><p>下载链接:<a href="https://github.com/shuanx/BurpAPIFinder/releases/download/v1.7/BurpAPIFinder.jar">https://github.com/shuanx/BurpAPIFinder/releases/download/v1.7/BurpAPIFinder.jar</a></p><p><a href="https://camo.githubusercontent.com/aec62dc0b68de45205213e0a66854fd631127f8745f8a42d6340d3028a2cd8f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417574686f722d536861756e2d626c7565"><img src="https://camo.githubusercontent.com/aec62dc0b68de45205213e0a66854fd631127f8745f8a42d6340d3028a2cd8f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417574686f722d536861756e2d626c7565" alt="img"></a> <a href="https://camo.githubusercontent.com/a0f773456863099bcf616a51290c7ea9df5f80dad5116aa42793f3f8cffd5ef7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a444b2d392b2d79656c6c6f77"><img src="https://camo.githubusercontent.com/a0f773456863099bcf616a51290c7ea9df5f80dad5116aa42793f3f8cffd5ef7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a444b2d392b2d79656c6c6f77" alt="img"></a> <a href="https://camo.githubusercontent.com/58e5f7dfab13434e66cf8dc2eb3c2c17e8ef39e24748293fad85aba83a4be899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545362538442541312545362542432538462545362539382541462545392539372541382545382538392542412545362539432541462d2545352542452538302545352542452538302545362539432538392545362538342538462545362538332542332545342542382538442545352538382542302545372539412538342545362538382539302545362539452539432d726564"><img src="https://camo.githubusercontent.com/58e5f7dfab13434e66cf8dc2eb3c2c17e8ef39e24748293fad85aba83a4be899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545362538442541312545362542432538462545362539382541462545392539372541382545382538392542412545362539432541462d2545352542452538302545352542452538302545362539432538392545362538342538462545362538332542332545342542382538442545352538382542302545372539412538342545362538382539302545362539452539432d726564" alt="img"></a></p><blockquote><p>在攻防演练过程中，我们通常会使用浏览器访问一些资产，但很多未授权/敏感信息/越权隐匿在访问接口过html、JS文件等，通过该Burp插件我们可以：<br>1、通过某些接口可以发现进行未授权/越权获取到所有的账号密码、私钥、凭证<br>2、发现通过某接口可以枚举用户信息、修改密码、用户创建接口<br>3、发现登陆后台网址<br>4、发现在html、JS中漏洞账号密码或者云主机的Access Key和SecretKey<br>…</p></blockquote><p><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/main.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/main.png" alt="图片.png"></a></p><h2 id="功能如下"><a href="#功能如下" class="headerlink" title="功能如下"></a>功能如下</h2><blockquote><p>如果有更好的建议或者期待使用的，点个免费的星星</p></blockquote><ul><li>网站提取的URL链接并解析JS文件中的URL链接</li><li>前段界面可自行定义铭感关键词、敏感url匹配</li><li>界面可配置的开启主动探测探测、铭感信息获取</li><li>集成主题攻防场景敏感信息的指纹库<br><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/config.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/config.png" alt="图片.png"></a></li><li>集成HaE的敏感信息识别指纹<br><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/HaE.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/HaE.png" alt="图片.png"></a></li><li>集成APIKit的敏感信息识别指纹<br><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/APIKit.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/APIKit.png" alt="图片.png"></a></li><li>集成红薯的敏感信息识别指纹<br><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/sweetPotato.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/sweetPotato.png" alt="图片.png"></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;BurpAPI查找器&quot;&gt;&lt;a href=&quot;#BurpAPI查找器&quot; class=&quot;headerlink&quot; title=&quot;BurpAPI查找器&quot;&gt;&lt;/a&gt;BurpAPI查找器&lt;/h1&gt;&lt;p&gt;下载链接:&lt;a href=&quot;https://github.com/shuan</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    <category term="burp插件" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/burp%E6%8F%92%E4%BB%B6/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>53-nacs-自动扫描并且利用漏洞</title>
    <link href="https://yancy77.cn/2024/05/01/53-nacs-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%B9%B6%E4%B8%94%E5%88%A9%E7%94%A8%E6%BC%8F%E6%B4%9E/"/>
    <id>https://yancy77.cn/2024/05/01/53-nacs-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%B9%B6%E4%B8%94%E5%88%A9%E7%94%A8%E6%BC%8F%E6%B4%9E/</id>
    <published>2024-05-01T09:53:07.000Z</published>
    <updated>2024-05-01T11:01:16.594Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nacs-事件驱动的扫描器"><a href="#nacs-事件驱动的扫描器" class="headerlink" title="nacs 事件驱动的扫描器"></a>nacs 事件驱动的扫描器</h1><p>github:<a href="https://github.com/u21h2/nacs">https://github.com/u21h2/nacs</a></p><p>下载链接:<a href="https://github.com/u21h2/nacs/releases/tag/0.0.4">https://github.com/u21h2/nacs/releases/tag/0.0.4</a></p><p>[<a href="https://github.com/u21h2/nacs/blob/main/README.md">中文自述]</a> | [<a href="https://github.com/u21h2/nacs/blob/main/README_EN.md">英文自述文件]</a></p><p><a href="https://github.com/u21h2/nacs"><img src="https://camo.githubusercontent.com/3ec3266145c2f5f5b9eeecdeee15398f69fffe59d87cb53043aa3ec2f5aba0c1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f676f2d6d6f642f676f2d76657273696f6e2f75323168322f6e6163733f66696c656e616d653d676f2e6d6f64" alt="发布"></a> <a href="https://github.com/u21h2/nacs"><img src="https://camo.githubusercontent.com/6847718f24bd6b0de661635fef3bb95d170dcf748f85d38def9bc280bc15f4e4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e6163732d302e302e342d666636396234" alt="发布"></a> <a href="https://github.com/u21h2/nacs/releases"><img src="https://camo.githubusercontent.com/42dde9b88cc4ed858ff81187d443213d08910c2178c924988e82749cccf30074/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f75323168322f6e6163732f746f74616c" alt="img"></a> <a href="https://github.com/u21h2/nacs"><img src="https://camo.githubusercontent.com/e7a05da50fc9b9c1fa905d506a3d7078c798cd05c2859cfdece0a8e4c9f25d0c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f75323168322f6e616373" alt="img"></a></p><h2 id="✨-功能"><a href="#✨-功能" class="headerlink" title="✨ 功能"></a>✨ 功能</h2><ul><li>探活</li><li>服务扫描(常规&amp;非常规则端口)</li><li>poc探测(xray&amp;nuclei格式)</li><li>数据库等弱口令爆破</li><li>内网常见漏洞利用</li></ul><h2 id="⭐️亮点"><a href="#⭐️亮点" class="headerlink" title="⭐️亮点"></a>⭐️亮点</h2><ul><li>常见组件及常见HTTP请求头的log4j漏洞检测 <a href="https://github.com/u21h2/nacs/blob/main/utils/3.png"><img src="https://github.com/u21h2/nacs/raw/main/utils/3.png" alt="图像"></a></li><li>非常规范端口的服务扫描和使用（比如2222端口的ssh等等）</li><li>识别为公网IP时，从fofa搜索可用的资产作为扫描的补充（正在写）</li><li>自动识别简单web页面的输入框，用于弱口令爆破及log4j的检测(正在写)</li></ul><h1 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">环境配置</span><br><span class="line">    弱口令配置、要写入的公钥、反弹的地址、ceye的API等等</span><br><span class="line">探活</span><br><span class="line">    icmp ping</span><br><span class="line">资产初筛</span><br><span class="line">    确定哪个端口对应哪种服务，尤其是非常规端口</span><br><span class="line">漏洞打点(根据指纹信息发送到相应的模块)</span><br><span class="line">    可以RCE的非web服务 进行探测或者利用(redis、永恒之蓝等)</span><br><span class="line">    web服务 扫poc 如log4j</span><br><span class="line">    非web服务 未授权及爆破</span><br><span class="line">    web服务 自动爆破登录 (未实现)</span><br><span class="line">    重点服务 OA、VPN、Weblogic、蜜罐等</span><br></pre></td></tr></tbody></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo ./nacs -h IP或IP段 -o result.txt</span><br><span class="line">sudo ./nacs -hf IP或IP段的文件 -o result.txt</span><br><span class="line">sudo ./nacs -u url(支持http、ssh、ftp、smb等) -o result.txt</span><br><span class="line">sudo ./nacs -uf url文件 -o result.txt</span><br></pre></td></tr></tbody></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><ul><li><p>（1）添加目标IP：对10.15.196.135机器进行扫描，手动添加密码，并关闭反连平台的测试（即不测试log4j等）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./nacs -h 10.15.196.135 -passwordadd "xxx,xxx" -noreverse</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/u21h2/nacs/blob/main/utils/1.png"><img src="https://github.com/u21h2/nacs/raw/main/utils/1.png" alt="图像"></a> 可见发现了nacos的权限绕过漏洞，以及各服务爆破成功</p></li><li><p>（2）直接添加目标url：对10.211.55.7的ssh端口进行爆破，添加用户名密码第一测试，爆破成功后执行ifconfig；文档某靶场url尝试log4j漏洞</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./nacs -u "ssh://10.211.55.7:22,http://123.58.224.8:13099" -usernameadd test -passwordadd test -command ifconfig</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/u21h2/nacs/blob/main/utils/2.png"><img src="https://github.com/u21h2/nacs/raw/main/utils/2.png" alt="图像"></a> 可见两个log4j的poc都检测成功了，注入点在请求头的X-Api-Version字段；ssh爆破也成功了</p></li></ul><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-o 指定输出的日志文件</span><br><span class="line">-np 不探活, 直接扫端口</span><br><span class="line">-po 只使用这些端口</span><br><span class="line">-pa 添加这些端口</span><br><span class="line">-fscanpocpath fscan的poc路径 格式为"web/pocs/"</span><br><span class="line">-nucleipocpath nuclei的poc路径 格式为"xxx/pocs/**"</span><br><span class="line">-nopoc 不进行poc探测, 包括xray与nuclei</span><br><span class="line">-nuclei 使用nuclei进行探测(不强烈建议加上此参数,因为nuclei的poc太多了)</span><br><span class="line">-nobrute 不进行爆破</span><br><span class="line">-pocdebug poc探测时打印全部信息</span><br><span class="line">-brutedebug 爆破时打印全部信息</span><br><span class="line">-useradd 爆破时添加用户名</span><br><span class="line">-passwordadd 爆破时添加密码</span><br><span class="line">-noreverse 不使用反连平台</span><br><span class="line">-ceyekey 你自己的ceye token</span><br><span class="line">-ceyedomain 你自己的ceye domain</span><br></pre></td></tr></tbody></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>资料参考了以下优秀作品</p><ul><li>fscan <a href="https://github.com/shadow1ng/fscan%E4%B8%93%E6%B3%A8%E4%BA%8E%E5%86%85%E7%BD%91">https://github.com/shadow1ng/fscan专注于内网</a> web 和服务的 poc 服务的爆破</li><li>kscan <a href="https://github.com/lcvvvv/kscan%E4%B8%93%E6%B3%A8%E4%BA%8E%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%83%BD%E5%A4%9F%E6%8E%A2%E6%B5%8B%E5%88%B0%E9%9D%9E%E5%B8%B8%E8%A7%84%E7%AB%AF%E5%8F%A3%E5%BC%80%E7%9A%84%E6%9C%8D%E5%8A%A1%EF%BC%8C%E4%BE%8B%E5%A6%82">https://github.com/lcvvvv/kscan专注于信息收集能够探测到非常规端口开的服务，例如</a> 2222 的 ssh</li><li>dismap <a href="https://github.com/zhzyker/dismap%E8%B5%84%E4%BA%A7%E6%94%B6%E9%9B%86">https://github.com/zhzyker/dismap资产收集</a></li><li>拉登<a href="https://github.com/k8gege/LadonGo">https://github.com/k8gege/LadonGo</a></li><li>xray <a href="https://github.com/chaitin/xray%E4%B8%BB%E5%8A%A8/%E8%A2%AB%E5%8A%A8%E6%89%AB%E5%B8%B8%E8%A7%81web%E6%BC%8F%E6%B4%9E">https://github.com/chaitin/xray主动/被动扫常见web漏洞</a> 扫poc</li><li>虾虎鱼<a href="https://cn.gobies.org/">https://cn.gobies.org/</a></li><li>vulmap <a href="https://github.com/zhzyker/vulmap">https://github.com/zhzyker/vulmap</a></li><li>nali <a href="https://github.com/zu1k/nali%E6%9F%A5%E8%AF%A2IP%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%92%8CCDN%E6%9C%80%E6%88%90%E5%8A%9F">https://github.com/zu1k/nali查询IP地理信息和CDN最成功</a></li><li>ehole <a href="https://github.com/EdgeSecurityTeam/EHole%E9%87%8D%E7%82%B9%E6%94%BB%E5%87%BB%E7%B3%BB%E7%BB%9F%E6%8C%87%E7%BA%B9%E6%8E%A2%E6%B5%8B%E6%9A%82%E6%97%B6%E4%B8%8D%E8%83%BD%E7%94%A8%E4%BA%86">https://github.com/EdgeSecurityTeam/EHole重点攻击系统指纹探测暂时不能用了</a></li><li>Nuclei <a href="https://github.com/projectdiscovery/nuclei%E5%9F%BA%E4%BA%8Epoc%E7%9A%84%E5%BF%AB%E9%80%9F%E6%89%AB%E6%8F%8F">https://github.com/projectdiscovery/nuclei基于poc的快速扫描</a></li><li>pocV <a href="https://github.com/WAY29/pocV%E8%83%BD%E5%A4%9F%E6%89%AB%E6%8F%8Fx%E5%B0%84%E7%BA%BF%E5%92%8C%E7%BB%86%E8%83%9E%E6%A0%B8%E7%9A%84poc">https://github.com/WAY29/pocV能够扫描x射线和细胞核的poc</a></li><li>afrog <a href="https://github.com/zan8in/afrog">https://github.com/zan8in/afrog</a> CVE、CNVD、默认口令、信息泄露、指纹识别、未授权访问、任意文件读取、命令执行</li><li>啄木鸟<a href="https://github.com/Ciyfly/woodpecker">https://github.com/Ciyfly/woodpecker</a></li><li>xray-poc-scan-engine <a href="https://github.com/h1iba1/xray-poc-scan-engine">https://github.com/h1iba1/xray-poc-scan-engine</a></li><li>pocassist <a href="https://github.com/jweny/pocassist%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%96%E8%BE%91%E5%AF%BC%E5%85%A5%E5%92%8C%E8%BF%90%E8%A1%8C">https://github.com/jweny/pocassist可视化编辑导入和运行</a></li><li>Aopo <a href="https://github.com/ExpLangcn/Aopo">https://github.com/ExpLangcn/Aopo</a></li><li>SpringExploit <a href="https://github.com/SummerSec/SpringExploit">https://github.com/SummerSec/SpringExploit</a></li><li>fscanpoc补充<a href="https://github.com/chaosec2021/fscan-POC">https://github.com/chaosec2021/fscan-POC</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;nacs-事件驱动的扫描器&quot;&gt;&lt;a href=&quot;#nacs-事件驱动的扫描器&quot; class=&quot;headerlink&quot; title=&quot;nacs 事件驱动的扫描器&quot;&gt;&lt;/a&gt;nacs 事件驱动的扫描器&lt;/h1&gt;&lt;p&gt;github:&lt;a href=&quot;https://gi</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>52-zmap-45分钟即可全网ipv4端口</title>
    <link href="https://yancy77.cn/2024/04/30/52-zmap-45%E5%88%86%E9%92%9F%E5%8D%B3%E5%8F%AF%E5%85%A8%E7%BD%91ipv4%E7%AB%AF%E5%8F%A3/"/>
    <id>https://yancy77.cn/2024/04/30/52-zmap-45%E5%88%86%E9%92%9F%E5%8D%B3%E5%8F%AF%E5%85%A8%E7%BD%91ipv4%E7%AB%AF%E5%8F%A3/</id>
    <published>2024-04-30T11:40:38.000Z</published>
    <updated>2024-04-30T12:13:16.602Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ZMap：互联网扫描仪"><a href="#ZMap：互联网扫描仪" class="headerlink" title="ZMap：互联网扫描仪"></a>ZMap：互联网扫描仪</h1><p><a href="https://github.com/zmap/zmap/actions/workflows/cmake.yml/badge.svg"><img src="https://github.com/zmap/zmap/actions/workflows/cmake.yml/badge.svg" alt="构建状态"></a></p><p>ZMap 是一款快速单数据包网络扫描仪，专为互联网范围内的网络调查而设计。在具有千兆位以太网连接的典型台式计算机上，ZMap 能够在 45 分钟内扫描单个端口上的整个公共 IPv4 地址空间。通过 10gigE 连接和<a href="http://info.iet.unipi.it/~luigi/netmap/">netmap</a>或<a href="http://www.ntop.org/products/packet-capture/pf_ring/">PF_RING</a>，ZMap 可以在 5 分钟内扫描 IPv4 地址空间。</p><p>ZMap 可在 GNU/Linux、Mac OS 和 BSD 上运行。 ZMap目前已经完全实现了TCP SYN扫描、ICMP、DNS查询、UPnP、BACNET的探测模块，并且可以发送大量的<a href="https://github.com/zmap/zmap/blob/master/examples/udp-probes/README">UDP探测</a>。如果您希望进行更多复杂的扫描（例如，横幅抓取或 TLS 握手），请查看<a href="https://github.com/zmap/zgrab2">ZGrab 2</a>，它是 ZMap 的姊妹项目，它执行有状态的应用程序层握手。</p><h2 id="使用-ZMap"><a href="#使用-ZMap" class="headerlink" title="使用 ZMap"></a>使用 ZMap</h2><p>如果您以前没有使用过 ZMap，我们有一份分步入门<a href="https://github.com/zmap/zmap/wiki/Getting-Started-Guide">指南</a>，详细介绍了如何执行基本扫描。有关 ZMap 所有选项和更高级功能的文档可以在我们的<a href="https://github.com/zmap/zmap/wiki">GitHub Wiki</a>中找到。</p><p>如果您有疑问，请先查看我们的<a href="https://github.com/zmap/zmap/wiki/FAQ">常见问题解答</a>。还有疑问吗？在<a href="https://github.com/zmap/zmap/discussions/categories/q-a">Github 讨论</a>中询问社区。请不要针对使用或支持问题创建问题。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>ZMap 的最新稳定版本是版本<a href="https://github.com/zmap/zmap/releases/tag/v3.0.0">3.0.0</a>，支持 Linux、macOS 和 BSD。 ZMap <a href="https://github.com/zmap/zmap/releases/tag/v4.1.0-RC2">4.1.0-RC2</a>添加了对扫描多个端口的支持。</p><p><strong>从源代码构建 ZMap 的说明</strong>可以在<a href="https://github.com/zmap/zmap/blob/main/INSTALL.md">INSTALL</a>中找到。</p><p>blackarch中使用命令:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syu yay &amp;&amp; sudo yay -S zmap</span><br></pre></td></tr></tbody></table></figure><p>kali/parrot/debian系列安装命令:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install zmap</span><br></pre></td></tr></tbody></table></figure><p>centos/redhat系列安装命令</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y zmap</span><br></pre></td></tr></tbody></table></figure><h2 id="建筑学"><a href="#建筑学" class="headerlink" title="建筑学"></a>建筑学</h2><p>有关 ZMap 架构的更多信息以及与其他工具的比较可以在这两篇研究论文中找到：</p><ul><li><a href="https://zmap.io/paper.pdf">ZMap：快速互联网范围扫描及其安全应用</a></li><li><a href="https://jhalderm.com/pub/papers/zmap10gig-woot14.pdf">Zippier ZMap：10 Gbps 的互联网范围扫描</a></li></ul><p>如果您使用 ZMap 进行已发表的研究，请引用原始研究论文：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@inproceedings{durumeric2013zmap,</span><br><span class="line">  title={{ZMap}: Fast Internet-wide scanning and its security applications},</span><br><span class="line">  author={Durumeric, Zakir and Wustrow, Eric and Halderman, J Alex},</span><br><span class="line">  booktitle={22nd USENIX Security Symposium},</span><br><span class="line">  year={2013}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>引用 ZMap 论文有助于我们跟踪研究社区内的 ZMap 使用情况，并为持续开发寻求资金。</p><h2 id="许可和版权"><a href="#许可和版权" class="headerlink" title="许可和版权"></a>许可和版权</h2><p>ZMap 版权所有 2023 密歇根大学董事会</p><p>根据 Apache 许可证 2.0 版（“许可证”）获得许可；除非遵守许可证，否则您不得使用此文件。您可以在<a href="http://www.apache.org/licenses/LICENSE-2.0%E8%8E%B7%E5%8F%96%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%89%AF%E6%9C%AC">http://www.apache.org/licenses/LICENSE-2.0获取许可证副本</a></p><p>除非适用法律要求或书面同意，否则根据许可证分发的软件均按“原样”分发，不带任何明示或暗示的保证或条件。请参阅许可证，了解许可证下管理权限和限制的特定语言。</p><h1 id="入门指南"><a href="#入门指南" class="headerlink" title="入门指南"></a>入门指南</h1><p><a href="https://github.com/zmap/zmap/wiki/Getting-Started-Guide/_edit">编辑</a> <a href="https://github.com/zmap/zmap/wiki/_new">新一页</a></p><p>菲利普·斯蒂芬斯编辑了此页面3周前 · <a href="https://github.com/zmap/zmap/wiki/Getting-Started-Guide/_history">19次修订</a></p><p>边做边学最好？想要一些指导示例来演示使用 ZMap 进行基本扫描以入门吗？这是开始的地方！ ZMap 团队创建本指南是为了帮助新手习惯扫描，但如果仍有不清楚的地方，请随时在我们的<a href="https://github.com/zmap/zmap/discussions">Github 讨论</a>中提问。</p><p>我们将介绍：</p><ul><li>安装 ZMap</li><li>运行第一次扫描</li><li>定向输出</li><li>表现</li><li>其他扫描类型</li><li>默认阻止的子网</li><li>更多资源</li></ul><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>ZMap 可通过许多常见的包管理器获得，或者您也可以从源代码进行编译。完整说明可<a href="https://github.com/zmap/zmap/blob/main/INSTALL.md">在此处</a>获取。要检查您是否已正确安装所有内容，请运行<code>zmap --version</code>.目前我们建议使用版本 4.1.0-RC2。</p><h2 id="⚠️扫描速率警告"><a href="#⚠️扫描速率警告" class="headerlink" title="⚠️扫描速率警告"></a>⚠️扫描速率警告</h2><p>默认情况下，ZMap 将以您的网卡允许的速度进行扫描。由于 ZMap 直接组成以太网帧，因此它没有任何拥塞控制的概念（就像 TCP 默认情况下那样）。这有两个潜在的陷阱：</p><ul><li><em>目标网络 DoS：</em>如果您以非常高的速率扫描小型子网（例如，单个组织），您很容易意外地对目标网络进行 DOS。我们建议<em>不要</em>以 1Gbps 或更快的速度运行扫描，除非您要扫描整个互联网。如果您扫描单个网络，则以接近 10Mbps 的速率运行会更成功。</li><li><em>源网络过载：</em>无论您扫描多少台主机，您都可能面临<em>源</em>网络（即用于扫描 Internet 的网络）过载的风险。许多仅通告<em>吞吐量</em>数字（例如 1Gbps）的网络设备无法使用最小大小的数据包来处理全速（因为这需要处理设备的理论每秒最大数据包速率。）</li></ul><p>为了减少对目标网络的影响，ZMap 以随机顺序扫描范围内的 IP 地址。这意味着给定时间段内目标子网上的负载取决于 ZMap 的扫描速率和目标范围的大小。</p><p><img src="https://private-user-images.githubusercontent.com/23459798/288224881-8642008a-df16-40ac-a7ec-d9389964e7b3.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ0NjQ0OTEsIm5iZiI6MTcxNDQ2NDE5MSwicGF0aCI6Ii8yMzQ1OTc5OC8yODgyMjQ4ODEtODY0MjAwOGEtZGYxNi00MGFjLWE3ZWMtZDkzODk5NjRlN2IzLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MzAlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDMwVDA4MDMxMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWMyM2U1MWQ0MDU4MWI0YmY1ZmM5ODk0YWIzNjA4ZTc5NmU1NTgzZDYxNDUzOTgyNDg2YmNjOGNiNTVlOTNlMTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.iQ0ZNY5fL4LEUqZ5yCrWVzKPK4naw-G0HqqzIqn4McU" alt="目标子网负载"></p><p>在上图中，正在扫描的不同子网由彩色线表示。因此，如果扫描的目标较大，“良好”的扫描速率可能会更快，因为负载更加分散。</p><p>这不仅关系到成为无私的互联网公民，目标网络超载可能会导致：</p><ol><li>网络管理员封锁你的IP</li><li>路由器丢弃您的扫描数据包</li><li>剥夺其他 LAN 用户的互联网带宽</li></ol><p>#1 和 #2 都会导致扫描结果不准确，因为无法区分扫描无响应是由于不存在主机、防火墙阻止您的 IP 还是由于途中丢失数据包。更多详细信息，请参阅“提高扫描精度”部分。</p><p>我们在给定示例中根据扫描目标的大小列出了我们认为合理的带宽/探头节流参数，但一个好的经验法则是以特定应用程序所需的最慢速率进行扫描。</p><h2 id="⚠️线程警告"><a href="#⚠️线程警告" class="headerlink" title="⚠️线程警告"></a>⚠️线程警告</h2><p>ZMap CLI 提供了使用 来设置发送线程数量的功能<code>-T number_of_threads</code>。还会创建用于接收数据包和监视扫描进度的线程，因此 ZMap 所需的线程数就是<code>2 + T</code>其中 T 是您设置的线程数（默认为 4，除非主机的核心数 &lt; 4）。</p><p>作为一般规则，我们建议坚持 &lt;= 8 个发送线程，因为我们发现在此之后性能趋于稳定。此外，使用非常大的线程数 (&gt; 32) 不会<em>提高</em>扫描性能，并且可能会导致您遇到数据包发送问题或遇到数据包丢失，从而导致扫描结果不准确。</p><p>需要明确的是，创建比机器上的内核数量更多的线程的好处为零。发送线程都尽可能快地发送，并且增加线程超过核心数量将导致核心争用。</p><p>提示</p><p>与扫描速率一样，我们建议从较低的速率开始，然后根据需要增加，以确保扫描准确并最大限度地减少主机和网络压力。</p><h2 id="运行您的第一次扫描"><a href="#运行您的第一次扫描" class="headerlink" title="运行您的第一次扫描"></a>运行您的第一次扫描</h2><p>让我们开始第一次扫描。我们将通过端口 80 向<code>TCP SYN</code>子网中的所有 IP 发送一个数据包<code>171.67.70.0/23</code>，数据包发送速率为每秒 128 个数据包。如果该 IP/端口对上有任何运行，我们应该会收到一个<code>SYN ACK</code>数据包作为回复。</p><p>运行以下命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -r 128 171.67.70.0/23</span><br></pre></td></tr></tbody></table></figure><p>您应该得到一些类似于以下内容的输出：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">171.67.71.204</span><br><span class="line">171.67.71.128</span><br><span class="line">171.67.70.245</span><br><span class="line">171.67.71.191</span><br><span class="line">171.67.71.186</span><br><span class="line">171.67.71.202</span><br><span class="line">171.67.70.240</span><br><span class="line">171.67.70.242</span><br><span class="line">171.67.71.192</span><br><span class="line"> 0:05 42% (7s left); send: 512 done (127 p/s avg); recv: 91 17 p/s (17 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:06 50% (6s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (15 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:07 59% (5s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (12 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:08 67% (4s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (11 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:09 75% (3s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (10 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:10 84% (2s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (9 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:11 92% (1s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (8 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line">Dec 05 22:29:12.352 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><blockquote><p><strong>故障排除</strong></p><p>ZMap 非常擅长告诉您它遇到的任何问题。一些常见的包括：</p><ol><li>您的用户可能无权捕获默认接口上的流量，除非您使用<code>sudo</code>.</li><li>如果有多个网络适配器可供选择，您可能需要指定您的 MAC 地址。如果您看到类似的情况，请<code>--source-mac=XX:XX:XX:XX:XX:XX</code>在您运行的任何 ZMap 命令中使用该标志。</li><li>第一次运行 ZMap 时，ZMap 可能会提到<code>zmap: could not detect GW MAC address...</code>.按照其指示运行命令<code>curl zmap.io</code>，这应该初始化 GW MAC 地址，以便 ZMap 可以正确路由流量。</li></ol><p>如果您按照说明操作，使用的是受支持的操作系统，但<em>仍然遇到问题，请通过</em><a href="https://github.com/zmap/zmap/discussions">Github 讨论</a>与我们联系！</p></blockquote><p>我们可以在这里看到两种类型的输出：</p><ol><li>响应我们的<code>SYN</code>数据包的 IP</li><li>每秒打印详细的扫描状态（完成百分比、剩余秒数、发送/接收速率……）</li></ol><p>我们确实说过“输出类似于”，这提出了一个关键点，您的结果可能会略有不同。可访问 Internet 的主机可以在扫描之间打开/离线，并且您的硬件可能比我们正在运行的硬件更快/更慢。</p><p>将所有输出显示在一个屏幕中固然很好，但您可能希望将 IP/端口命中和状态信息分开。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p><code>-o</code>or标志<code>--output-file</code>允许我们指定 IP/端口对命中的位置。尝试<code>-o</code>像这样使用该标志：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -o "output.csv" -r 128 171.67.70.0/23</span><br></pre></td></tr></tbody></table></figure><p>您应该得到类似于以下内容的输出：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Dec 05 21:52:43.347 [INFO] zmap: By default, ZMap will output the unique IP addresses of hosts that respond successfully (e.g., SYN-ACK packet). This is equivalent to running ZMap with the following flags: --output-module=csv --output-fields=saddr --output-filter='success=1 &amp;&amp; repeat=0' --no-header-row. If you want all responses, explicitly set an output module or set --output-filter="".</span><br><span class="line">Dec 05 21:52:43.348 [INFO] dedup: Response deduplication method is full</span><br><span class="line">Dec 05 21:52:43.406 [INFO] recv: duplicate responses will be excluded from output</span><br><span class="line">Dec 05 21:52:43.406 [INFO] recv: unsuccessful responses will be excluded from output</span><br><span class="line"> 0:00 0%; send: 1 1 p/s (22 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:00 0%; send: 1 0 p/s (22 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:01 9%; send: 134 133 p/s (128 p/s avg); recv: 22 22 p/s (21 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 16.42%</span><br><span class="line"> 0:02 17%; send: 263 129 p/s (128 p/s avg); recv: 22 0 p/s (10 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 8.37%</span><br><span class="line"> 0:03 25%; send: 391 128 p/s (128 p/s avg); recv: 51 29 p/s (16 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 13.04%</span><br><span class="line"> 0:04 34%; send: 512 done (128 p/s avg); recv: 74 23 p/s (18 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 14.45%</span><br><span class="line"> 0:05 42% (7s left); send: 512 done (128 p/s avg); recv: 90 16 p/s (17 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:06 50% (6s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (14 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:07 59% (5s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (12 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:08 67% (4s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (11 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:09 75% (3s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (9 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:10 84% (2s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (8 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:11 92% (1s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (8 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line">Dec 05 21:52:55.412 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><p>新<code>output.csv</code>文件（位于运行扫描的文件夹中）现在应该包含在端口 80 上响应的所有 IP，并且我们<code>stdout</code>只会向我们显示扫描的状态，很好！</p><h2 id="表现"><a href="#表现" class="headerlink" title="表现"></a>表现</h2><p>ZMap 的一大卖点是它调查大型子网的速度。在千兆位以太网连接上，可以在 40 分钟内勘察单个端口上的整个 IPv4 空间！让我们讨论一下影响性能的各种因素。为此，我们需要更多地了解 ZMap 的运作方式。</p><h3 id="发送-接收解耦"><a href="#发送-接收解耦" class="headerlink" title="发送/接收解耦"></a>发送/接收解耦</h3><p>为了获得如此高性能，ZMap 在设计上是无状态的。这意味着一个/多个发送线程发送数据包，一个/多个接收线程记录任何回复，但没有线程间通信。正是由于缺乏通信/锁定，ZMap 才具有如此高的性能。它还有助于解释我们上面看到的输出。子网 ( <code>/23</code>) 有 512 个 IP，加上每秒 128 个数据包的扫描速率 ( <code>p/s</code>)，探测数据包（<code>SYN</code>默认为 TCP 数据包）的发送在 4 秒内结束。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0:04 34%; send: 512 done (128 p/s avg); recv: 74 23 p/s (18 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 14.45%</span><br></pre></td></tr></tbody></table></figure><p>默认情况下，接收线程在发送线程完成发送后等待 8 秒以等待任何<code>SYN ACK</code>数据包。我们发现 8 秒在等待<code>SYN ACK</code>来自远程主机的潜在慢速和等待时间不长以致回报递减之间取得了良好的平衡。根据您的需要，您可能希望使用 修改此值<code>--cooldown-time=10</code>。这将迫使接收线程等待 10 秒以接收任何落后的数据包。</p><p>请注意，在我们上面捕获的输出中，命中率在 后没有增加（至少在百分之一的粒度上）<code>0:05</code>，因此请记住收益递减。</p><h3 id="提高发送性能"><a href="#提高发送性能" class="headerlink" title="提高发送性能"></a>提高发送性能</h3><p>我们在上面的部分中介绍了接收线程将等待的恒定时间<code>SYN ACK</code>，<code>--cooldown-time</code>但这并没有解决发送的速率<code>SYN</code>。在较大的扫描中，这是将主导扫描运行时间的组件。</p><p>有了足够大的目标范围，就不用担心目标子网过载。为了进一步提高性能，我们需要添加更多线程。使用该<code>--sender-threads=N</code>标志来执行此操作：</p><h4 id="1-线程发送速率"><a href="#1-线程发送速率" class="headerlink" title="1 线程发送速率"></a><strong>1 线程发送速率</strong></h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -o "output.csv" -B 1G --sender-threads=1 171.67.70.0/2</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0:00 0%; send: 211 1 p/s (3.69 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">0:00 0%; send: 400 274 Kp/s (6.92 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">0:01 0%; send: 505473 505 Kp/s (478 Kp/s avg); recv: 5176 5.17 Kp/s (4.89 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.02%</span><br><span class="line">0:02 0%; send: 1113056 607 Kp/s (541 Kp/s avg); recv: 12962 7.78 Kp/s (6.30 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.16%</span><br><span class="line">0:03 0%; send: 1726996 614 Kp/s (565 Kp/s avg); recv: 20562 7.60 Kp/s (6.72 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.19%</span><br><span class="line">0:04 0%; send: 2335833 609 Kp/s (575 Kp/s avg); recv: 28571 8.01 Kp/s (7.04 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.22%</span><br><span class="line">0:05 0% (30m left); send: 2943829 608 Kp/s (582 Kp/s avg); recv: 36420 7.85 Kp/s (7.20 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.24%</span><br><span class="line">0:06 0% (30m left); send: 3550851 607 Kp/s (586 Kp/s avg); recv: 44122 7.70 Kp/s (7.28 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.24%</span><br><span class="line">0:07 0% (30m left); send: 4156961 606 Kp/s (589 Kp/s avg); recv: 52047 7.92 Kp/s (7.37 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.25%</span><br><span class="line">0:08 0% (30m left); send: 4756743 600 Kp/s (590 Kp/s avg); recv: 59834 7.79 Kp/s (7.42 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.26%</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><h4 id="4线程发送速率"><a href="#4线程发送速率" class="headerlink" title="4线程发送速率"></a><strong>4线程发送速率</strong></h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -o "output.csv" -B 1G --sender-threads=4 171.67.70.0/2</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0:00 0%; send: 360 1 p/s (5.31 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">0:00 0%; send: 586 388 Kp/s (8.58 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">0:01 0%; send: 1125395 1.12 Mp/s (1.05 Mp/s avg); recv: 11804 11.8 Kp/s (11.0 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.05%</span><br><span class="line">0:02 0%; send: 2401617 1.28 Mp/s (1.16 Mp/s avg); recv: 28248 16.4 Kp/s (13.7 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.18%</span><br><span class="line">0:03 0%; send: 3667077 1.27 Mp/s (1.19 Mp/s avg); recv: 44305 16.1 Kp/s (14.4 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.21%</span><br><span class="line">0:04 0%; send: 4932812 1.27 Mp/s (1.21 Mp/s avg); recv: 60886 16.6 Kp/s (15.0 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.23%</span><br><span class="line">0:05 1% (14m left); send: 6193698 1.26 Mp/s (1.22 Mp/s avg); recv: 77131 16.2 Kp/s (15.2 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.25%</span><br><span class="line">0:06 1% (14m left); send: 7452466 1.26 Mp/s (1.23 Mp/s avg); recv: 93092 16.0 Kp/s (15.3 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.25%</span><br><span class="line">0:07 1% (14m left); send: 8713445 1.26 Mp/s (1.23 Mp/s avg); recv: 109494 16.4 Kp/s (15.5 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.26%</span><br><span class="line">0:08 1% (14m left); send: 9970806 1.26 Mp/s (1.24 Mp/s avg); recv: 125807 16.3 Kp/s (15.6 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.26%</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p>我们可以看到，增加发送线程的数量提高了数据包发送速率，因此减少了运行时间（预期运行时间为 30 分钟，而预期运行时间为 14 分钟）。对于大多数用途，单个线程可能就足够了，但如果您需要提高性能、拥有高带宽上行链路，并且要扫描大部分 IPv4 空间，则可以使用该线程。</p><h2 id="提高扫描精度"><a href="#提高扫描精度" class="headerlink" title="提高扫描精度"></a>提高扫描精度</h2><p>ZMap 将以 的速率发送数据包<code>min(max rate your Network Interface Card (NIC) can sustain, the rate you specify with CLI flags)</code>。该速率<em>可能</em>高于您的 LAN 或目标子网的处理能力，从而导致数据包丢失和扫描结果不精确。</p><p>删除的<code>SYN</code>或<code>SYN ACK</code>将在 ZMap 中显示为相同，就好像根本不存在主机一样。由于 ZMap 直接组成以太网帧，因此无法保证交付。考虑到这一点，您可能希望降低<code>--rate=pps</code>或<code>--bandwidth=bps</code>确定您的命中率是否保持一致（表明您没有看到大量丢包/漏报）。另一种选择是增加<code>--probes=N (default = 1)</code>. “探测”是 ZMap 术语，指的是 ZMap 发送到潜在主机的数据包，您可以对每个 IP/端口对使用多个探测来尝试解决数据包丢失的情况。</p><h3 id="探测和重复数据删除"><a href="#探测和重复数据删除" class="headerlink" title="探测和重复数据删除"></a>探测和重复数据删除</h3><p>如上一节所述，您可能希望增加计数<code>--probes=N</code>以减少扫描中出现假阴性的可能性。然而，由于 ZMap 是无状态的，它如何防止给定 IP if<code>--probes=N</code>和 的多个日志<code>N &gt; 1</code>？</p><p>例如：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 --probes=5 -B 100M --dedup-method=none 171.67.70.0/10</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> 0:00 0%; send: 42 1 p/s (821 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.7.61</span><br><span class="line">171.67.7.61</span><br><span class="line">171.67.7.61</span><br><span class="line">171.67.7.61</span><br><span class="line">171.67.7.61</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p>每次响应探测时，都会记录下来。默认情况下，<code>--dedup-method=window</code>窗口大小为1M。这意味着 ZMap 将跟踪内存中最后 1M 探测响应，以避免多次记录命中。您可以使用<code>--dedup-method=full</code>，但要了解内存需求将随着扫描空间的大小而增加。</p><blockquote><p>注意：我们已经说过 ZMap 是无状态的，但在这里我们似乎与该声明相矛盾，提到存储最后 1M 探测响应😄。 ZMap 在发送线程和接收线程之间是无状态的，但 ZMap 的接收线程可以保存状态以免记录重复项。</p></blockquote><h3 id="预期最大发送速率"><a href="#预期最大发送速率" class="headerlink" title="预期最大发送速率"></a>预期最大发送速率</h3><p>在我们的实验室环境中，具有 1 Gbit 有线以太网的现成 Ubuntu 虚拟机每秒可处理多达 1.3-145 万个数据包。使用无线连接、低端硬件或 LAN 带宽争用都可能对您的性能产生负面影响。</p><h2 id="其他扫描"><a href="#其他扫描" class="headerlink" title="其他扫描"></a>其他扫描</h2><h3 id="获取-N-个可达主机"><a href="#获取-N-个可达主机" class="headerlink" title="获取 N 个可达主机"></a>获取 N 个可达主机</h3><p>在前面的示例 ( <code>sudo zmap -p 80 -o "output.csv" -B 1G --sender-threads=4 171.67.70.0/2</code>) 中，我们使用了给定的子网。然而，也许您只想在 IPv4 空间中获得 10 个可访问的主机。您可以使用<code>--max-results=10</code>或<code>-N 10</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -B 100M -N 10</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 0:00 0%; send: 0 0 p/s (0 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:00 0%; send: 0 0 p/s (0 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">104.252.154.129</span><br><span class="line">207.241.227.232</span><br><span class="line">34.102.143.17</span><br><span class="line">185.227.252.87</span><br><span class="line">88.218.93.178</span><br><span class="line">206.54.174.210</span><br><span class="line">50.3.14.225</span><br><span class="line">34.43.9.190</span><br><span class="line">184.84.170.239</span><br><span class="line">154.37.15.2</span><br><span class="line">Dec 05 22:19:22.112 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><h3 id="再现性和随机搜索"><a href="#再现性和随机搜索" class="headerlink" title="再现性和随机搜索"></a>再现性和随机搜索</h3><p>再次运行上面的命令…</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -B 100M -N 10</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 0:00 0%; send: 0 0 p/s (0 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:00 0%; send: 17 62.7 Kp/s (305 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">206.2.159.123</span><br><span class="line">47.251.50.46</span><br><span class="line">144.49.230.210</span><br><span class="line">34.220.245.127</span><br><span class="line">34.160.175.57</span><br><span class="line">216.180.232.245</span><br><span class="line">20.94.252.204</span><br><span class="line">172.65.73.3</span><br><span class="line">38.173.125.213</span><br><span class="line">172.67.201.97</span><br><span class="line">Dec 05 22:33:37.695 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><p>这很有趣，我们得到了一组完全不同的 IP！当您定义给定的搜索空间时，ZMap 会随机而不是线性地扫描它。当我们想要像之前的扫描一样搜索整个搜索空间时，这并不是什么大问题，因为我们最终仍然会得到相同的（无序的）结果集。然而，在这种情况下，ZMap 在给定搜索空间中找到前 10 个命中时返回。 ZMap 的随机搜索模式导致输出出现这种差异。</p><p>为什么要随机搜索？发送端和接收端都可能发生资源争用。我们希望尽可能分散放置在接收子网上的负载，因此通过随机搜索搜索空间，我们可以分散在给定时间放置在给定网络上的负载。</p><p>您可能希望扫描顺序具有可重复性，因此您可以使用 来<code>--seed=n</code>确保后续运行使用相同的顺序。</p><h3 id="多个端口"><a href="#多个端口" class="headerlink" title="多个端口"></a>多个端口</h3><blockquote><p>ZMap v.4.0.0 中添加</p></blockquote><p>您可以扫描多个端口。在这种情况下，ZMap 将向<code>SYN</code>每个 IP/端口对发送 TCP数据包。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 22,80 -B 100M -N 10 171.67.70.0/10</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 0:00 0%; send: 824 1 p/s (10.7 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:00 0%; send: 1163 623 Kp/s (15.0 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">125.6.184.89,80</span><br><span class="line">125.6.189.199,80</span><br><span class="line">125.62.85.202,22</span><br><span class="line">125.62.86.43,22</span><br><span class="line">125.103.118.1,22</span><br><span class="line">125.135.32.198,80</span><br><span class="line">125.136.125.185,80</span><br><span class="line">125.140.210.154,80</span><br><span class="line">125.143.130.34,80</span><br><span class="line">125.137.239.225,80</span><br><span class="line">Nov 28 23:15:06.878 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><h3 id="多个子网"><a href="#多个子网" class="headerlink" title="多个子网"></a>多个子网</h3><p>您也可以使用同一扫描来扫描多个子网。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 10.0.0.0/8 192.168.0.0/16 (scan both subnets on TCP/80)</span><br></pre></td></tr></tbody></table></figure><h2 id="ZMap-的配置文件"><a href="#ZMap-的配置文件" class="headerlink" title="ZMap 的配置文件"></a>ZMap 的配置文件</h2><p>默认情况下，ZMap 不会扫描<em>整个</em>IPv4 空间。有两个文件包含默认情况下不扫描的子网。您可以更改这些文件以显式扫描这些范围，但是在每种情况下，默认情况下不扫描它们都是有原因的。</p><h3 id="blocklist-conf"><a href="#blocklist-conf" class="headerlink" title="blocklist.conf"></a><code>blocklist.conf</code></h3><p><code>blocklist.conf</code>包括 RFC 定义的子网（例如多播、保留/未分配的<a href="https://tools.ietf.org/html/rfc1918">RFC 1918 ，默认情况下不扫描这些子网。如果您不希望扫描某些 IP/子网，可以添加到此文件。</a></p><h3 id="zmap-conf"><a href="#zmap-conf" class="headerlink" title="zmap.conf"></a><code>zmap.conf</code></h3><p>如果您发现自己指定了某些设置，例如每次运行 ZMap 时的最大带宽或黑名单文件，您可以在其中指定这些设置<code>/etc/zmap/zmap.conf</code>或使用自定义配置文件。</p><h3 id="在您的安装中查找配置文件"><a href="#在您的安装中查找配置文件" class="headerlink" title="在您的安装中查找配置文件"></a>在您的安装中查找配置文件</h3><p><em>您通常</em>可以在安装中找到这些文件，位置为<code>/etc/zmap/...conf</code>。</p><p>如果您使用包管理器安装 ZMap，它可能已将配置文件安装在其自己的位置。</p><p>例如，<code>homebrew</code>将配置文件安装在<code>/opt/homebrew/etc/zmap/</code>.如果您无法找到这些文件，请尝试<code>sudo find . -name "blocklist.conf" -maxdepth 5</code>在安装 ZMap 后从根目录运行。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ZMap：互联网扫描仪&quot;&gt;&lt;a href=&quot;#ZMap：互联网扫描仪&quot; class=&quot;headerlink&quot; title=&quot;ZMap：互联网扫描仪&quot;&gt;&lt;/a&gt;ZMap：互联网扫描仪&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/zmap/z</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>51-自动解析A记录</title>
    <link href="https://yancy77.cn/2024/04/29/51-%E8%87%AA%E5%8A%A8%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8Dip%E5%92%8Cip%E4%BF%A1%E6%81%AF/"/>
    <id>https://yancy77.cn/2024/04/29/51-%E8%87%AA%E5%8A%A8%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8Dip%E5%92%8Cip%E4%BF%A1%E6%81%AF/</id>
    <published>2024-04-29T10:38:06.000Z</published>
    <updated>2024-04-29T10:50:02.273Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-工具介绍"><a href="#1-工具介绍" class="headerlink" title="1.工具介绍"></a>1.工具介绍</h2><p>工具名称:Ajiexi</p><p>是由杨CC利用python开发的一款域名A记录解析工具,非常小巧.下载就能用.</p><h2 id="2-工具截图"><a href="#2-工具截图" class="headerlink" title="2.工具截图"></a>2.工具截图</h2><p><img src="https://pic.imgdb.cn/item/662f79370ea9cb1403f8a9d4.png" alt="img"></p><p>这里可能要稍微解释一下,因为源代码没了,就剩下一个exe了,是通过发送后端请求的方式,进行的解析.(之前上班的时候随手写的,所以会有上面的代码编写和打包人员.嘿嘿~)</p><h2 id="3-下载方式"><a href="#3-下载方式" class="headerlink" title="3.下载方式"></a>3.下载方式</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Sgyling/Yancy/blob/main/README.md #说明链接,这个不是下载链接,因为这一个不一定能用</span><br><span class="line">加入交流群,下载即可.</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-工具介绍&quot;&gt;&lt;a href=&quot;#1-工具介绍&quot; class=&quot;headerlink&quot; title=&quot;1.工具介绍&quot;&gt;&lt;/a&gt;1.工具介绍&lt;/h2&gt;&lt;p&gt;工具名称:Ajiexi&lt;/p&gt;
&lt;p&gt;是由杨CC利用python开发的一款域名A记录解析工具,非常小巧.下载</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>50-黑客GPT安装教程</title>
    <link href="https://yancy77.cn/2024/04/28/50-%E9%BB%91%E5%AE%A2GPT%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
    <id>https://yancy77.cn/2024/04/28/50-%E9%BB%91%E5%AE%A2GPT%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</id>
    <published>2024-04-28T15:33:32.000Z</published>
    <updated>2024-04-28T15:38:37.581Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1x个人使用环境"><a href="#1x个人使用环境" class="headerlink" title="1x个人使用环境"></a>1x个人使用环境</h1><p>parrotsec os,可以使用kali</p><h2 id="2x安装"><a href="#2x安装" class="headerlink" title="2x安装"></a>2x安装</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意:请提前开启VPN</span></span><br><span class="line">cd Desktop #进入桌面</span><br><span class="line">mkdir hackergpt #创建文件夹</span><br><span class="line">cd hackergpt #进入文件夹</span><br><span class="line">git clone https://github.com/Hacker-GPT/HackerGPT-2.0.git #进行克隆</span><br><span class="line">ls </span><br><span class="line">cd HakerGPT-2.0 </span><br><span class="line">npm --version #查看是否拥有npm</span><br><span class="line">node --version #查看是否存在node环境</span><br><span class="line">npm install #安装依赖</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="如果node版本低于18-请使用下方命令-如果高于18-请跳过"><a href="#如果node版本低于18-请使用下方命令-如果高于18-请跳过" class="headerlink" title="#如果node版本低于18,请使用下方命令,如果高于18,请跳过"></a>#如果node版本低于18,请使用下方命令,如果高于18,请跳过</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">sudo apt upgrade <span class="comment">#更新</span></span></span><br><span class="line">sudo apt remove npm #卸载npm</span><br><span class="line">sudo apt remove nodejs #删除node.js</span><br><span class="line">sudo apt autoremove #清理没用的安装包</span><br><span class="line">cd .. #返回上一层</span><br><span class="line">mkdir node #创建node文件夹</span><br><span class="line">cd node #进入</span><br><span class="line">wget https://nodejs.org/dist/v20.12.2/node-v20.12.2-linux-x64.tar.xz #下载</span><br><span class="line">tar -xvf node-v20.12.2-linux-x64.tar.xz #解压</span><br><span class="line">mv node-v20.12.2-linux-x64 nodejs #把文件夹名字换成node.js20</span><br><span class="line">cd ndoejs #进入</span><br><span class="line">sudo cp -r nodejs/ /usr/local/sbin/ #将文件复制到目录</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">为node及npm建立软链接，以便全局使用</span></span><br><span class="line">sudo ln -s /usr/local/sbin/nodejs/bin/node /usr/local/bin/</span><br><span class="line"></span><br><span class="line">sudo ln -s /usr/local/sbin/nodejs/bin/npm /usr/local/bin/</span><br></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ../HackerGPT-2.0/ #返回之前的目录</span><br><span class="line"></span><br><span class="line">npm install #安装依赖</span><br></pre></td></tr></tbody></table></figure><h3 id="安装必备软件"><a href="#安装必备软件" class="headerlink" title="#安装必备软件"></a>#安装必备软件</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker.io docker docker-compose  #安装容器</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果出现报错,请先运行:sudo apt install -f 再运行上方命令,如果还不行就安装缺乏的包,例如:sudo apt install python3-cached-property python3-docker python3-dockerpty python3-docopt python3-texttable</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果还不行,就更新:sudo apt upgrade,更新完再运行上面的命令行</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装完以后会重新启动,重启后打开终端<span class="built_in">cd</span>到目录,再运行下面的命令</span></span><br><span class="line">npm install tailwind-merge --save-dev #安装tailwind-merge模块</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">npm run build <span class="comment">#清理下缓存</span></span> </span><br><span class="line">/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" #安装brew</span><br><span class="line">echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' &gt;&gt; $HOME/.bash_profile #添加到环境变量</span><br><span class="line">eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)" #添加到环境变量</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启终端</span></span><br><span class="line">cd Desktop/HackerGpt/HackerGPT-2.0/ #进入路径</span><br><span class="line">brew install supabase/tap/supabase #安装supabase cli</span><br><span class="line">supabase start #启动supabase</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动后会有一些信息</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/662e5d170ea9cb1403f463fe.png" alt="img"></p><h2 id="填写秘钥"><a href="#填写秘钥" class="headerlink" title="#填写秘钥"></a>#填写秘钥</h2><h4 id="1-环境变量"><a href="#1-环境变量" class="headerlink" title="1.环境变量"></a>1.环境变量</h4><p>在本地 Chatbot UI 存储库根目录的终端中，运行：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp .env.local.example .env.local</span><br></pre></td></tr></tbody></table></figure><p>通过运行获取所需的值：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supabase status</span><br></pre></td></tr></tbody></table></figure><p>注意：使用<code>API URL</code>from <code>supabase status</code>for<code>NEXT_PUBLIC_SUPABASE_URL</code></p><p>现在转到您的<code>.env.local</code>文件并填写值。</p><p>如果设置了环境变量，它将禁用用户设置中的输入。</p><h4 id="2-SQL设置"><a href="#2-SQL设置" class="headerlink" title="2. SQL设置"></a>2. SQL设置</h4><p>在第一个迁移文件中，<code>supabase/migrations/20240108234540_setup.sql</code>您需要将 2 个值替换为上面获得的值：</p><ul><li><code>project_url</code>（第 53 行）：（<code>http://supabase_kong_chatbotui:8000</code>默认）如果您不更改文件<code>project_id</code>中的内容，则可以保持不变<code>config.toml</code></li><li><code>service_role_key</code>（第 54 行）：你通过运行获得了这个值<code>supabase status</code></li></ul><p>这可以防止存储文件未被正确删除的问题。</p><h2 id="安装Ollama"><a href="#安装Ollama" class="headerlink" title="#安装Ollama"></a>#安装Ollama</h2><p>运行命令:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://ollama.com/install.sh | sh #需要在同一个终端中运行,路径不变</span><br></pre></td></tr></tbody></table></figure><h2 id="本地运行"><a href="#本地运行" class="headerlink" title="#本地运行"></a>#本地运行</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run chat #运行</span><br></pre></td></tr></tbody></table></figure><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="#常见错误"></a>#常见错误</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">报错: ⨯ Error: Your project's URL and Key are required to create a Supabase client!</span><br><span class="line"></span><br><span class="line">Check your Supabase project's API settings to find these values</span><br><span class="line"></span><br><span class="line">https://supabase.com/dashboard/project/_/settings/api</span><br><span class="line">    at RootLayout (./app/[locale]/layout.tsx:113:87)</span><br><span class="line">    at AsyncLocalStorage.run (node:async_hooks:346:14)</span><br><span class="line">    at AsyncLocalStorage.run (node:async_hooks:346:14)</span><br><span class="line">    at Object.apply (./app/[locale]/layout.tsx:230:10)</span><br><span class="line">    at stringify (&lt;anonymous&gt;)</span><br><span class="line"> ⨯ Error: Your project's URL and Key are required to create a Supabase client!</span><br><span class="line"></span><br><span class="line">Check your Supabase project's API settings to find these values</span><br><span class="line"></span><br><span class="line">https://supabase.com/dashboard/project/_/settings/api</span><br><span class="line">    at RootLayout (./app/[locale]/layout.tsx:113:87)</span><br><span class="line">    at AsyncLocalStorage.run (node:async_hooks:346:14)</span><br><span class="line">    at AsyncLocalStorage.run (node:async_hooks:346:14)</span><br><span class="line">    at Object.apply (./app/[locale]/layout.tsx:230:10)</span><br><span class="line">    at stringify (&lt;anonymous&gt;)</span><br><span class="line">digest: "1122167698"</span><br></pre></td></tr></tbody></table></figure><p>如果出现这种错误,请在.env.local中添加变量:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NEXT_PUBLIC_SUPABASE_URL=这里写API URL</span><br><span class="line">NEXT_PUBLIC_SUPABASE_ANON_KEY=这里写anon key</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行supabase status后,可以看到</span></span><br></pre></td></tr></tbody></table></figure><h3 id="运行supabase-status后的信息为"><a href="#运行supabase-status后的信息为" class="headerlink" title="运行supabase status后的信息为:"></a>运行supabase status后的信息为:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">         API URL: http://127.0.0.1:54321</span><br><span class="line">     GraphQL URL: http://127.0.0.1:54321/graphql/v1</span><br><span class="line">  S3 Storage URL: http://127.0.0.1:54321/storage/v1/s3</span><br><span class="line">          DB URL: postgresql://postgres:postgres@127.0.0.1:54322/postgres</span><br><span class="line">      Studio URL: http://127.0.0.1:54323</span><br><span class="line">    Inbucket URL: http://127.0.0.1:54324</span><br><span class="line">      JWT secret: super-secret-jwt-token-with-at-least-32-characters-long</span><br><span class="line">        anon key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0</span><br><span class="line">service_role key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU</span><br><span class="line">   S3 Access Key: 625729a08b95bf1b7ff351a663f3a23c</span><br><span class="line">   S3 Secret Key: 850181e4652dd023b7a98c58ae0d2d34bd487ee0cc3254aed6eda37307425907</span><br><span class="line">       S3 Region: local</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1x个人使用环境&quot;&gt;&lt;a href=&quot;#1x个人使用环境&quot; class=&quot;headerlink&quot; title=&quot;1x个人使用环境&quot;&gt;&lt;/a&gt;1x个人使用环境&lt;/h1&gt;&lt;p&gt;parrotsec os,可以使用kali&lt;/p&gt;
&lt;h2 id=&quot;2x安装&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="教程" scheme="https://yancy77.cn/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>49-ip定位工具-IPAddressQuery</title>
    <link href="https://yancy77.cn/2024/04/26/49-ip%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7/"/>
    <id>https://yancy77.cn/2024/04/26/49-ip%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7/</id>
    <published>2024-04-26T05:57:29.000Z</published>
    <updated>2024-04-26T06:25:27.585Z</updated>
    
    <content type="html"><![CDATA[<h2 id="gitee下载链接"><a href="#gitee下载链接" class="headerlink" title="gitee下载链接:"></a>gitee下载链接:</h2><p><a href="https://gitee.com/codevibe/IPAddressQuery">https://gitee.com/codevibe/IPAddressQuery</a></p><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><p>对IP进行定位.支持使用proxychains4代理.</p><h2 id="显示信息"><a href="#显示信息" class="headerlink" title="显示信息:"></a>显示信息:</h2><p>经纬度</p><p>归属地</p><p>时区</p><p>服务提供商</p><p><img src="https://pic.imgdb.cn/item/662b44b00ea9cb1403960376.png" alt="img"></p><h2 id="下载和使用"><a href="#下载和使用" class="headerlink" title="下载和使用:"></a>下载和使用:</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/codevibe/IPAddressQuery.git #下载</span><br><span class="line">cd IPAddressQuery/main #进入该目录</span><br><span class="line">ls #查看所有文件</span><br><span class="line">python IPAddressQuery.py -h #帮助</span><br><span class="line">python IPAddressQuery.py -a &lt;ip地址&gt; #使用</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意:需要使用python3的版本,如果缺少某些库,则使用pip 安装即可</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/662b482b0ea9cb14039d84e9.png" alt="img"></p><h2 id="作者-codervibe"><a href="#作者-codervibe" class="headerlink" title="作者:codervibe"></a>作者:codervibe</h2><h2 id="交流群-660264846"><a href="#交流群-660264846" class="headerlink" title="交流群:660264846"></a>交流群:660264846</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;gitee下载链接&quot;&gt;&lt;a href=&quot;#gitee下载链接&quot; class=&quot;headerlink&quot; title=&quot;gitee下载链接:&quot;&gt;&lt;/a&gt;gitee下载链接:&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://gitee.com/codevibe/IPAd</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>APK自动扫描漏洞</title>
    <link href="https://yancy77.cn/2024/04/25/4-%E9%82%AE%E7%AE%B1%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/"/>
    <id>https://yancy77.cn/2024/04/25/4-%E9%82%AE%E7%AE%B1%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/</id>
    <published>2024-04-25T08:14:46.000Z</published>
    <updated>2024-04-26T06:05:06.679Z</updated>
    
    <content type="html"><![CDATA[<h1 id="EmailAll"><a href="#EmailAll" class="headerlink" title="EmailAll"></a>EmailAll</h1><h3 id="A-powerful-Email-Collect-tool"><a href="#A-powerful-Email-Collect-tool" class="headerlink" title="A powerful Email Collect tool"></a>A powerful Email Collect tool</h3><h2 id="0x1-介绍"><a href="#0x1-介绍" class="headerlink" title="0x1 介绍"></a>0x1 介绍</h2><p>😲 <code>EmailAll</code> is a powerful Email Collect tool —— 一款强大的邮箱收集工具</p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/example1.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/example1.png" alt="example1"></a></p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/example2.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/example2.png" alt="example2"></a></p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/PhoneBook&amp;Snov_result.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/PhoneBook&amp;Snov_result.png" alt="PhoneBook&amp;Snov_result"></a></p><h2 id="0x2-安装-使用"><a href="#0x2-安装-使用" class="headerlink" title="0x2 安装&amp;使用"></a>0x2 安装&amp;使用</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/Taonn/EmailAll.git</span><br><span class="line">$ cd EmailAll</span><br><span class="line">$ pip3 install -r requirements.txt</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">EmailAll is a powerful Email Collect tool</span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line">    python3 emailall.py check</span><br><span class="line">    python3 emailall.py --domain example.com run</span><br><span class="line">    python3 emailall.py --domains ./domains.txt run</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> python3 emailall.py --domain example.com run</span><br><span class="line">python3 emailall.py --domains ./domains.txt run</span><br></pre></td></tr></tbody></table></figure><p>最终结果保存至<code>result</code>目录，分为不同模块json数据文件和汇总<code>{domain}_All.json</code>文件</p><h2 id="0x3-配置"><a href="#0x3-配置" class="headerlink" title="0x3 配置"></a>0x3 配置</h2><p>proxy配置在 <a href="https://github.com/Taonn/EmailAll/blob/master/config/setting.py">setting.py</a>文件</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy={'http': '127.0.0.1:2333', 'https': '127.0.0.1:2333'}</span><br></pre></td></tr></tbody></table></figure><p>API配置在 <a href="https://github.com/Taonn/EmailAll/blob/master/config/api.py">api.py</a>文件</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># http://www.veryvp.com/</span><br><span class="line">veryvp_username = ''</span><br><span class="line">veryvp_password = ''</span><br><span class="line"></span><br><span class="line"># https://www.github.com</span><br><span class="line">github_token = ''</span><br><span class="line"></span><br><span class="line"># https://app.snov.io/</span><br><span class="line">snov_username = ''</span><br><span class="line">snov_password = ''</span><br><span class="line"></span><br><span class="line"># https://phonebook.cz/</span><br><span class="line">pb_key = ''</span><br></pre></td></tr></tbody></table></figure><ul><li><code>veryvp</code>和<code>snov</code>去网站免费注册</li><li><code>GitHub</code>的token去设置里创建一个即可</li><li><code>phonebook</code>的key访问<a href="https://phonebook.cz/%E7%84%B6%E5%90%8E%E6%9F%A5%E7%9C%8B%E6%BA%90%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%B0%86%60API_KEY%60%E7%9A%84%E5%80%BC%E5%A1%AB%E5%85%A5%E5%8D%B3%E5%8F%AF">https://phonebook.cz/然后查看源代码，将`API_KEY`的值填入即可</a></li></ul><h2 id="0x4-模块"><a href="#0x4-模块" class="headerlink" title="0x4 模块"></a>0x4 模块</h2><p>邮箱信息收集主要来源如下：</p><ul><li>Search<ul><li>Ask</li><li>Baidu</li><li>Bing</li><li>Google</li><li>QWant</li><li>SO</li><li>Sougou</li><li>GithubApi</li></ul></li><li>DataSets<ul><li>Email-Format</li><li>Skymem</li><li>Veryvp</li><li>PhoneBook</li><li>Snov</li></ul></li></ul><h3 id="2022-2-19"><a href="#2022-2-19" class="headerlink" title="2022.2.19"></a>2022.2.19</h3><p>更新PhoneBook、Snov模块</p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/PhoneBook&amp;Snov.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/PhoneBook&amp;Snov.png" alt="PhoneBook&amp;Snov_result"></a></p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/PhoneBook&amp;Snov_result.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/PhoneBook&amp;Snov_result.png" alt="PhoneBook&amp;Snov_result"></a></p><h3 id="2022-2-16"><a href="#2022-2-16" class="headerlink" title="2022.2.16"></a>2022.2.16</h3><p>更新GithubApi模块</p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/githubapi.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/githubapi.png" alt="githubapi"></a></p><blockquote><p>后续还会更新~</p></blockquote><p>更多信息请关注<a href="https://github.com/Taonn/EmailAll/blob/master/docs/changes.md">changes.md</a></p><h2 id="0x5-参考"><a href="#0x5-参考" class="headerlink" title="0x5 参考"></a>0x5 参考</h2><p>参考了以下优秀的工具，并修改而来:</p><ul><li><a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></li><li><a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a></li><li><a href="https://github.com/m4ll0k/Infoga">https://github.com/m4ll0k/Infoga</a></li></ul><p>感谢这些师傅们的分享！！！</p><h2 id="0x6-感谢"><a href="#0x6-感谢" class="headerlink" title="0x6 感谢"></a>0x6 感谢</h2><p>感谢网上开源的各大项目！！！</p><ul><li>特别感谢<a href="https://github.com/r00tSe7en">Se7en</a>师傅对于接口的补充</li></ul><h2 id="0x7-免责声明"><a href="#0x7-免责声明" class="headerlink" title="0x7 免责声明"></a>0x7 免责声明</h2><p> 本工具仅能在取得足够合法授权的企业安全建设中使用，在使用本工具过程中，您应确保自己所有行为符合当地的法律法规。 如您在使用本工具的过程中存在任何非法行为，您将自行承担所有后果，本工具所有开发者和所有贡献者不承担任何法律及连带责任。 除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。 您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;EmailAll&quot;&gt;&lt;a href=&quot;#EmailAll&quot; class=&quot;headerlink&quot; title=&quot;EmailAll&quot;&gt;&lt;/a&gt;EmailAll&lt;/h1&gt;&lt;h3 id=&quot;A-powerful-Email-Collect-tool&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>APK自动扫描漏洞</title>
    <link href="https://yancy77.cn/2024/04/23/3-APK%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/"/>
    <id>https://yancy77.cn/2024/04/23/3-APK%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/</id>
    <published>2024-04-23T08:14:46.000Z</published>
    <updated>2024-04-26T06:05:09.006Z</updated>
    
    <content type="html"><![CDATA[<h1 id="AppMessenger-appmsg"><a href="#AppMessenger-appmsg" class="headerlink" title="AppMessenger(appmsg)"></a>AppMessenger(appmsg)</h1><p>下载地址：<a href="https://github.com/sulab999/AppMessenger/releases/download/v4.6.3/appmsg4.6.3.zip">https://github.com/sulab999/AppMessenger/releases/download/v4.6.3/appmsg4.6.3.zip</a></p><p>jdk17下载地址:<a href="https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html">https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html</a></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><h2 id="解析APP"><a href="#解析APP" class="headerlink" title="解析APP"></a>解析APP</h2><p>一款适用于以APP病毒分析、APP漏洞挖掘、APP开发、HW行动/红队/渗透测试团队为场景的移动端(Android、iOS)辅助分析工具，可以帮助APP开发工程师、病毒分析师、漏洞/安全研究员提高工作效率，帮助渗透测试工程师、攻击队成员/红队成员快速收集到移动端中关键的资产信息并提供基本的信息输出,如：包名（packageName）、版本(versionName\versionCode)、应用签名(Signature)、文件MD5、SDK、URL、APP漏洞等信息。</p><h2 id="APK文件解析"><a href="#APK文件解析" class="headerlink" title="APK文件解析"></a>APK文件解析</h2><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/pic1.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/pic1.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/pic2.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/pic2.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/pic3.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/pic3.png" alt="img"></a></p><h2 id="IPA文件解析"><a href="#IPA文件解析" class="headerlink" title="IPA文件解析"></a>IPA文件解析</h2><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/ipa1.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/ipa1.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/ipa2.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/ipa2.png" alt="img"></a></p><h2 id="高级检测-目前只支持APK"><a href="#高级检测-目前只支持APK" class="headerlink" title="高级检测(目前只支持APK)"></a>高级检测(目前只支持APK)</h2><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/gj1.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/gj1.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/gj2.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/gj2.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/gj3.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/gj3.png" alt="img"></a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>本项目始于SULAB安全团队，并联合知识星球：移动安全</li><li>如果您觉得这个项目对您有用，请点击本项目右上角的”star”按钮。</li><li>如果您想持续跟进新的版本情况，请点击本项目右上角的”Watch”按钮。</li><li>会在知识星球发布内测或特别版</li><li>新的功能或者需求会持续进行开发，欢迎提BUG。</li><li>后期更新版本见releases</li></ul><h1 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h1><ul><li>APP病毒分析</li><li>APP漏洞挖掘</li><li>APP信息收集</li><li>日常渗透测试/攻防演练中对APP中涉及的关键资产信息收集，比如URL地址、IP地址、关键字等信息的采集等。</li></ul><h1 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍:"></a>功能介绍:</h1><ul><li>[√] 支持任意文件MD5识别</li><li>[√] 支持DEX、APK、IPA文件的信息收集</li><li>[√] 支持Android壳识别（识别准确率99%，业界一流）</li><li>[√] 支持基础检测：文件路径、包名、版本名、文件MD5、文件SHA1、DEX MD5、文件大小、allowbackup、debuggable、打包时间</li><li>[√] 支持解析APP权限信息、签名信息、支持系统版本等其他信息</li><li>[√] 支持敏感信息检测，如：url、ip等</li><li>[√] 支持Windows系统、MacOS系统、*nux系列的系统</li><li>[√] APP漏洞检测</li><li>[×] 一键对APK文件重打包</li></ul><h1 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h1><ul><li>App文件解析需要使用JAVA环境,JAVA版本11及以上</li><li>检测java版本命令:java –version</li><li>启动:java -jar appmsg.jar</li><li>Pro版已集成java环境可开箱即用</li></ul><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>pro版<br>可直接安装使用</p><p>v4.5之前<br>建议使用jdk9或jdk1.8</p><p>v4.5-v4.6.3版本<br>1、如有java环境，可双击apkmsg.jar，即可启动，直接将APP拖入即可自动识别<br>2、如果无法打开或显示有乱码，可下载配套的jdk11，运行里面写好的脚本，即可一键启动<br>3、MAC和Linux系统需要对运行脚本和JAVA_HOME里的文件授予可执行权限，命令如下<br>chmod 777 运行mac/运行linux.sh<br>chmod -R 777 JAVA_HOME<br>jdk11：<a href="https://github.com/sulab999/AppMessenger/releases/download/v4.6.2/jdk11.zip">https://github.com/sulab999/AppMessenger/releases/download/v4.6.2/jdk11.zip</a><br><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/start.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/start.png" alt="start"></a></p><h1 id="感谢“移动安全”知识星球的小伙伴，欢迎进群"><a href="#感谢“移动安全”知识星球的小伙伴，欢迎进群" class="headerlink" title="感谢“移动安全”知识星球的小伙伴，欢迎进群"></a>感谢“移动安全”知识星球的小伙伴，欢迎进群</h1><p><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/kefu.jpg" alt="zsxq"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;AppMessenger-appmsg&quot;&gt;&lt;a href=&quot;#AppMessenger-appmsg&quot; class=&quot;headerlink&quot; title=&quot;AppMessenger(appmsg)&quot;&gt;&lt;/a&gt;AppMessenger(appmsg)&lt;/h1&gt;&lt;p&gt;</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>渗透辅助工具-uTools</title>
    <link href="https://yancy77.cn/2024/04/22/2-utools/"/>
    <id>https://yancy77.cn/2024/04/22/2-utools/</id>
    <published>2024-04-22T08:14:46.000Z</published>
    <updated>2024-04-26T06:05:10.811Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.u.tools/">https://www.u.tools/</a></p><h1 id="为什么使用-uTools"><a href="#为什么使用-uTools" class="headerlink" title="为什么使用 uTools?"></a>为什么使用 uTools?<a href="https://www.u.tools/docs/guide/about-uTools.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-utools"></a></h1><p>uTools，作为一个多功能、现代化的工具平台，很难用一句话说完它能做什么？因为从提高工作效率的工具到定制化工作流程，uTools 提供了多样化的功能，满足不同用户需求，使其成为一款功能强大的个人效率助理。</p><p>本文旨在通过阐述 uTools 的设计理念，展现其独特之处。</p><h2 id="一、呼之即来，即用即走"><a href="#一、呼之即来，即用即走" class="headerlink" title="一、呼之即来，即用即走"></a>一、呼之即来，即用即走<a href="https://www.u.tools/docs/guide/about-uTools.html#%E4%B8%80%E3%80%81%E5%91%BC%E4%B9%8B%E5%8D%B3%E6%9D%A5-%E5%8D%B3%E7%94%A8%E5%8D%B3%E8%B5%B0"></a></h2><p>uTools 的设计理念是希望让你能随时随地使用 uTools，尽可能减少你的操作步骤，让你的工作节奏更加连续，减少中断感。</p><p>在任何窗口，你都可以使用快捷键 <code>Alt + 空格键</code> 呼出 uTools。不管是查询内容还是使用功能，你都能很快获得结果。使用完后，uTools 会失去焦点自动隐藏，你就可以继续当前的工作。</p><p>可以通过以下具体场景来体会到它的即用即走交互。</p><p><video width="960" controls="" poster="https://res.u-tools.cn/docs/video-cover.png" style="box-sizing: border-box; display: block; max-width: 100%; height: auto; color: rgb(60, 60, 67); font-family: &quot;Chinese Quotes&quot;, &quot;Inter var&quot;, Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"></video></p><h2 id="二、一切皆插件设计，无限可能"><a href="#二、一切皆插件设计，无限可能" class="headerlink" title="二、一切皆插件设计，无限可能"></a>二、一切皆插件设计，无限可能<a href="https://www.u.tools/docs/guide/about-uTools.html#%E4%BA%8C%E3%80%81%E4%B8%80%E5%88%87%E7%9A%86%E6%8F%92%E4%BB%B6%E8%AE%BE%E8%AE%A1-%E6%97%A0%E9%99%90%E5%8F%AF%E8%83%BD"></a></h2><p>uTools 是新一代的效率工具平台，它采用底座平台 + 插件应用的创新形式来满足电脑用户各式各样的需求。</p><p><video width="960" controls="" poster="https://res.u-tools.cn/docs/video-cover.png" style="box-sizing: border-box; display: block; max-width: 100%; height: auto; color: rgb(60, 60, 67); font-family: &quot;Chinese Quotes&quot;, &quot;Inter var&quot;, Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"></video></p><p><img src="https://res.u-tools.cn/docs/plugin-store-01.png" alt="插件应用市场"></p><p>开发者通过 [uTools 开发者工具](utools://uTools 开发者工具) 提交插件应用来满足不同用户的需求。</p><p>用户可以对插件进行评论和评分，还可以对自己喜欢的插件应用进行赞赏。有越来越多的开发者加入到这个平台，也不断涌现出新的插件，这将带来无限可能。</p><h2 id="三、极简设计，超轻量但功能强大"><a href="#三、极简设计，超轻量但功能强大" class="headerlink" title="三、极简设计，超轻量但功能强大"></a>三、极简设计，超轻量但功能强大<a href="https://www.u.tools/docs/guide/about-uTools.html#%E4%B8%89%E3%80%81%E6%9E%81%E7%AE%80%E8%AE%BE%E8%AE%A1-%E8%B6%85%E8%BD%BB%E9%87%8F%E4%BD%86%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7"></a></h2><h3 id="场景-1：快速查询内容"><a href="#场景-1：快速查询内容" class="headerlink" title="场景 1：快速查询内容"></a>场景 1：快速查询内容<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-1-%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E5%86%85%E5%AE%B9"></a></h3><p>想要搜索内容时，<code>Alt + 空格键</code> 呼出搜索框，输入搜索词，剪贴板、备忘快贴、本地文件等插件应用内中匹配到的数据就会显示出来，点击内容复制。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-09.png" alt="搜索内容"></p><h3 id="场景-2：快速翻译"><a href="#场景-2：快速翻译" class="headerlink" title="场景 2：快速翻译"></a>场景 2：快速翻译<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-2-%E5%BF%AB%E9%80%9F%E7%BF%BB%E8%AF%91"></a></h3><p>遇到不懂的英文，选中单词或句子，按下鼠标中键，弹出超级面板，即可看到翻译结果。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-10.png" alt="快速翻译"></p><h3 id="场景-3：随手计算"><a href="#场景-3：随手计算" class="headerlink" title="场景 3：随手计算"></a>场景 3：随手计算<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-3-%E9%9A%8F%E6%89%8B%E8%AE%A1%E7%AE%97"></a></h3><p>遇到需要计算时，<code>Alt + 空格键</code> 呼出搜索框，输入计算内容，即可看到计算结果。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-11.png" alt="计算稿纸"></p><h3 id="场景-4：快速处理图片"><a href="#场景-4：快速处理图片" class="headerlink" title="场景 4：快速处理图片"></a>场景 4：快速处理图片<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-4-%E5%BF%AB%E9%80%9F%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87"></a></h3><p>想要截图时，<code>Alt + 空格键</code> 呼出搜索框，输入截图，回车触发功能，截完图后，会自动粘贴到搜索框中，等待你下一步的选择，回车后获得结果。</p><p><img src="https://res.u-tools.cn/docs/what-is-keyword-05.png" alt="匹配图片"></p><h3 id="场景-5：聚合翻译"><a href="#场景-5：聚合翻译" class="headerlink" title="场景 5：聚合翻译"></a>场景 5：聚合翻译<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-5-%E8%81%9A%E5%90%88%E7%BF%BB%E8%AF%91"></a></h3><p>一键聚合多个翻译引擎的结果，让你轻松比较，选择最准确的翻译。</p><p><img src="https://res.u-tools.cn/docs/plugin-translator-00.png" alt="翻译"></p><h3 id="场景-6：OCR-文字识别"><a href="#场景-6：OCR-文字识别" class="headerlink" title="场景 6：OCR 文字识别"></a>场景 6：OCR 文字识别<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-6-ocr-%E6%96%87%E5%AD%97%E8%AF%86%E5%88%AB"></a></h3><p>将图片中的文字转化为可编辑的文本，大大提高了工作效率。</p><p><img src="https://res.u-tools.cn/docs/plugin-ocr-03.png" alt="OCR"></p><h3 id="场景-7：剪贴板"><a href="#场景-7：剪贴板" class="headerlink" title="场景 7：剪贴板"></a>场景 7：剪贴板<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-7-%E5%89%AA%E8%B4%B4%E6%9D%BF"></a></h3><p>它不仅能够保存你复制的文本、图片等信息，还能方便你随时调用，让复制粘贴变得高效而有序。</p><p><img src="https://res.u-tools.cn/docs/plugin-clipboard-00.png" alt="clipboard"></p><h3 id="场景-8：网页快开"><a href="#场景-8：网页快开" class="headerlink" title="场景 8：网页快开"></a>场景 8：网页快开<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-8-%E7%BD%91%E9%A1%B5%E5%BF%AB%E5%BC%80"></a></h3><p>一键直达你最爱的网站，让网络浏览变得前所未有的快捷。</p><p><img src="https://res.u-tools.cn/docs/plugin-open-web-06.png" alt="网页快开"></p><h3 id="场景-9：Markdown-笔记"><a href="#场景-9：Markdown-笔记" class="headerlink" title="场景 9：Markdown 笔记"></a>场景 9：Markdown 笔记<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-9-markdown-%E7%AC%94%E8%AE%B0"></a></h3><p>为那些喜欢简洁而强大工具的创作者量身打造。Markdown 笔记提供极佳的编辑体验，实时预览功能让你的创作过程更加流畅，而存储功能则确保你的每一个想法都能安全地保存。</p><p><img src="https://res.u-tools.cn/docs/plugin-markdown-00.png" alt="markdown"></p><h3 id="场景-10：备忘快贴"><a href="#场景-10：备忘快贴" class="headerlink" title="场景 10：备忘快贴"></a>场景 10：备忘快贴<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-10-%E5%A4%87%E5%BF%98%E5%BF%AB%E8%B4%B4"></a></h3><p>这不仅仅是一个备忘录，它是你的思维加速器。无论是灵光一现的文本、复杂的代码片段，还是那些需要保存的图片，备忘快贴都能迅速记录，让你的思绪不再飘散。</p><p><img src="https://res.u-tools.cn/docs/plugin-memo-14.png" alt="备忘快贴"></p><h3 id="场景-11：文件批量重命名"><a href="#场景-11：文件批量重命名" class="headerlink" title="场景 11：文件批量重命名"></a>场景 11：文件批量重命名<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-11-%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E9%87%8D%E5%91%BD%E5%90%8D"></a></h3><p>告别手动重命名的枯燥，一键整理你的文件，让文件管理变得井井有条。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-05.png" alt="文件批量重命名"></p><h3 id="场景-12：图片批量处理"><a href="#场景-12：图片批量处理" class="headerlink" title="场景 12：图片批量处理"></a>场景 12：图片批量处理<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-12-%E5%9B%BE%E7%89%87%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86"></a></h3><p>统一调整图片尺寸，批量格式转换，让你的图片管理工作变得轻松愉快。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-06.png" alt="图片批量处理"></p><h3 id="场景-13：JSON-编辑器"><a href="#场景-13：JSON-编辑器" class="headerlink" title="场景 13：JSON 编辑器"></a>场景 13：JSON 编辑器<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-13-json-%E7%BC%96%E8%BE%91%E5%99%A8"></a></h3><p>只需轻轻一点，杂乱无章的 JSON 数据就能变得井然有序。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-07.png" alt="JSON"></p><h3 id="场景-14：Javascript-文档速查"><a href="#场景-14：Javascript-文档速查" class="headerlink" title="场景 14：Javascript 文档速查"></a>场景 14：Javascript 文档速查<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-14-javascript-%E6%96%87%E6%A1%A3%E9%80%9F%E6%9F%A5"></a></h3><p>你的 JavaScript 指南，提供最新的 JavaScript 文档，帮你解决编程中的疑惑。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-08.png" alt="Javascript"></p><h3 id="场景-15：启动软件"><a href="#场景-15：启动软件" class="headerlink" title="场景 15：启动软件"></a>场景 15：启动软件<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-15-%E5%90%AF%E5%8A%A8%E8%BD%AF%E4%BB%B6"></a></h3><p>通过中文、拼音或拼音首字母快速启动软件。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-02.png" alt="微信"></p><h3 id="场景-16：搜索系统设置"><a href="#场景-16：搜索系统设置" class="headerlink" title="场景 16：搜索系统设置"></a>场景 16：搜索系统设置<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-16-%E6%90%9C%E7%B4%A2%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE"></a></h3><p>再也不用通过点击一步一步地找到设置选项了，一键直达。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-03.png" alt="蓝牙"></p><p><img src="https://res.u-tools.cn/docs/about-uTools-04.png" alt="触摸板"></p><h2 id="四、跨平台兼容性"><a href="#四、跨平台兼容性" class="headerlink" title="四、跨平台兼容性"></a>四、跨平台兼容性<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9B%9B%E3%80%81%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%85%BC%E5%AE%B9%E6%80%A7"></a></h2><p>uTools 支持 Windows、macOS 和 Linux 操作系统，这意味着用户可以在不同的操作系统上使用相同的工具和插件，保持一致的工作流程。</p><p>对于需要在不同环境下工作的用户，这种跨平台的兼容性尤为重要，它确保了用户可以在任何设备上都能高效地完成工作。</p><h2 id="插件名称"><a href="#插件名称" class="headerlink" title="插件名称:"></a>插件名称:</h2><h4 id="加密与解密"><a href="#加密与解密" class="headerlink" title="加密与解密"></a>加密与解密</h4><p>支持：各种加解密，反弹shell等。</p><p>详情：</p><p><img src="https://pic.imgdb.cn/item/662624810ea9cb14037d0cd4.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.u.tools/&quot;&gt;https://www.u.tools/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;为什么使用-uTools&quot;&gt;&lt;a href=&quot;#为什么使用-uTools&quot; class=&quot;headerlink&quot; title=&quot;为什么使用</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>神级别的远控工具-渗透必备的远控工具</title>
    <link href="https://yancy77.cn/2024/04/21/45-%E8%BF%9C%E7%A8%8B/"/>
    <id>https://yancy77.cn/2024/04/21/45-%E8%BF%9C%E7%A8%8B/</id>
    <published>2024-04-21T07:33:46.000Z</published>
    <updated>2024-04-26T06:03:27.303Z</updated>
    
    <content type="html"><![CDATA[<h1 id="版本：RdViewer-Pro-Lite"><a href="#版本：RdViewer-Pro-Lite" class="headerlink" title="版本：RdViewer Pro Lite"></a>版本：RdViewer Pro Lite</h1><p>一款支持自建服务器的免费远控神器</p><h2 id="V6-6-8版本更新"><a href="#V6-6-8版本更新" class="headerlink" title="V6.6.8版本更新"></a>V6.6.8版本更新</h2><p>1、界面显示优化</p><p>2、提高屏幕性能和稳定性，屏幕工具栏支持拖动</p><p>3、改进客户端安装、卸载功能</p><p>4、升级备注功能</p><p>5、改进和提升软件性能</p><h2 id="软件特点："><a href="#软件特点：" class="headerlink" title="软件特点："></a>软件特点：</h2><p>1、高清、流畅的远程屏幕，超低的内存使用，cpu占用近乎为0，性能最好。</p><p>2、窗口界面大小随意调，支持窗口记忆功能。</p><p>3、屏幕支持文件拖上传、下载，支持剪切板共享，支持沉浸式全屏模式。</p><p>4、详细的上线信息显示，支持实时设备检索、排序、分组和批量管理。</p><p>5、windows全平台支持,WinXP，Win7~Win11均可使用。</p><p>6、TCP/UDP双驱混合传输技术，支持硬件加速和内网直连。</p><p>7、支持自建服务器，自建节点，支持互联网部署和纯内网部署使用。</p><h2 id="支持系统和环境："><a href="#支持系统和环境：" class="headerlink" title="支持系统和环境："></a>支持系统和环境：</h2><p>WinXp-Win11所有操作系统，互联网和局域网均可部署。</p><p>软件包：<a href="https://rdviewer.oss-cn-hangzhou.aliyuncs.com/app/RdViewerPro.zip">https://rdviewer.oss-cn-hangzhou.aliyuncs.com/app/RdViewerPro.zip</a></p><p>安卓：<a href="https://rdviewer.oss-cn-hangzhou.aliyuncs.com/app/RdViewer.apk">https://rdviewer.oss-cn-hangzhou.aliyuncs.com/app/RdViewer.apk</a></p><p>苹果：<a href="https://apps.apple.com/cn/app/rdviewer/id1541109277">https://apps.apple.com/cn/app/rdviewer/id1541109277</a></p><h2 id="实用技巧："><a href="#实用技巧：" class="headerlink" title="实用技巧："></a>实用技巧：</h2><p>1、屏幕管理支持文件拖上传和拖下载，支持文本共享复制和粘贴。</p><p>2、管理端ctrl+l 隐藏、显示界面。</p><p>3、软件配置可在管理端界面顶部的设置按钮打开。</p><p><a href="https://user-images.githubusercontent.com/69678347/176330704-066dfd0d-379b-4ff3-8fa4-42c238fee69d.png"><img src="https://user-images.githubusercontent.com/69678347/176330704-066dfd0d-379b-4ff3-8fa4-42c238fee69d.png" alt="image"></a> <a href="https://user-images.githubusercontent.com/69678347/208793930-98c8e0e8-69db-4599-ae67-a13b8866c88c.png"><img src="https://user-images.githubusercontent.com/69678347/208793930-98c8e0e8-69db-4599-ae67-a13b8866c88c.png" alt="image"></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;版本：RdViewer-Pro-Lite&quot;&gt;&lt;a href=&quot;#版本：RdViewer-Pro-Lite&quot; class=&quot;headerlink&quot; title=&quot;版本：RdViewer Pro Lite&quot;&gt;&lt;/a&gt;版本：RdViewer Pro Lite&lt;/h1&gt;&lt;</summary>
      
    
    
    
    <category term="工具推荐" scheme="https://yancy77.cn/categories/%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
    
    <category term="渗透工具推荐" scheme="https://yancy77.cn/tags/%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
</feed>
